2021-08-10 06:53:50 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 06:53:50 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 06:53:50 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 06:53:50 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@415a4e70, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:50 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@415a4e70, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:50 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 06:53:50 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - request(1)
2021-08-10 06:53:51 [reactor-http-nio-1] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@415a4e70, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:51 [reactor-http-nio-1] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@415a4e70, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:51 [reactor-http-nio-1] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@415a4e70, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:51 [reactor-http-nio-1] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@415a4e70, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:51 [reactor-http-nio-1] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@415a4e70, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:51 [parallel-3] INFO  reactor.Flux.Map.10 - onNext(ElasticQueryServiceResponseModel(id=2, userId=2, text=test multi word2, createdAt=2021-07-23T18:25:43))
2021-08-10 06:53:51 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - request(31)
2021-08-10 06:53:52 [parallel-4] INFO  reactor.Flux.Map.10 - onNext(ElasticQueryServiceResponseModel(id=3, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 06:53:52 [parallel-1] INFO  reactor.Flux.Map.10 - onNext(ElasticQueryServiceResponseModel(id=1, userId=1, text=test multi word, createdAt=2021-07-23T18:25:43))
2021-08-10 06:53:52 [parallel-1] INFO  reactor.Flux.Map.10 - onComplete()
2021-08-10 06:53:57 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 06:53:57 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 06:53:57 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 06:53:57 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3ac2292b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:57 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3ac2292b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:57 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 06:53:57 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - request(1)
2021-08-10 06:53:57 [reactor-http-nio-1] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3ac2292b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:57 [reactor-http-nio-1] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3ac2292b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:57 [reactor-http-nio-1] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3ac2292b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 06:53:58 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3225717103734251334, userId=4010281248610602185, text=amet, velit suscipit Kafka Nam ipsum, createdAt=2021-08-03T16:04:42))
2021-08-10 06:53:58 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - request(31)
2021-08-10 06:53:58 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6137127743714412377, userId=5056804551792720891, text=rutrum sit amet, Kafka placerat. vitae, createdAt=2021-08-03T16:24:03))
2021-08-10 06:53:59 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3506082286866713167, userId=5067066612423649830, text=fringilla magna amet, Kafka suscipit Nam, createdAt=2021-08-03T15:14:01))
2021-08-10 06:53:59 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7682623383644015897, userId=8596014041332644705, text=consectetur elit. elit. Kafka elit. tempus, createdAt=2021-08-03T15:14:42))
2021-08-10 06:54:00 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6249555392221455048, userId=42861239373994495, text=fringilla suscipit magna Kafka vitae Nam, createdAt=2021-08-03T15:19:52))
2021-08-10 06:54:00 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7667374205904564908, userId=5669044106934100917, text=nisl Nam sit Kafka sit magna, createdAt=2021-08-03T15:38:12))
2021-08-10 06:54:01 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8763138054039441609, userId=3882002449548172310, text=ipsum Lorem amet, Kafka sit Nam, createdAt=2021-08-03T15:46:02))
2021-08-10 06:54:01 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7460606723380247369, userId=3203075613589893978, text=amet, magna fringilla Kafka fringilla elit., createdAt=2021-08-03T16:28:32))
2021-08-10 06:54:02 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7533331089273789558, userId=4010044321417556903, text=velit sit velit Kafka Nam elit., createdAt=2021-08-03T16:28:43))
2021-08-10 06:54:02 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4128619793914699299, userId=3627332649447317015, text=nisl ipsum fringilla Kafka fringilla adipiscing, createdAt=2021-08-03T16:38:13))
2021-08-10 06:54:03 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2811519377108601601, userId=3981768382476260459, text=sit euismod vitae Kafka placerat. dolor, createdAt=2021-08-03T16:54:23))
2021-08-10 06:54:03 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2469629352647079021, userId=7922777660612272165, text=vitae Nam Vivamus Kafka suscipit tempus, createdAt=2021-08-03T18:05:44))
2021-08-10 06:54:04 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6607605084558917529, userId=5971910479668497030, text=rutrum consectetur euismod Kafka consectetur tempus, createdAt=2021-08-03T18:28:24))
2021-08-10 06:54:04 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8951776861431086967, userId=599909341088753847, text=magna rutrum Vivamus Kafka velit nec, createdAt=2021-08-03T18:27:14))
2021-08-10 06:54:05 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5849277126303394003, userId=3589655343579963220, text=suscipit Nam suscipit Kafka Vivamus elit., createdAt=2021-08-03T18:54:44))
2021-08-10 06:54:05 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5852894809290524936, userId=2963358023046469324, text=sit placerat. nisl Kafka adipiscing tempus, createdAt=2021-08-03T19:06:45))
2021-08-10 06:54:06 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8143424723376797302, userId=1551740996310292319, text=consectetur Nam amet, Kafka dolor Vivamus, createdAt=2021-08-03T19:16:05))
2021-08-10 06:54:06 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8223797093627129307, userId=6249362656792523375, text=dolor amet, nisl Kafka vitae Lorem, createdAt=2021-08-03T19:21:05))
2021-08-10 06:54:07 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5802279217664601622, userId=6430983870855218718, text=Vivamus ipsum sit Kafka elit. velit, createdAt=2021-08-03T19:27:55))
2021-08-10 06:54:07 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3315225334712814933, userId=5196953839809566516, text=consectetur Lorem elit. Kafka amet, amet,, createdAt=2021-08-03T19:58:05))
2021-08-10 06:54:08 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8296555284094088254, userId=4453086746592844681, text=euismod suscipit Lorem Kafka rutrum rutrum, createdAt=2021-08-04T04:56:05))
2021-08-10 06:54:08 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3362664678970201406, userId=5257499415727103951, text=tempus dolor sit Kafka ipsum velit, createdAt=2021-08-04T05:57:56))
2021-08-10 06:54:09 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5486233351124336158, userId=1775493297451590444, text=suscipit elit. amet, Kafka vitae magna, createdAt=2021-08-04T06:27:59))
2021-08-10 06:54:09 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4820790780203836241, userId=8129726480152562123, text=dolor rutrum vitae Kafka amet, adipiscing, createdAt=2021-08-04T06:36:19))
2021-08-10 06:54:09 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:54:10 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4738158814142781926, userId=4150912831994924115, text=adipiscing tempus nisl Kafka placerat. amet,, createdAt=2021-08-04T06:39:09))
2021-08-10 06:54:10 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6462683905695734351, userId=2516190172816364654, text=placerat. amet, Nam Kafka Vivamus Vivamus, createdAt=2021-08-04T06:39:29))
2021-08-10 06:54:11 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8040644569187697215, userId=4971438761262631456, text=consectetur elit. suscipit Kafka adipiscing euismod, createdAt=2021-08-04T06:54:09))
2021-08-10 06:54:11 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7851909253691792457, userId=3636004441646828657, text=fringilla consectetur sit Kafka suscipit vitae, createdAt=2021-08-04T06:57:29))
2021-08-10 06:54:12 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8499258291330104239, userId=2283119479763398413, text=dolor Lorem tempus Kafka tempus ipsum, createdAt=2021-08-04T07:07:30))
2021-08-10 06:54:12 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2833888429031244494, userId=4876554214323967693, text=tempus velit sit Kafka nisl fringilla, createdAt=2021-08-04T09:04:48))
2021-08-10 06:54:13 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2415038622103511769, userId=3978478714868762676, text=tempus fringilla vitae Kafka amet, tempus, createdAt=2021-08-04T09:11:08))
2021-08-10 06:54:13 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4719442620107680473, userId=4740031371452146499, text=nisl magna nec Kafka consectetur euismod, createdAt=2021-08-04T09:25:28))
2021-08-10 06:54:14 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1478678886548346112, userId=4748090621005314480, text=sit amet, nec Kafka rutrum Lorem, createdAt=2021-08-04T09:28:48))
2021-08-10 06:54:14 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1413897974588145557, userId=2196781817122714441, text=amet, nisl nec Kafka adipiscing adipiscing, createdAt=2021-08-04T09:43:52))
2021-08-10 06:54:15 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3228534091614495486, userId=2672972394164435641, text=dolor Vivamus vitae Kafka velit amet,, createdAt=2021-08-04T10:14:13))
2021-08-10 06:54:15 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8309372588784429098, userId=8329485450988793375, text=nisl rutrum Vivamus Kafka suscipit dolor, createdAt=2021-08-04T10:38:53))
2021-08-10 06:54:16 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5021230353812432151, userId=3099706395164822104, text=adipiscing fringilla ipsum Kafka nec placerat., createdAt=2021-08-04T11:06:34))
2021-08-10 06:54:16 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5240386817356884281, userId=7367552352779811923, text=magna euismod sit Kafka adipiscing adipiscing, createdAt=2021-08-04T11:38:48))
2021-08-10 06:54:17 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3983428486220427139, userId=4699987726166678245, text=consectetur adipiscing sit Kafka rutrum nisl, createdAt=2021-08-04T11:45:58))
2021-08-10 06:54:17 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6036497246654668029, userId=1241251991800559323, text=magna nec magna Kafka tempus adipiscing, createdAt=2021-08-04T11:49:08))
2021-08-10 06:54:18 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3169928414545668526, userId=3603091490457122265, text=adipiscing dolor placerat. Kafka Lorem fringilla, createdAt=2021-08-04T11:54:38))
2021-08-10 06:54:18 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=77274902367075285, userId=7104422752845326783, text=velit nec vitae Kafka magna ipsum, createdAt=2021-08-04T12:36:29))
2021-08-10 06:54:19 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4218993852369439497, userId=760678123675841134, text=Lorem Nam amet, Kafka elit. amet,, createdAt=2021-08-04T12:45:59))
2021-08-10 06:54:19 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4144747582436625963, userId=4466637946596118349, text=elit. suscipit placerat. Kafka consectetur vitae, createdAt=2021-08-04T12:48:29))
2021-08-10 06:54:20 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5683844952830056190, userId=2806450489371258855, text=Vivamus Lorem fringilla Kafka sit euismod, createdAt=2021-08-04T12:48:59))
2021-08-10 06:54:20 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2570087526195331287, userId=7517863365383603944, text=Vivamus vitae placerat. Kafka Nam velit, createdAt=2021-08-04T12:52:09))
2021-08-10 06:54:21 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2576256741876753005, userId=8159460843021998705, text=sit elit. amet, Kafka dolor placerat., createdAt=2021-08-04T13:24:39))
2021-08-10 06:54:21 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4353090524270074844, userId=6938164006860358540, text=euismod consectetur consectetur Kafka elit. Lorem, createdAt=2021-08-04T14:13:20))
2021-08-10 06:54:21 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:54:22 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8628834435839815068, userId=1904595279175344174, text=nisl placerat. nisl Kafka velit adipiscing, createdAt=2021-08-09T09:54:03))
2021-08-10 06:54:22 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7163329228573321971, userId=8068231600325147099, text=placerat. tempus Nam Kafka adipiscing adipiscing, createdAt=2021-08-09T09:58:43))
2021-08-10 06:54:23 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5672514412057532734, userId=3510969968012209347, text=Lorem fringilla euismod Kafka fringilla consectetur, createdAt=2021-08-09T10:17:04))
2021-08-10 06:54:23 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5646386529683043521, userId=3864831237371862060, text=Vivamus rutrum ipsum Kafka Nam placerat., createdAt=2021-08-09T11:00:14))
2021-08-10 06:54:24 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2888002827948346563, userId=4804983783209362253, text=tempus placerat. Vivamus Kafka elit. nisl, createdAt=2021-08-09T11:01:54))
2021-08-10 06:54:24 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=649740583058731321, userId=2846690984523998422, text=nisl amet, magna Kafka sit velit, createdAt=2021-08-09T11:05:04))
2021-08-10 06:54:25 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1631846089328929599, userId=8894332503838767540, text=rutrum Lorem nisl Kafka fringilla consectetur, createdAt=2021-08-09T11:23:25))
2021-08-10 06:54:25 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6922891458173514807, userId=8825479584617248043, text=dolor Lorem elit. Kafka suscipit consectetur, createdAt=2021-08-09T11:29:05))
2021-08-10 06:54:26 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7846427817844300739, userId=3791484096462017689, text=adipiscing Vivamus amet, Kafka euismod velit, createdAt=2021-08-09T11:31:55))
2021-08-10 06:54:26 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5471337607827097695, userId=4915288264815097356, text=rutrum nec velit Kafka placerat. vitae, createdAt=2021-08-09T11:32:55))
2021-08-10 06:54:27 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=399810508711166504, userId=765533961121334492, text=placerat. suscipit euismod Kafka nec sit, createdAt=2021-08-09T11:58:35))
2021-08-10 06:54:27 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5645720640507196382, userId=6146066602247167897, text=nisl fringilla placerat. Kafka fringilla nec, createdAt=2021-08-09T12:01:35))
2021-08-10 06:54:28 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8103732846800921995, userId=3407358550433460239, text=fringilla nec Vivamus Kafka velit dolor, createdAt=2021-08-09T12:06:16))
2021-08-10 06:54:28 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1904178812871083651, userId=663575192743408805, text=consectetur nec suscipit Kafka tempus sit, createdAt=2021-08-09T12:15:36))
2021-08-10 06:54:29 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8316392862819763804, userId=5871718979904585212, text=Vivamus vitae rutrum Kafka tempus nisl, createdAt=2021-08-09T12:15:56))
2021-08-10 06:54:29 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4601561194421667253, userId=5764200667436878727, text=euismod dolor consectetur Kafka consectetur vitae, createdAt=2021-08-09T13:03:17))
2021-08-10 06:54:30 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5412715850946725907, userId=3459023053854501905, text=vitae sit amet, Kafka nec ipsum, createdAt=2021-08-09T13:19:07))
2021-08-10 06:54:30 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3285672384142582964, userId=3061267354467088227, text=velit vitae Vivamus Kafka fringilla magna, createdAt=2021-08-09T13:31:27))
2021-08-10 06:54:31 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6684611292257112188, userId=449382212818224790, text=Vivamus adipiscing nisl Kafka ipsum Nam, createdAt=2021-08-03T14:34:44))
2021-08-10 06:54:31 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2688525400309737446, userId=8129563129105070361, text=nisl nec Vivamus Kafka consectetur nec, createdAt=2021-08-03T14:34:54))
2021-08-10 06:54:32 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7975373904316177713, userId=59208127053631845, text=velit Nam placerat. Kafka fringilla euismod, createdAt=2021-08-03T14:44))
2021-08-10 06:54:32 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1904893579132406367, userId=4023164486620726462, text=euismod nisl Vivamus Kafka nec dolor, createdAt=2021-08-03T14:52:37))
2021-08-10 06:54:33 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7578841529815406532, userId=6578416526783315870, text=adipiscing placerat. euismod Kafka suscipit amet,, createdAt=2021-08-03T15:05:41))
2021-08-10 06:54:33 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=917985512184303271, userId=4790285960082376440, text=vitae tempus rutrum Kafka fringilla consectetur, createdAt=2021-08-03T15:08:41))
2021-08-10 06:54:33 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:54:34 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6959957217946608026, userId=2040269665547604522, text=adipiscing velit tempus Kafka magna magna, createdAt=2021-08-03T15:07:51))
2021-08-10 06:54:34 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6133199440388705506, userId=8754034086635490102, text=ipsum velit sit Kafka nisl Lorem, createdAt=2021-08-03T15:23:02))
2021-08-10 06:54:35 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2603219277516229564, userId=8699789650390115341, text=Vivamus fringilla elit. Kafka Vivamus sit, createdAt=2021-08-03T15:36:12))
2021-08-10 06:54:35 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8832821241179348926, userId=8420866118183619787, text=sit Nam nec Kafka dolor elit., createdAt=2021-08-03T15:42:52))
2021-08-10 06:54:36 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3013739497425171589, userId=2072139920703754058, text=euismod Nam dolor Kafka dolor nisl, createdAt=2021-08-03T15:48:42))
2021-08-10 06:54:36 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2892085453584061587, userId=7345023333629262086, text=nisl Lorem fringilla Kafka velit ipsum, createdAt=2021-08-03T17:12:03))
2021-08-10 06:54:37 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6351538099179758767, userId=8973220736071795420, text=tempus dolor consectetur Kafka elit. tempus, createdAt=2021-08-03T17:27:13))
2021-08-10 06:54:38 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2869441249861988096, userId=7803964993954321490, text=nisl adipiscing ipsum Kafka adipiscing magna, createdAt=2021-08-03T17:31:33))
2021-08-10 06:54:38 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2120635682163720633, userId=1388726098764385236, text=Vivamus Nam consectetur Kafka ipsum nec, createdAt=2021-08-03T17:39:03))
2021-08-10 06:54:39 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7989009399542092367, userId=8307491208155239240, text=nec amet, Vivamus Kafka euismod placerat., createdAt=2021-08-03T18:11:04))
2021-08-10 06:54:39 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7675562419409612123, userId=2306007807190949657, text=Lorem dolor placerat. Kafka tempus elit., createdAt=2021-08-03T18:17:44))
2021-08-10 06:54:40 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7222335016467064732, userId=7870249409143895324, text=rutrum euismod ipsum Kafka Nam placerat., createdAt=2021-08-03T18:23:24))
2021-08-10 06:54:40 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2297638620943640125, userId=336360526283609977, text=euismod sit Lorem Kafka ipsum placerat., createdAt=2021-08-03T18:22:54))
2021-08-10 06:54:41 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1795764445884037786, userId=837189581908996342, text=ipsum fringilla vitae Kafka Vivamus adipiscing, createdAt=2021-08-03T18:53:34))
2021-08-10 06:54:41 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3528467281794380229, userId=4397656295436922926, text=elit. vitae amet, Kafka adipiscing rutrum, createdAt=2021-08-03T18:53:04))
2021-08-10 06:54:42 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7124862142031280024, userId=6304245588111124232, text=consectetur Vivamus amet, Kafka fringilla nec, createdAt=2021-08-03T18:57:34))
2021-08-10 06:54:42 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2204338845663957712, userId=5688402741631478353, text=placerat. euismod amet, Kafka adipiscing amet,, createdAt=2021-08-03T18:57:44))
2021-08-10 06:54:43 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3119984349197622777, userId=7398691606990149750, text=vitae Vivamus Lorem Kafka nisl nec, createdAt=2021-08-03T19:38:55))
2021-08-10 06:54:43 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6230941046955122934, userId=3980527682259175317, text=euismod vitae fringilla Kafka magna consectetur, createdAt=2021-08-03T20:02:35))
2021-08-10 06:54:44 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1335546594860363163, userId=4965657828378529787, text=Vivamus velit magna Kafka nisl elit., createdAt=2021-08-03T20:25:06))
2021-08-10 06:54:44 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3859630812127327135, userId=8250639217649166360, text=rutrum vitae Vivamus Kafka ipsum Vivamus, createdAt=2021-08-03T20:26:46))
2021-08-10 06:54:45 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4030404842752177707, userId=4086746737995673559, text=adipiscing Nam Lorem Kafka velit elit., createdAt=2021-08-04T05:44:16))
2021-08-10 06:54:45 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6539562392819098663, userId=7987153896688886271, text=velit nisl magna Kafka tempus elit., createdAt=2021-08-04T06:40:39))
2021-08-10 06:54:46 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7515647984687590087, userId=7004894822328571140, text=amet, amet, nec Kafka consectetur suscipit, createdAt=2021-08-04T06:47:49))
2021-08-10 06:54:46 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:54:46 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5358278364350597617, userId=8058543835045579139, text=suscipit ipsum ipsum Kafka Nam magna, createdAt=2021-08-04T07:21))
2021-08-10 06:54:47 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4729920971125261548, userId=496617424873983842, text=rutrum elit. consectetur Kafka nisl adipiscing, createdAt=2021-08-04T07:26:10))
2021-08-10 06:54:47 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4373701585555093821, userId=851866175515277000, text=nec velit magna Kafka Lorem rutrum, createdAt=2021-08-04T07:53:21))
2021-08-10 06:54:48 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4899788913911077758, userId=852987202628419343, text=nec rutrum consectetur Kafka dolor nisl, createdAt=2021-08-04T08:07:51))
2021-08-10 06:54:48 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5678212333119057069, userId=6479621776122534595, text=adipiscing adipiscing ipsum Kafka placerat. vitae, createdAt=2021-08-04T08:11:51))
2021-08-10 06:54:49 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=261260240160686621, userId=584675037309415825, text=ipsum euismod vitae Kafka magna fringilla, createdAt=2021-08-04T08:10:41))
2021-08-10 06:54:49 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4127373758281658508, userId=2472658506720018590, text=nec sit Vivamus Kafka nec ipsum, createdAt=2021-08-04T09:17:58))
2021-08-10 06:54:50 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4612480281500534023, userId=798131679601710802, text=ipsum nisl tempus Kafka nisl Lorem, createdAt=2021-08-04T09:27:38))
2021-08-10 06:54:50 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3736089324494290873, userId=3312804231846439919, text=adipiscing amet, euismod Kafka velit consectetur, createdAt=2021-08-04T09:29:58))
2021-08-10 06:54:51 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1874319185608941995, userId=4663142497215361623, text=nisl tempus vitae Kafka tempus Lorem, createdAt=2021-08-04T09:50:43))
2021-08-10 06:54:51 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5302703765871693266, userId=4128688388201510335, text=tempus vitae Lorem Kafka consectetur amet,, createdAt=2021-08-04T10:11:23))
2021-08-10 06:54:52 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8431677098279060084, userId=1214875245535404771, text=tempus amet, adipiscing Kafka fringilla nec, createdAt=2021-08-04T10:28:23))
2021-08-10 06:54:52 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3282307346182178140, userId=4785263131988161618, text=dolor euismod adipiscing Kafka placerat. velit, createdAt=2021-08-04T11:05:14))
2021-08-10 06:54:53 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6312679797672843315, userId=6657046371225551864, text=rutrum amet, tempus Kafka vitae ipsum, createdAt=2021-08-04T11:12:54))
2021-08-10 06:54:53 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2614528117823927474, userId=8738681904172064644, text=adipiscing tempus ipsum Kafka rutrum suscipit, createdAt=2021-08-04T11:59:08))
2021-08-10 06:54:54 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=514702101142857159, userId=7479893598939186312, text=placerat. fringilla consectetur Kafka rutrum Nam, createdAt=2021-08-04T12:07:38))
2021-08-10 06:54:54 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7251898183772308, userId=8975086727477564449, text=vitae Nam placerat. Kafka velit velit, createdAt=2021-08-04T12:47:49))
2021-08-10 06:54:55 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9115631590584242337, userId=516185404746418389, text=nisl rutrum rutrum Kafka Nam rutrum, createdAt=2021-08-04T13:28:50))
2021-08-10 06:54:55 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8221494769355247806, userId=5619818987605852817, text=consectetur fringilla sit Kafka velit euismod, createdAt=2021-08-04T13:41:20))
2021-08-10 06:54:56 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8237845494101741537, userId=3955496052987051502, text=placerat. placerat. vitae Kafka elit. adipiscing, createdAt=2021-08-04T13:41))
2021-08-10 06:54:56 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3357086706247034327, userId=3734307357711188015, text=placerat. dolor ipsum Kafka sit Lorem, createdAt=2021-08-04T13:46:40))
2021-08-10 06:54:57 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4590822076882345214, userId=264552836965550403, text=Nam elit. nec Kafka consectetur fringilla, createdAt=2021-08-04T13:49:30))
2021-08-10 06:54:57 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=281119274138123196, userId=1990392213292071667, text=consectetur adipiscing rutrum Kafka ipsum suscipit, createdAt=2021-08-04T14:10:30))
2021-08-10 06:54:58 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5883932459886593261, userId=3068545765952555272, text=placerat. nisl tempus Kafka rutrum tempus, createdAt=2021-08-09T10:03:23))
2021-08-10 06:54:58 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:54:58 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6627651823146371502, userId=1348482887473073877, text=Nam suscipit Lorem Kafka tempus sit, createdAt=2021-08-09T10:10:14))
2021-08-10 06:54:59 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=506799352384305777, userId=7172298187863955750, text=Nam Nam magna Kafka suscipit dolor, createdAt=2021-08-09T10:27:44))
2021-08-10 06:54:59 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8068750207170846841, userId=1560931267617046197, text=Lorem amet, placerat. Kafka consectetur adipiscing, createdAt=2021-08-09T10:54:24))
2021-08-10 06:55:00 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8430702404004260855, userId=5458455811102348441, text=ipsum suscipit Nam Kafka fringilla rutrum, createdAt=2021-08-09T11:01:24))
2021-08-10 06:55:00 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4769035633366447767, userId=729170252888518034, text=euismod dolor placerat. Kafka nec nec, createdAt=2021-08-09T11:04:14))
2021-08-10 06:55:01 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1601870704002738446, userId=7915124894572302324, text=dolor ipsum consectetur Kafka elit. Lorem, createdAt=2021-08-09T11:28:35))
2021-08-10 06:55:01 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5171415671338496748, userId=1149338632234406282, text=vitae Nam Lorem Kafka consectetur sit, createdAt=2021-08-09T11:53:25))
2021-08-10 06:55:02 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4627019234248577552, userId=3560039538570130868, text=Nam rutrum euismod Kafka euismod tempus, createdAt=2021-08-09T11:54:05))
2021-08-10 06:55:02 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6788885683107782750, userId=5962875803881875929, text=elit. Nam fringilla Kafka amet, consectetur, createdAt=2021-08-09T12:29:06))
2021-08-10 06:55:03 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8161608370483726616, userId=4773121002921631735, text=magna consectetur consectetur Kafka consectetur sit, createdAt=2021-08-09T13:05:47))
2021-08-10 06:55:03 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7871994493199082550, userId=1422210137132034892, text=Lorem suscipit tempus Kafka rutrum suscipit, createdAt=2021-08-09T13:24:17))
2021-08-10 06:55:04 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4432968952182836365, userId=7082533560591114486, text=nec suscipit Lorem Kafka velit elit., createdAt=2021-08-09T13:27:37))
2021-08-10 06:55:04 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8040747259982487541, userId=1505325744487874050, text=vitae sit adipiscing Kafka dolor vitae, createdAt=2021-08-09T13:55:47))
2021-08-10 06:55:05 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4235666248149352721, userId=8584425355887273244, text=nec nisl nec dolor Kafka consectetur Nam, createdAt=2021-08-03T15:58:42))
2021-08-10 06:55:05 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7683852267909421221, userId=4688084461528303341, text=sit vitae Nam ipsum Kafka suscipit euismod, createdAt=2021-08-03T16:15:02))
2021-08-10 06:55:06 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5727662576770222947, userId=4220287153776448366, text=ipsum amet, amet, adipiscing Kafka nisl Nam, createdAt=2021-08-03T15:56:22))
2021-08-10 06:55:06 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5419841394756529431, userId=511726868305976967, text=magna nisl nisl rutrum Kafka amet, nisl, createdAt=2021-08-03T15:46:32))
2021-08-10 06:55:07 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4791939071628156765, userId=4365907722991044877, text=adipiscing fringilla magna Vivamus Kafka ipsum placerat., createdAt=2021-08-03T16:34:13))
2021-08-10 06:55:07 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8399286680661043784, userId=6070155477865062708, text=dolor nisl adipiscing Lorem Kafka Nam rutrum, createdAt=2021-08-03T16:33:43))
2021-08-10 06:55:08 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2237823390717004155, userId=1168161851138321730, text=Vivamus placerat. fringilla consectetur Kafka ipsum amet,, createdAt=2021-08-03T16:41:53))
2021-08-10 06:55:08 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5152053905391631160, userId=6905156379142641178, text=velit fringilla Nam velit Kafka Nam euismod, createdAt=2021-08-03T17:20:03))
2021-08-10 06:55:09 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=208573073408605350, userId=2572614552654177085, text=suscipit euismod vitae vitae Kafka fringilla magna, createdAt=2021-08-03T17:46:33))
2021-08-10 06:55:09 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3568173443372486202, userId=4921432196471484523, text=fringilla dolor Vivamus tempus Kafka sit tempus, createdAt=2021-08-03T17:47:24))
2021-08-10 06:55:10 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3929415176759138301, userId=3132681344518281456, text=nisl Vivamus amet, dolor Kafka magna placerat., createdAt=2021-08-03T17:50:24))
2021-08-10 06:55:10 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:55:10 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5746093243280225968, userId=4140146042973123956, text=elit. dolor magna suscipit Kafka rutrum Lorem, createdAt=2021-08-03T18:07:14))
2021-08-10 06:55:11 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3545422983163337430, userId=7784276147064133154, text=nisl nisl tempus adipiscing Kafka euismod adipiscing, createdAt=2021-08-03T18:16:14))
2021-08-10 06:55:11 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7474703314575518198, userId=975732969003443968, text=fringilla magna placerat. Nam Kafka nisl ipsum, createdAt=2021-08-03T18:15:24))
2021-08-10 06:55:12 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9214486333913840074, userId=5897706694864922738, text=Nam amet, Nam amet, Kafka Vivamus Lorem, createdAt=2021-08-03T18:24:14))
2021-08-10 06:55:12 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1523037783829053287, userId=6888467133050125423, text=consectetur velit velit elit. Kafka magna elit., createdAt=2021-08-03T18:34:54))
2021-08-10 06:55:13 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3473323362414413151, userId=915213525154021075, text=adipiscing elit. vitae euismod Kafka suscipit magna, createdAt=2021-08-03T18:43:44))
2021-08-10 06:55:13 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4931035698885503067, userId=2299549703124231429, text=nisl dolor Nam rutrum Kafka suscipit tempus, createdAt=2021-08-03T19:24:15))
2021-08-10 06:55:14 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3098817504635430873, userId=4380016192683145028, text=Vivamus nisl euismod Lorem Kafka sit sit, createdAt=2021-08-03T19:48:05))
2021-08-10 06:55:14 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=760676425222678376, userId=3539424286357603003, text=Nam Lorem dolor vitae Kafka elit. fringilla, createdAt=2021-08-03T20:07:45))
2021-08-10 06:55:15 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7368572742149914818, userId=3802157608092761179, text=tempus amet, rutrum tempus Kafka nec consectetur, createdAt=2021-08-04T05:15:55))
2021-08-10 06:55:15 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5536559440707705305, userId=756037560204113406, text=nisl adipiscing euismod Lorem Kafka sit adipiscing, createdAt=2021-08-04T05:34:36))
2021-08-10 06:55:16 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3179348678733006545, userId=2980509243031034202, text=ipsum dolor Lorem placerat. Kafka nec nec, createdAt=2021-08-04T05:49:16))
2021-08-10 06:55:16 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1641510536522542777, userId=1423894316995230488, text=sit nec Lorem sit Kafka amet, vitae, createdAt=2021-08-04T07:06:20))
2021-08-10 06:55:17 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4722134333918652223, userId=3760729858918205190, text=suscipit magna suscipit nisl Kafka euismod elit., createdAt=2021-08-04T07:10:20))
2021-08-10 06:55:17 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7339847723507793098, userId=1882585339410857198, text=ipsum Vivamus tempus vitae Kafka fringilla consectetur, createdAt=2021-08-04T07:13:10))
2021-08-10 06:55:18 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8008554421296771059, userId=6685805682065960459, text=euismod Lorem tempus Lorem Kafka nisl sit, createdAt=2021-08-04T07:21:30))
2021-08-10 06:55:18 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2839945426530011210, userId=7635356675569697635, text=vitae sit fringilla ipsum Kafka dolor Nam, createdAt=2021-08-04T07:52:01))
2021-08-10 06:55:19 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4437339971232134679, userId=8093214983530463391, text=sit rutrum suscipit tempus Kafka Vivamus placerat., createdAt=2021-08-04T08:00:41))
2021-08-10 06:55:19 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3760956014922344290, userId=8567695430372666502, text=placerat. suscipit ipsum dolor Kafka consectetur velit, createdAt=2021-08-04T08:33:41))
2021-08-10 06:55:20 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=428450765587751474, userId=4866858252929530636, text=ipsum Vivamus magna adipiscing Kafka ipsum nec, createdAt=2021-08-04T08:56:17))
2021-08-10 06:55:20 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=18658791675562073, userId=2881635454947266017, text=nec nec ipsum vitae Kafka sit nec, createdAt=2021-08-04T09:07:48))
2021-08-10 06:55:21 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4428244758166320331, userId=8038124670196815771, text=fringilla adipiscing fringilla sit Kafka vitae velit, createdAt=2021-08-04T09:19:48))
2021-08-10 06:55:21 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5575143692230050073, userId=7943010278268486177, text=euismod euismod elit. velit Kafka rutrum amet,, createdAt=2021-08-04T09:49:32))
2021-08-10 06:55:22 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7928221899864014273, userId=1978505868221916143, text=amet, fringilla nisl euismod Kafka magna nisl, createdAt=2021-08-04T10:29:23))
2021-08-10 06:55:22 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:55:22 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4378030018363394805, userId=4817058012634562184, text=suscipit Vivamus nisl sit Kafka magna placerat., createdAt=2021-08-04T10:35:03))
2021-08-10 06:55:23 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5765080361979426254, userId=4479513969638882467, text=velit euismod adipiscing sit Kafka magna Vivamus, createdAt=2021-08-04T11:09:04))
2021-08-10 06:55:23 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=11948773096283823, userId=6766946443454258693, text=placerat. magna Vivamus Lorem Kafka velit dolor, createdAt=2021-08-04T11:37:28))
2021-08-10 06:55:24 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6001553401824762438, userId=2284664987220113096, text=dolor consectetur magna Lorem Kafka amet, suscipit, createdAt=2021-08-04T11:42:38))
2021-08-10 06:55:24 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2972831520631140135, userId=6711757473994488542, text=Lorem elit. consectetur amet, Kafka consectetur tempus, createdAt=2021-08-04T11:41:58))
2021-08-10 06:55:25 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6363075590736075395, userId=386640925287411830, text=suscipit fringilla nisl nisl Kafka Lorem Lorem, createdAt=2021-08-04T12:18:48))
2021-08-10 06:55:25 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7089604451071194661, userId=470081517235172436, text=fringilla adipiscing consectetur vitae Kafka placerat. magna, createdAt=2021-08-04T12:39:19))
2021-08-10 06:55:26 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1828524554994905897, userId=5983054812232591202, text=nisl dolor amet, euismod Kafka nisl nec, createdAt=2021-08-04T12:51:09))
2021-08-10 06:55:26 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3695939678986265229, userId=5670601565925678366, text=Lorem rutrum fringilla vitae Kafka vitae fringilla, createdAt=2021-08-04T13:03:39))
2021-08-10 06:55:27 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8779633261284564271, userId=6349592527949374125, text=suscipit magna amet, rutrum Kafka velit velit, createdAt=2021-08-04T14:01:10))
2021-08-10 06:55:27 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3435050432023553554, userId=304989830776462525, text=ipsum fringilla velit placerat. Kafka elit. nisl, createdAt=2021-08-04T14:09:40))
2021-08-10 06:55:28 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8246981278607870012, userId=7679379439181588273, text=rutrum Lorem adipiscing velit Kafka Nam magna, createdAt=2021-08-04T14:18:20))
2021-08-10 06:55:28 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2100897349388090866, userId=3201150618569085900, text=suscipit amet, rutrum adipiscing Kafka dolor tempus, createdAt=2021-08-09T09:47:33))
2021-08-10 06:55:29 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6577191885020542514, userId=6328885536082643381, text=tempus Nam elit. Vivamus Kafka Vivamus magna, createdAt=2021-08-09T10:08:44))
2021-08-10 06:55:29 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4478425579821494299, userId=7672099271418675429, text=suscipit consectetur tempus magna Kafka Nam elit., createdAt=2021-08-09T10:29:54))
2021-08-10 06:55:30 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5427956176708534564, userId=1744841514864579876, text=magna placerat. Nam amet, Kafka sit elit., createdAt=2021-08-09T10:35:04))
2021-08-10 06:55:30 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2191482742880156514, userId=5206064088129504007, text=dolor Lorem placerat. fringilla Kafka placerat. velit, createdAt=2021-08-09T10:49:54))
2021-08-10 06:55:31 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8550588172924428064, userId=7575398080310570776, text=Lorem euismod nisl sit Kafka Lorem sit, createdAt=2021-08-09T11:15:05))
2021-08-10 06:55:31 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6774852594843786266, userId=5678895089923037749, text=nisl fringilla Nam fringilla Kafka euismod tempus, createdAt=2021-08-09T11:36:05))
2021-08-10 06:55:32 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4231207736147744861, userId=3030643129249711381, text=ipsum tempus suscipit fringilla Kafka rutrum consectetur, createdAt=2021-08-09T11:51:15))
2021-08-10 06:55:32 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7971419685803432350, userId=6385015575114272874, text=consectetur suscipit suscipit adipiscing Kafka euismod ipsum, createdAt=2021-08-09T11:58:25))
2021-08-10 06:55:33 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5944544124132648795, userId=9132362415937853457, text=placerat. vitae consectetur amet, Kafka vitae rutrum, createdAt=2021-08-09T12:45:36))
2021-08-10 06:55:33 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6350594153076939118, userId=1207991722719669550, text=Vivamus Lorem adipiscing tempus Kafka Vivamus placerat., createdAt=2021-08-09T12:52:16))
2021-08-10 06:55:34 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8733388656163847051, userId=7473883974299523244, text=fringilla ipsum tempus placerat. Kafka Nam tempus, createdAt=2021-08-09T12:57:17))
2021-08-10 06:55:34 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:55:34 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3655737703634002748, userId=4034401583807214179, text=tempus suscipit tempus placerat. Kafka adipiscing sit, createdAt=2021-08-09T13:04:37))
2021-08-10 06:55:35 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7955015989419497428, userId=6082841388884743440, text=vitae euismod ipsum tempus Kafka suscipit adipiscing, createdAt=2021-08-09T13:34:17))
2021-08-10 06:55:35 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3953343839034359818, userId=2701711881173695077, text=Nam rutrum adipiscing vitae Kafka euismod vitae, createdAt=2021-08-09T13:37:37))
2021-08-10 06:55:36 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5657426058474186434, userId=5108697791845394325, text=amet, nec magna dolor Kafka suscipit elit., createdAt=2021-08-09T13:45:27))
2021-08-10 06:55:36 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8367541151380916298, userId=1274390893726789954, text=nec sit sit vitae Kafka dolor elit., createdAt=2021-08-09T13:46:27))
2021-08-10 06:55:37 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5134448018038110719, userId=2410558962652838182, text=fringilla vitae rutrum nec Kafka ipsum amet,, createdAt=2021-08-03T14:36:44))
2021-08-10 06:55:37 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=139201509760027976, userId=2711757496545681543, text=consectetur Lorem placerat. ipsum Kafka sit ipsum, createdAt=2021-08-03T14:39:44))
2021-08-10 06:55:38 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2604349379553114637, userId=3904027512079753491, text=magna tempus euismod Lorem Kafka magna ipsum, createdAt=2021-08-03T14:45:10))
2021-08-10 06:55:38 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8915480230192754105, userId=8099266219866431987, text=fringilla magna amet, elit. Kafka vitae consectetur, createdAt=2021-08-03T14:59:31))
2021-08-10 06:55:39 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2972233868366765650, userId=1923833195660593331, text=placerat. nisl tempus dolor Kafka dolor Vivamus, createdAt=2021-08-03T15:07:41))
2021-08-10 06:55:39 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=285147447356677014, userId=170655722281469412, text=dolor Lorem Vivamus tempus Kafka fringilla Lorem, createdAt=2021-08-03T15:09:51))
2021-08-10 06:55:40 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6348736591971344006, userId=7920805588093244993, text=adipiscing ipsum sit nisl Kafka nisl Nam, createdAt=2021-08-03T15:10:51))
2021-08-10 06:55:40 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7951568281203509322, userId=2377694692819441379, text=ipsum placerat. Nam vitae Kafka elit. vitae, createdAt=2021-08-03T15:13:31))
2021-08-10 06:55:41 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8471039946335643011, userId=1342225354063736605, text=euismod magna nec fringilla Kafka consectetur nisl, createdAt=2021-08-03T15:15:12))
2021-08-10 06:55:41 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7942525711054075120, userId=6304838183299894068, text=dolor consectetur velit elit. Kafka magna Lorem, createdAt=2021-08-03T15:36:52))
2021-08-10 06:55:42 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7532270774108186825, userId=5914955843278715285, text=euismod sit placerat. placerat. Kafka vitae ipsum, createdAt=2021-08-03T16:02:12))
2021-08-10 06:55:42 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=502073646019824137, userId=3796890687689333804, text=vitae velit tempus fringilla Kafka sit euismod, createdAt=2021-08-03T16:14:02))
2021-08-10 06:55:43 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1270155380124872685, userId=6342196196089565690, text=rutrum tempus elit. tempus Kafka vitae velit, createdAt=2021-08-03T16:36:43))
2021-08-10 06:55:43 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7375484134392013406, userId=6783556388577785810, text=adipiscing adipiscing rutrum amet, Kafka fringilla Nam, createdAt=2021-08-03T16:58:23))
2021-08-10 06:55:44 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5602683003918061039, userId=5041171555241538893, text=nec Nam rutrum velit Kafka sit suscipit, createdAt=2021-08-03T17:32:13))
2021-08-10 06:55:44 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3027865833300794419, userId=4019614667231649649, text=nisl Lorem Vivamus elit. Kafka Nam vitae, createdAt=2021-08-03T17:37:33))
2021-08-10 06:55:45 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4068735781849641207, userId=824511723232263215, text=tempus elit. ipsum magna Kafka suscipit suscipit, createdAt=2021-08-03T18:07:34))
2021-08-10 06:55:45 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8963370467042906572, userId=610400704036339000, text=velit fringilla euismod tempus Kafka adipiscing adipiscing, createdAt=2021-08-03T18:11:54))
2021-08-10 06:55:46 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6139698987931683952, userId=8530894576220603966, text=placerat. Lorem ipsum elit. Kafka amet, magna, createdAt=2021-08-03T19:23:15))
2021-08-10 06:55:46 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:55:46 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4013276291541179037, userId=486645791756066674, text=nec amet, Nam Lorem Kafka consectetur velit, createdAt=2021-08-03T19:29:45))
2021-08-10 06:55:47 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2392445975742343882, userId=9161346232622564284, text=Lorem Vivamus suscipit nec Kafka fringilla fringilla, createdAt=2021-08-03T20:16:16))
2021-08-10 06:55:47 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1497505790909801883, userId=6630920194221888588, text=magna Nam elit. sit Kafka rutrum Lorem, createdAt=2021-08-04T05:12:05))
2021-08-10 06:55:48 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7622327932951997154, userId=1361647466533876325, text=velit rutrum Lorem Lorem Kafka nisl velit, createdAt=2021-08-04T06:32:19))
2021-08-10 06:55:48 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3673016521209764960, userId=2278821796293294828, text=tempus fringilla amet, suscipit Kafka euismod tempus, createdAt=2021-08-04T07:17:30))
2021-08-10 06:55:49 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8521404402187367889, userId=1305101820060879366, text=suscipit rutrum tempus suscipit Kafka magna velit, createdAt=2021-08-04T07:20:10))
2021-08-10 06:55:49 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5537001974070152284, userId=934886143914241454, text=rutrum fringilla sit nec Kafka nisl consectetur, createdAt=2021-08-04T07:24))
2021-08-10 06:55:50 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7250617460834214053, userId=4079945670661363257, text=ipsum nisl amet, suscipit Kafka tempus fringilla, createdAt=2021-08-04T08:14:11))
2021-08-10 06:55:50 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8883463452943785963, userId=3584265746765793801, text=Lorem velit Lorem elit. Kafka magna dolor, createdAt=2021-08-04T09:00:27))
2021-08-10 06:55:51 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5447370509615741645, userId=22616522292841686, text=placerat. vitae suscipit velit Kafka euismod rutrum, createdAt=2021-08-04T09:14:58))
2021-08-10 06:55:51 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4818021458469922839, userId=40484990237677188, text=fringilla adipiscing euismod velit Kafka vitae elit., createdAt=2021-08-04T09:26:28))
2021-08-10 06:55:52 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2988826650077282835, userId=4434577490499365073, text=dolor consectetur consectetur rutrum Kafka amet, Lorem, createdAt=2021-08-04T09:47:42))
2021-08-10 06:55:52 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2667902563621831188, userId=6694722600450300644, text=nec vitae amet, adipiscing Kafka Lorem Nam, createdAt=2021-08-04T09:57:03))
2021-08-10 06:55:53 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4151526060099296675, userId=8808006367199734204, text=dolor vitae nec sit Kafka fringilla suscipit, createdAt=2021-08-04T10:00:03))
2021-08-10 06:55:53 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1680108434085513510, userId=3021175983053724868, text=nec placerat. placerat. Lorem Kafka velit sit, createdAt=2021-08-04T10:11:53))
2021-08-10 06:55:54 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7538436687196102728, userId=5963179791496167984, text=fringilla magna Lorem nec Kafka adipiscing sit, createdAt=2021-08-04T10:23:33))
2021-08-10 06:55:54 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2891862360305456984, userId=2783790227074809156, text=amet, Vivamus adipiscing nec Kafka elit. elit., createdAt=2021-08-04T10:23:53))
2021-08-10 06:55:55 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6149867874003596882, userId=8741218886411293201, text=vitae euismod Lorem magna Kafka nisl nec, createdAt=2021-08-04T10:24:23))
2021-08-10 06:55:55 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7600350868966927296, userId=2531429623234358192, text=fringilla Nam nec elit. Kafka nec velit, createdAt=2021-08-04T10:36:13))
2021-08-10 06:55:56 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3429045744987774612, userId=8787767486028961377, text=sit elit. elit. amet, Kafka vitae consectetur, createdAt=2021-08-04T10:44:03))
2021-08-10 06:55:56 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7225474553041345440, userId=3718146297587036864, text=magna Nam Lorem rutrum Kafka amet, vitae, createdAt=2021-08-04T10:58:34))
2021-08-10 06:55:57 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3702175927630976273, userId=5598180757174975719, text=rutrum nisl fringilla amet, Kafka dolor velit, createdAt=2021-08-04T11:07:54))
2021-08-10 06:55:57 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=752080496956638332, userId=13800222887170588, text=nec Vivamus elit. placerat. Kafka amet, nec, createdAt=2021-08-04T11:43:28))
2021-08-10 06:55:58 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2840722557904234744, userId=85288440668133190, text=Nam amet, tempus ipsum Kafka suscipit placerat., createdAt=2021-08-04T11:50:38))
2021-08-10 06:55:58 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:55:58 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4056676034525874378, userId=4817552507413568496, text=sit vitae euismod elit. Kafka Nam tempus, createdAt=2021-08-04T12:10:28))
2021-08-10 06:55:59 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7117411413985715737, userId=223477279034318184, text=adipiscing Vivamus adipiscing velit Kafka nisl nisl, createdAt=2021-08-04T12:26:19))
2021-08-10 06:55:59 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3186112955734401875, userId=6720420148494812542, text=consectetur nec velit nisl Kafka ipsum Nam, createdAt=2021-08-04T12:31:29))
2021-08-10 06:56:00 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4322137103541794566, userId=6892312090372416246, text=consectetur ipsum Vivamus velit Kafka tempus vitae, createdAt=2021-08-04T13:14:49))
2021-08-10 06:56:00 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4001467197961392798, userId=8141556502640541405, text=consectetur placerat. sit tempus Kafka velit Vivamus, createdAt=2021-08-04T13:55:50))
2021-08-10 06:56:01 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2271274103200162060, userId=368274706874946743, text=consectetur euismod rutrum vitae Kafka vitae ipsum, createdAt=2021-08-04T13:55:40))
2021-08-10 06:56:01 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1638691641964672051, userId=8946583949812547425, text=fringilla velit elit. Vivamus Kafka tempus fringilla, createdAt=2021-08-04T13:59:30))
2021-08-10 06:56:02 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8201536249840103242, userId=4249374931423869204, text=elit. Nam nisl Nam Kafka sit magna, createdAt=2021-08-04T14:10:50))
2021-08-10 06:56:02 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2749131442408518894, userId=5835176995088467875, text=adipiscing Nam Vivamus rutrum Kafka amet, consectetur, createdAt=2021-08-09T10:02:23))
2021-08-10 06:56:03 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6290130728714674178, userId=6184086086181586865, text=placerat. nec Vivamus ipsum Kafka nec fringilla, createdAt=2021-08-09T10:06:53))
2021-08-10 06:56:03 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4870176992997357309, userId=2439644022864251817, text=fringilla magna elit. sit Kafka tempus ipsum, createdAt=2021-08-09T10:34:44))
2021-08-10 06:56:04 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6853346769053439890, userId=8626618143366013054, text=Nam sit placerat. velit Kafka euismod sit, createdAt=2021-08-09T10:58:04))
2021-08-10 06:56:04 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5688383949822818016, userId=8652662178524442983, text=Nam elit. rutrum placerat. Kafka Nam suscipit, createdAt=2021-08-09T11:34:05))
2021-08-10 06:56:05 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2913172090059372059, userId=6064502025508147355, text=magna magna elit. Lorem Kafka fringilla rutrum, createdAt=2021-08-09T12:03:05))
2021-08-10 06:56:05 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7918387452475813143, userId=6686760581310180881, text=adipiscing vitae amet, fringilla Kafka nisl sit, createdAt=2021-08-09T12:11:46))
2021-08-10 06:56:06 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4439461989976361444, userId=3094756702570733185, text=Nam tempus rutrum velit Kafka dolor magna, createdAt=2021-08-09T12:10:46))
2021-08-10 06:56:06 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3434808606563108204, userId=813974487204650463, text=vitae placerat. amet, elit. Kafka dolor placerat., createdAt=2021-08-09T13:00:07))
2021-08-10 06:56:07 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6196627441549330380, userId=5381416589528972498, text=consectetur nec tempus Lorem Kafka ipsum sit, createdAt=2021-08-09T13:04:57))
2021-08-10 06:56:07 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7400024991819588131, userId=8097501721516903937, text=amet, fringilla rutrum dolor Kafka magna dolor, createdAt=2021-08-09T13:41:17))
2021-08-10 06:56:08 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7770523446739555129, userId=3637165703674324469, text=tempus sit adipiscing magna Kafka velit nisl tempus, createdAt=2021-08-03T15:58:32))
2021-08-10 06:56:08 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6906751222023905388, userId=6294547183931673817, text=adipiscing elit. tempus rutrum Kafka rutrum vitae nec, createdAt=2021-08-03T16:15:12))
2021-08-10 06:56:09 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2463546988064898897, userId=1865828951380231889, text=Vivamus nisl euismod sit Kafka nec euismod adipiscing, createdAt=2021-08-03T15:35:32))
2021-08-10 06:56:09 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1882404736725166232, userId=2097125440641689506, text=rutrum fringilla consectetur amet, Kafka elit. nec consectetur, createdAt=2021-08-03T16:29:13))
2021-08-10 06:56:10 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=628252142778699133, userId=7327414536862240665, text=sit nisl velit euismod Kafka consectetur dolor sit, createdAt=2021-08-03T17:09:03))
2021-08-10 06:56:10 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:56:10 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8268499358717972762, userId=4514774121519024820, text=suscipit Nam tempus vitae Kafka amet, rutrum nec, createdAt=2021-08-03T17:23:43))
2021-08-10 06:56:11 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5073252496775174312, userId=5623069823308712377, text=euismod euismod elit. tempus Kafka velit ipsum magna, createdAt=2021-08-03T17:36:43))
2021-08-10 06:56:11 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2389103608751663550, userId=6637345103698499165, text=magna Nam nisl Nam Kafka Lorem euismod Vivamus, createdAt=2021-08-03T17:44:23))
2021-08-10 06:56:12 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1213019726729106998, userId=8808394446615005680, text=consectetur Nam velit amet, Kafka tempus sit euismod, createdAt=2021-08-03T18:02:44))
2021-08-10 06:56:12 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2733567715162013064, userId=2062659663563938809, text=Vivamus Nam nisl nec Kafka suscipit placerat. nec, createdAt=2021-08-03T18:06:04))
2021-08-10 06:56:13 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1573088608302759027, userId=1453208040075693839, text=Lorem velit velit magna Kafka amet, rutrum dolor, createdAt=2021-08-03T18:12:04))
2021-08-10 06:56:13 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4068288814575212964, userId=8348444567176976924, text=velit vitae sit Nam Kafka nisl euismod velit, createdAt=2021-08-03T18:13:04))
2021-08-10 06:56:14 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4876127357847162665, userId=5173989227374386297, text=amet, euismod vitae placerat. Kafka Lorem placerat. adipiscing, createdAt=2021-08-03T18:18:04))
2021-08-10 06:56:14 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7973402035047985993, userId=8675510423222838605, text=elit. fringilla nec Lorem Kafka Nam placerat. magna, createdAt=2021-08-03T18:27:24))
2021-08-10 06:56:15 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4703777924825727254, userId=5809150591344937141, text=nec placerat. elit. nisl Kafka magna adipiscing suscipit, createdAt=2021-08-03T18:41:34))
2021-08-10 06:56:15 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3131792707172962227, userId=8899070911576771934, text=rutrum placerat. ipsum Vivamus Kafka consectetur sit adipiscing, createdAt=2021-08-04T05:24:56))
2021-08-10 06:56:16 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4759164138196186602, userId=6620630211607104897, text=euismod placerat. elit. adipiscing Kafka Vivamus nisl consectetur, createdAt=2021-08-04T05:45:36))
2021-08-10 06:56:16 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3142956833700659558, userId=2722912896079017144, text=magna euismod nec consectetur Kafka Vivamus velit Vivamus, createdAt=2021-08-04T06:33:09))
2021-08-10 06:56:17 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3934581086153227994, userId=6801141024258916707, text=Lorem dolor nisl velit Kafka euismod dolor euismod, createdAt=2021-08-04T06:39:49))
2021-08-10 06:56:17 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5440743242266262858, userId=72555509771857204, text=fringilla placerat. magna elit. Kafka rutrum consectetur rutrum, createdAt=2021-08-04T06:42:29))
2021-08-10 06:56:18 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4184208423850726791, userId=6943539195462072570, text=Vivamus amet, consectetur velit Kafka dolor elit. fringilla, createdAt=2021-08-04T06:55:29))
2021-08-10 06:56:18 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6372460061862193755, userId=7928598764113314090, text=dolor Vivamus placerat. Nam Kafka vitae vitae Nam, createdAt=2021-08-04T07:06:40))
2021-08-10 06:56:19 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4710007408284193123, userId=5865788330199544187, text=suscipit sit Nam elit. Kafka consectetur placerat. Vivamus, createdAt=2021-08-04T07:15:10))
2021-08-10 06:56:19 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3664841372873311337, userId=859834717275456132, text=ipsum rutrum vitae magna Kafka tempus vitae elit., createdAt=2021-08-04T07:27:10))
2021-08-10 06:56:20 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1042122360096223166, userId=9215423401855897301, text=amet, velit Vivamus rutrum Kafka euismod fringilla Vivamus, createdAt=2021-08-04T07:43:10))
2021-08-10 06:56:20 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4494872599043816254, userId=2387480012384621759, text=dolor magna velit vitae Kafka nec Lorem suscipit, createdAt=2021-08-04T08:34:31))
2021-08-10 06:56:21 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2085253315534366925, userId=2174141027048473105, text=amet, ipsum nec magna Kafka velit vitae tempus, createdAt=2021-08-04T08:56:07))
2021-08-10 06:56:21 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=672458309789203325, userId=6068791380549255053, text=Vivamus elit. rutrum velit Kafka velit Lorem euismod, createdAt=2021-08-04T09:01:17))
2021-08-10 06:56:22 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5886271705440230680, userId=2215986921844841067, text=euismod euismod nec adipiscing Kafka adipiscing placerat. nec, createdAt=2021-08-04T09:31:09))
2021-08-10 06:56:22 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:56:22 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2295865363939521903, userId=3491657676717648294, text=dolor elit. amet, nec Kafka Lorem Lorem consectetur, createdAt=2021-08-04T09:49:22))
2021-08-10 06:56:23 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=371691066822079424, userId=5281384780092275189, text=nec dolor ipsum ipsum Kafka Nam adipiscing suscipit, createdAt=2021-08-04T09:59:03))
2021-08-10 06:56:23 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5527167695087015234, userId=932305775526092239, text=suscipit velit sit adipiscing Kafka rutrum rutrum fringilla, createdAt=2021-08-04T10:01:33))
2021-08-10 06:56:24 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7176807468715889297, userId=7804885507682902250, text=adipiscing consectetur euismod euismod Kafka suscipit ipsum Nam, createdAt=2021-08-04T10:19:03))
2021-08-10 06:56:24 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7349617169826333501, userId=3264576195759913643, text=elit. velit dolor ipsum Kafka velit fringilla amet,, createdAt=2021-08-04T10:33:43))
2021-08-10 06:56:25 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5054296918042903969, userId=1543288555304492530, text=rutrum fringilla rutrum Nam Kafka rutrum sit tempus, createdAt=2021-08-04T10:34:43))
2021-08-10 06:56:25 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6590239403276825417, userId=5423620078501807674, text=dolor amet, magna consectetur Kafka consectetur tempus elit., createdAt=2021-08-04T10:56:44))
2021-08-10 06:56:26 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5803772329459649790, userId=4239184326580581038, text=rutrum sit Lorem velit Kafka tempus dolor magna, createdAt=2021-08-04T11:02:44))
2021-08-10 06:56:26 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6118178468422872488, userId=690359473399032670, text=euismod ipsum nisl dolor Kafka adipiscing sit vitae, createdAt=2021-08-04T11:39:28))
2021-08-10 06:56:27 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3309457683063494223, userId=5969700627661501651, text=adipiscing velit dolor adipiscing Kafka elit. Lorem Vivamus, createdAt=2021-08-04T12:08:58))
2021-08-10 06:56:27 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=569380164965558609, userId=3214642386675544106, text=nec fringilla dolor nisl Kafka consectetur magna placerat., createdAt=2021-08-04T12:22:19))
2021-08-10 06:56:28 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6173818015539095177, userId=3969552717600862250, text=consectetur vitae nec vitae Kafka sit Vivamus tempus, createdAt=2021-08-04T12:27:39))
2021-08-10 06:56:28 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3877788277075186056, userId=7820777201350644272, text=nisl nisl nec tempus Kafka placerat. nisl velit, createdAt=2021-08-04T12:54:19))
2021-08-10 06:56:29 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5213411634701386908, userId=4743520189370377101, text=magna placerat. dolor suscipit Kafka nec rutrum velit, createdAt=2021-08-04T13:21:59))
2021-08-10 06:56:29 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3901564479661894851, userId=8883948484044629632, text=Nam Lorem elit. dolor Kafka nec Lorem Lorem, createdAt=2021-08-04T13:49:20))
2021-08-10 06:56:30 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3098145305965207156, userId=3941708231853911551, text=Nam sit dolor consectetur Kafka amet, suscipit Lorem, createdAt=2021-08-04T14:06:40))
2021-08-10 06:56:30 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2302576070437477846, userId=5996117641885581552, text=Vivamus velit suscipit Lorem Kafka vitae placerat. elit., createdAt=2021-08-09T09:48:13))
2021-08-10 06:56:31 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8253549605372441570, userId=1617293594668411683, text=amet, fringilla adipiscing tempus Kafka velit elit. placerat., createdAt=2021-08-09T10:59:14))
2021-08-10 06:56:31 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4793001612160289081, userId=4946386307301954236, text=magna adipiscing fringilla nisl Kafka Nam nisl Lorem, createdAt=2021-08-09T11:47:35))
2021-08-10 06:56:32 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5533745088500244560, userId=8700755321020005739, text=consectetur fringilla velit vitae Kafka adipiscing elit. sit, createdAt=2021-08-09T12:12:16))
2021-08-10 06:56:32 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5635018286728419305, userId=5481646959782885549, text=tempus vitae Nam consectetur Kafka Nam fringilla sit, createdAt=2021-08-09T12:13:16))
2021-08-10 06:56:33 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4855941801565645717, userId=7710038279207430546, text=velit consectetur amet, dolor Kafka tempus tempus nec, createdAt=2021-08-09T12:51:46))
2021-08-10 06:56:33 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8711332104360476758, userId=2047124210124773280, text=elit. Nam placerat. placerat. Kafka Vivamus ipsum sit, createdAt=2021-08-09T13:49:27))
2021-08-10 06:56:34 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6344842893589346615, userId=5919664196888900018, text=Vivamus suscipit dolor tempus Kafka suscipit suscipit suscipit, createdAt=2021-08-03T14:33:54))
2021-08-10 06:56:34 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:56:34 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4395928404937289456, userId=9130129383163497830, text=rutrum nisl placerat. placerat. Kafka placerat. magna nisl, createdAt=2021-08-03T15:02:01))
2021-08-10 06:56:35 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6525258084096586872, userId=2050382207497349467, text=dolor consectetur vitae Vivamus Kafka dolor adipiscing amet,, createdAt=2021-08-03T15:03:11))
2021-08-10 06:56:35 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6913782008446085021, userId=6012995673012775840, text=fringilla nisl nec velit Kafka fringilla velit sit, createdAt=2021-08-03T15:07:31))
2021-08-10 06:56:36 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5970495643646812742, userId=3485101443263610604, text=nisl vitae dolor magna Kafka sit fringilla nec, createdAt=2021-08-03T15:18:12))
2021-08-10 06:56:36 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5197824005214814008, userId=974718236780387546, text=magna Lorem Lorem velit Kafka adipiscing rutrum placerat., createdAt=2021-08-03T15:53:12))
2021-08-10 06:56:37 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5381187450163425522, userId=5513074677431086951, text=placerat. Nam amet, nisl Kafka nisl nisl magna, createdAt=2021-08-03T16:14:52))
2021-08-10 06:56:37 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=694386201734232039, userId=7927822761293184046, text=elit. magna euismod nisl Kafka velit Nam adipiscing, createdAt=2021-08-03T16:35:03))
2021-08-10 06:56:38 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8257273563798522553, userId=7389154626658362652, text=consectetur velit euismod Lorem Kafka vitae velit dolor, createdAt=2021-08-03T16:36:33))
2021-08-10 06:56:38 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7975055201659153563, userId=2197401379232337473, text=vitae rutrum nisl tempus Kafka adipiscing placerat. consectetur, createdAt=2021-08-03T16:57:13))
2021-08-10 06:56:39 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5472080519990926972, userId=3543451453140208934, text=suscipit nec magna sit Kafka Nam consectetur consectetur, createdAt=2021-08-03T16:58:13))
2021-08-10 06:56:39 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4177953577849781474, userId=1026931511429651067, text=amet, velit nisl adipiscing Kafka velit fringilla placerat., createdAt=2021-08-03T17:16:23))
2021-08-10 06:56:40 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=350914840615545832, userId=8930907075400219469, text=nisl vitae sit velit Kafka velit elit. nisl, createdAt=2021-08-03T17:21:33))
2021-08-10 06:56:40 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1850741832831731114, userId=4204306719740581679, text=adipiscing euismod tempus Lorem Kafka magna rutrum placerat., createdAt=2021-08-03T17:29:23))
2021-08-10 06:56:41 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=183945531196538531, userId=6750131638449130301, text=Vivamus euismod amet, euismod Kafka Nam amet, ipsum, createdAt=2021-08-03T18:11:14))
2021-08-10 06:56:41 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5094650147161287317, userId=853045532886888219, text=ipsum adipiscing vitae vitae Kafka nec Vivamus amet,, createdAt=2021-08-03T19:08:15))
2021-08-10 06:56:42 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1456871720248187224, userId=2709474879298164437, text=ipsum velit suscipit dolor Kafka tempus Nam vitae, createdAt=2021-08-03T19:16:35))
2021-08-10 06:56:42 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6768010288442367917, userId=7302399759844395177, text=magna ipsum euismod nec Kafka nec tempus magna, createdAt=2021-08-03T19:58:35))
2021-08-10 06:56:43 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2131796906064344192, userId=5676385458449858001, text=velit Lorem nisl Lorem Kafka nisl vitae rutrum, createdAt=2021-08-03T20:01:35))
2021-08-10 06:56:43 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=354456409770431785, userId=7363790806684400455, text=euismod tempus fringilla amet, Kafka Vivamus Nam nisl, createdAt=2021-08-03T20:21:56))
2021-08-10 06:56:44 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1714104366691456821, userId=6651237064661436914, text=sit tempus velit sit Kafka amet, fringilla dolor, createdAt=2021-08-04T05:15:35))
2021-08-10 06:56:44 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6316595154705874923, userId=7794942415157299323, text=euismod dolor magna consectetur Kafka consectetur Vivamus euismod, createdAt=2021-08-04T06:32:29))
2021-08-10 06:56:45 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1918854825522903956, userId=928222352975144168, text=Nam Nam amet, sit Kafka suscipit sit tempus, createdAt=2021-08-04T06:46:59))
2021-08-10 06:56:45 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2783182029750253125, userId=5724829695679965492, text=elit. Vivamus euismod dolor Kafka Nam nisl euismod, createdAt=2021-08-04T06:49:49))
2021-08-10 06:56:46 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5751788452079930248, userId=1918338677093958590, text=fringilla nisl tempus elit. Kafka Lorem placerat. elit., createdAt=2021-08-04T07:50:21))
2021-08-10 06:56:46 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:56:46 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5735983530599841649, userId=6871364652921901435, text=velit amet, elit. tempus Kafka Nam fringilla suscipit, createdAt=2021-08-04T07:54:01))
2021-08-10 06:56:47 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4481753478307261760, userId=3145063127133816526, text=nisl velit rutrum amet, Kafka tempus euismod rutrum, createdAt=2021-08-04T08:15:01))
2021-08-10 06:56:47 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4267322128878404758, userId=1947232560248126076, text=tempus vitae elit. suscipit Kafka velit Nam amet,, createdAt=2021-08-04T08:28:41))
2021-08-10 06:56:48 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1430913897694619110, userId=8855830735219785135, text=placerat. Lorem dolor amet, Kafka tempus nisl suscipit, createdAt=2021-08-04T08:54:17))
2021-08-10 06:56:48 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7359908261847984970, userId=7278118933360775186, text=nec suscipit placerat. Nam Kafka nec adipiscing amet,, createdAt=2021-08-04T10:09:13))
2021-08-10 06:56:49 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1389464848497004398, userId=8891013865020083477, text=rutrum amet, adipiscing amet, Kafka Lorem vitae rutrum, createdAt=2021-08-04T10:32:13))
2021-08-10 06:56:49 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1510378332583145283, userId=7768481212735175019, text=fringilla magna Vivamus placerat. Kafka dolor fringilla tempus, createdAt=2021-08-04T10:38:03))
2021-08-10 06:56:50 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8533777918048256528, userId=926598780008432039, text=euismod euismod magna nec Kafka tempus amet, adipiscing, createdAt=2021-08-04T10:37:43))
2021-08-10 06:56:50 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=678076007428673465, userId=2857361091814058696, text=consectetur Nam nisl adipiscing Kafka elit. nisl adipiscing, createdAt=2021-08-04T10:43:03))
2021-08-10 06:56:51 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6671639899627624153, userId=8421377938494753489, text=Vivamus vitae nisl consectetur Kafka euismod vitae consectetur, createdAt=2021-08-04T11:16:04))
2021-08-10 06:56:51 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7297201397680896789, userId=9180468941606782590, text=sit nec tempus velit Kafka consectetur adipiscing velit, createdAt=2021-08-04T12:23:29))
2021-08-10 06:56:52 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7993595795149540359, userId=2918101700788374012, text=amet, euismod nec Vivamus Kafka fringilla consectetur sit, createdAt=2021-08-04T12:40:49))
2021-08-10 06:56:52 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4029571893455856536, userId=35551949748706272, text=adipiscing fringilla Lorem consectetur Kafka tempus nisl sit, createdAt=2021-08-04T12:44:49))
2021-08-10 06:56:53 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5271036472479031542, userId=8963387592932847704, text=Nam Vivamus nec placerat. Kafka Vivamus dolor magna, createdAt=2021-08-04T12:53:29))
2021-08-10 06:56:53 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7750913823553600462, userId=3008472296853238823, text=adipiscing tempus amet, euismod Kafka placerat. sit suscipit, createdAt=2021-08-04T13:05:09))
2021-08-10 06:56:54 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5863324249248548027, userId=5284981809325995534, text=consectetur ipsum ipsum placerat. Kafka fringilla ipsum fringilla, createdAt=2021-08-04T13:34:30))
2021-08-10 06:56:54 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1065395946192247052, userId=3770779778126840203, text=Lorem nisl nisl euismod Kafka Vivamus dolor dolor, createdAt=2021-08-04T13:34:50))
2021-08-10 06:56:55 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4778568269700243666, userId=1750606997144269054, text=rutrum adipiscing sit nisl Kafka nisl ipsum euismod, createdAt=2021-08-04T13:47))
2021-08-10 06:56:55 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3331509414063991821, userId=6712998280031579325, text=magna fringilla nec Vivamus Kafka magna euismod euismod, createdAt=2021-08-04T13:56:10))
2021-08-10 06:56:56 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2160191977914380018, userId=5362496891361449480, text=Lorem amet, Lorem sit Kafka nec euismod placerat., createdAt=2021-08-04T13:59:50))
2021-08-10 06:56:56 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8853259113532406855, userId=8907942942021080651, text=placerat. nisl Lorem ipsum Kafka magna dolor velit, createdAt=2021-08-09T09:58:53))
2021-08-10 06:56:57 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8600812932631498589, userId=1667524653781003830, text=suscipit ipsum tempus fringilla Kafka dolor rutrum ipsum, createdAt=2021-08-09T10:49:34))
2021-08-10 06:56:57 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6715682630551686796, userId=5489303187293230698, text=ipsum placerat. placerat. vitae Kafka euismod dolor sit, createdAt=2021-08-09T11:10:34))
2021-08-10 06:56:58 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1273947135232209725, userId=3878780104552441130, text=rutrum placerat. placerat. vitae Kafka sit adipiscing velit, createdAt=2021-08-09T12:56:47))
2021-08-10 06:56:58 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:56:58 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7769937158780906912, userId=470817902784813362, text=tempus Vivamus elit. ipsum Kafka Vivamus ipsum magna, createdAt=2021-08-09T12:56:17))
2021-08-10 06:56:59 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2655142238383771961, userId=5210594666106498059, text=Lorem rutrum sit euismod Kafka nisl Vivamus Lorem, createdAt=2021-08-09T13:02:07))
2021-08-10 06:56:59 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5436156768833788398, userId=5736706404236560822, text=suscipit amet, placerat. euismod Kafka vitae rutrum nec, createdAt=2021-08-09T13:17:57))
2021-08-10 06:57:00 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7156565806294691555, userId=8192224845710528663, text=velit nisl nec Lorem Kafka euismod consectetur Vivamus, createdAt=2021-08-09T13:35:47))
2021-08-10 06:57:00 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5577004287039739504, userId=444069560685423584, text=placerat. nisl Nam vitae Kafka tempus Vivamus suscipit, createdAt=2021-08-09T13:41:57))
2021-08-10 06:57:01 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8133816782234504458, userId=8420336548055688766, text=tempus magna rutrum velit euismod Kafka velit tempus placerat., createdAt=2021-08-03T16:11:02))
2021-08-10 06:57:01 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3830612874650701681, userId=7983344025485615843, text=fringilla sit velit placerat. elit. Kafka Lorem Nam fringilla, createdAt=2021-08-03T16:18:42))
2021-08-10 06:57:02 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5744070957420898612, userId=6851221255167428827, text=consectetur placerat. magna velit fringilla Kafka velit Vivamus magna, createdAt=2021-08-03T15:13:51))
2021-08-10 06:57:02 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8863646614042522057, userId=3406812513199887313, text=magna nisl sit ipsum euismod Kafka Lorem adipiscing tempus, createdAt=2021-08-03T15:44:42))
2021-08-10 06:57:03 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=64624093461076884, userId=1120067208678229670, text=amet, magna euismod elit. Nam Kafka magna magna magna, createdAt=2021-08-03T15:46:22))
2021-08-10 06:57:03 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7495258965944439274, userId=6053081725810038203, text=consectetur tempus fringilla rutrum rutrum Kafka magna suscipit tempus, createdAt=2021-08-03T15:50:02))
2021-08-10 06:57:04 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2111068665690298727, userId=1508480268386013902, text=rutrum euismod placerat. velit elit. Kafka dolor consectetur ipsum, createdAt=2021-08-03T16:23:02))
2021-08-10 06:57:04 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6922465771633545779, userId=438430412277068009, text=suscipit Lorem placerat. ipsum amet, Kafka ipsum magna vitae, createdAt=2021-08-03T16:43:53))
2021-08-10 06:57:05 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6669235620188220565, userId=4724763361757526790, text=rutrum nec tempus elit. magna Kafka rutrum consectetur nisl, createdAt=2021-08-03T16:47:33))
2021-08-10 06:57:05 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6364420794616544020, userId=6897900806071728237, text=placerat. amet, amet, amet, elit. Kafka magna elit. fringilla, createdAt=2021-08-03T17:09:43))
2021-08-10 06:57:06 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7634942865982421111, userId=461321905664881618, text=consectetur nisl vitae nec nec Kafka ipsum placerat. magna, createdAt=2021-08-03T17:44:43))
2021-08-10 06:57:06 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3013307781070287376, userId=5002793314447488570, text=nec fringilla amet, Nam Nam Kafka suscipit tempus sit, createdAt=2021-08-03T17:49:54))
2021-08-10 06:57:07 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1415611136875134695, userId=309054099628377592, text=magna velit sit dolor magna Kafka Vivamus rutrum velit, createdAt=2021-08-03T17:53:04))
2021-08-10 06:57:07 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2531618657861997071, userId=4476945911973755729, text=adipiscing nec ipsum adipiscing tempus Kafka euismod Lorem fringilla, createdAt=2021-08-03T18:04:54))
2021-08-10 06:57:08 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3438986061534229652, userId=6288085802998642011, text=consectetur rutrum adipiscing amet, Vivamus Kafka rutrum amet, tempus, createdAt=2021-08-03T18:21:54))
2021-08-10 06:57:08 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9051876974784041530, userId=7434735484034822133, text=magna fringilla Nam ipsum Vivamus Kafka vitae suscipit adipiscing, createdAt=2021-08-03T18:35:24))
2021-08-10 06:57:09 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=136044050772973151, userId=1885388327024466933, text=ipsum Nam amet, fringilla placerat. Kafka nec Lorem rutrum, createdAt=2021-08-03T18:48:54))
2021-08-10 06:57:10 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8557106729919031183, userId=858748269314565865, text=rutrum Lorem magna Lorem vitae Kafka adipiscing sit nisl, createdAt=2021-08-03T18:56:44))
2021-08-10 06:57:10 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6589250073541219241, userId=4730879593742093431, text=adipiscing sit dolor suscipit ipsum Kafka Nam placerat. sit, createdAt=2021-08-03T19:12:45))
2021-08-10 06:57:10 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:57:11 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6257726667798214496, userId=3378061941227095532, text=amet, consectetur ipsum Lorem ipsum Kafka euismod fringilla suscipit, createdAt=2021-08-03T19:27:45))
2021-08-10 06:57:11 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1105128984705436701, userId=9128863190259797202, text=elit. adipiscing placerat. placerat. magna Kafka Nam sit magna, createdAt=2021-08-04T05:01:05))
2021-08-10 06:57:12 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3191752271024494751, userId=5586395827982807801, text=velit amet, tempus dolor tempus Kafka elit. euismod amet,, createdAt=2021-08-04T05:05:05))
2021-08-10 06:57:12 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=26749126727866230, userId=5615835017789997284, text=fringilla sit euismod sit magna Kafka velit nec adipiscing, createdAt=2021-08-04T05:40:06))
2021-08-10 06:57:13 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3880683478824561029, userId=7864420076853486176, text=magna sit euismod dolor vitae Kafka tempus vitae nisl, createdAt=2021-08-04T05:45:46))
2021-08-10 06:57:13 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2015606741184408596, userId=626621041802847981, text=rutrum sit dolor Vivamus consectetur Kafka adipiscing Lorem tempus, createdAt=2021-08-04T06:48:49))
2021-08-10 06:57:14 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=936164365937076603, userId=5637129757208759875, text=velit nec adipiscing Lorem Nam Kafka sit magna Lorem, createdAt=2021-08-04T07:00:19))
2021-08-10 06:57:14 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6678572512930508510, userId=851530878212316729, text=nisl placerat. Lorem consectetur tempus Kafka Lorem nisl nec, createdAt=2021-08-04T07:04:19))
2021-08-10 06:57:15 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2040992253236919956, userId=7571093573172730506, text=magna Nam sit magna magna Kafka Vivamus amet, amet,, createdAt=2021-08-04T07:39:40))
2021-08-10 06:57:15 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5917272978097489337, userId=7831693987102001195, text=tempus euismod euismod consectetur Nam Kafka vitae amet, dolor, createdAt=2021-08-04T07:48:41))
2021-08-10 06:57:16 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8532674268476093756, userId=7600794942184561450, text=dolor tempus magna nec suscipit Kafka ipsum dolor adipiscing, createdAt=2021-08-04T07:52:21))
2021-08-10 06:57:16 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=505780567046345899, userId=67797644759715798, text=placerat. velit fringilla Lorem sit Kafka fringilla rutrum nisl, createdAt=2021-08-04T08:01:01))
2021-08-10 06:57:17 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5746349009702098427, userId=6820742934214355269, text=sit dolor ipsum ipsum Lorem Kafka elit. elit. Vivamus, createdAt=2021-08-04T08:07:01))
2021-08-10 06:57:17 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=991388405105900218, userId=6111514755920991546, text=fringilla nisl placerat. velit adipiscing Kafka magna consectetur consectetur, createdAt=2021-08-04T08:10:11))
2021-08-10 06:57:18 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5727636909639753488, userId=8490810310056565733, text=ipsum amet, tempus Lorem Nam Kafka amet, amet, velit, createdAt=2021-08-04T08:15:11))
2021-08-10 06:57:18 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8324892379195157440, userId=4706570571734024412, text=nisl rutrum Lorem velit velit Kafka vitae magna dolor, createdAt=2021-08-04T08:52:37))
2021-08-10 06:57:19 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1600127543148911759, userId=6594622220042466925, text=dolor euismod Nam Nam amet, Kafka vitae velit velit, createdAt=2021-08-04T09:31:59))
2021-08-10 06:57:19 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7510392553319265482, userId=2246101054597684394, text=adipiscing placerat. elit. rutrum fringilla Kafka suscipit elit. dolor, createdAt=2021-08-04T09:38:02))
2021-08-10 06:57:20 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6985121265566765364, userId=6343850522959313589, text=amet, suscipit sit tempus rutrum Kafka suscipit tempus nec, createdAt=2021-08-04T09:43:12))
2021-08-10 06:57:20 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=539119238187338040, userId=1626142164137393685, text=tempus ipsum vitae Nam sit Kafka suscipit consectetur amet,, createdAt=2021-08-04T09:58:23))
2021-08-10 06:57:21 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8791507060312657566, userId=1827878004984338992, text=tempus euismod consectetur amet, sit Kafka nisl adipiscing sit, createdAt=2021-08-04T10:10:03))
2021-08-10 06:57:21 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2830866958204312012, userId=1192737011242961333, text=nisl vitae elit. rutrum tempus Kafka Nam euismod Vivamus, createdAt=2021-08-04T10:41:53))
2021-08-10 06:57:22 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3020022946199406699, userId=7891260450790596355, text=rutrum rutrum tempus magna sit Kafka placerat. adipiscing nisl, createdAt=2021-08-04T10:45:13))
2021-08-10 06:57:22 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5232326461900971070, userId=569914056430119442, text=ipsum nec euismod consectetur Lorem Kafka elit. nisl magna, createdAt=2021-08-04T12:37:09))
2021-08-10 06:57:22 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:57:23 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6090456142071929643, userId=1979622828528510653, text=ipsum consectetur velit nisl magna Kafka vitae amet, consectetur, createdAt=2021-08-04T13:00:49))
2021-08-10 06:57:23 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5141124653300379108, userId=8952989061984431332, text=placerat. nisl dolor placerat. elit. Kafka magna adipiscing magna, createdAt=2021-08-04T13:18:49))
2021-08-10 06:57:24 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2982105020703390988, userId=2926888573654557482, text=placerat. tempus sit adipiscing sit Kafka velit suscipit Nam, createdAt=2021-08-04T13:36:10))
2021-08-10 06:57:24 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8287533953270271205, userId=5498041357283961428, text=tempus suscipit nec nisl Lorem Kafka adipiscing Vivamus placerat., createdAt=2021-08-04T13:48:20))
2021-08-10 06:57:25 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8659475085286363205, userId=2717003346355818090, text=vitae vitae Vivamus dolor amet, Kafka consectetur nec ipsum, createdAt=2021-08-04T13:55:10))
2021-08-10 06:57:25 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=188392496404667076, userId=3617148344984476401, text=elit. ipsum magna Vivamus euismod Kafka nec suscipit vitae, createdAt=2021-08-09T09:53:53))
2021-08-10 06:57:26 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1654654784951805193, userId=2531147665493506770, text=rutrum consectetur nisl vitae amet, Kafka amet, velit sit, createdAt=2021-08-09T10:04:53))
2021-08-10 06:57:26 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8307057868983148318, userId=2424709874441652841, text=nec vitae Lorem velit euismod Kafka velit Lorem rutrum, createdAt=2021-08-09T10:44:54))
2021-08-10 06:57:27 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3245275413559494119, userId=4904058660955658130, text=velit ipsum suscipit Nam ipsum Kafka fringilla velit elit., createdAt=2021-08-09T11:03:14))
2021-08-10 06:57:27 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2665159819186198590, userId=3708485971057654242, text=rutrum dolor dolor Vivamus adipiscing Kafka Nam nisl Vivamus, createdAt=2021-08-09T11:51:45))
2021-08-10 06:57:28 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5118075784449776455, userId=2789596555132080837, text=magna nec nec nisl rutrum Kafka consectetur fringilla euismod, createdAt=2021-08-09T11:57:55))
2021-08-10 06:57:28 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7804191218320581316, userId=2028153899008418332, text=euismod Nam suscipit vitae adipiscing Kafka adipiscing elit. dolor, createdAt=2021-08-09T12:09:36))
2021-08-10 06:57:29 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7571558474197647154, userId=6742407822723625345, text=vitae nec magna placerat. Nam Kafka tempus consectetur Vivamus, createdAt=2021-08-09T12:24:46))
2021-08-10 06:57:29 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6008432055808690323, userId=7544204037241001641, text=euismod Vivamus placerat. nisl Lorem Kafka elit. magna nisl, createdAt=2021-08-09T12:42:26))
2021-08-10 06:57:30 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7166675935458292076, userId=5940277214430505162, text=euismod Nam rutrum Lorem adipiscing Kafka consectetur nec Lorem, createdAt=2021-08-09T13:01:27))
2021-08-10 06:57:30 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2317398534739822748, userId=5388322658063594667, text=dolor velit rutrum nec placerat. Kafka Lorem elit. placerat., createdAt=2021-08-09T13:15:27))
2021-08-10 06:57:31 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7449411239884227463, userId=6209260153592142285, text=consectetur vitae adipiscing dolor Nam Kafka tempus rutrum tempus, createdAt=2021-08-09T13:19:27))
2021-08-10 06:57:31 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3692812198688479367, userId=5703517131135203168, text=magna Vivamus Lorem tempus tempus Kafka consectetur nec elit., createdAt=2021-08-09T13:21:37))
2021-08-10 06:57:32 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4253609331605498346, userId=6442932434292774950, text=adipiscing dolor Nam nisl ipsum Kafka ipsum nisl fringilla, createdAt=2021-08-09T13:22:17))
2021-08-10 06:57:32 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=618346586544460524, userId=2139295001813675326, text=dolor amet, nec elit. vitae Kafka Lorem velit nisl, createdAt=2021-08-09T13:31:07))
2021-08-10 06:57:33 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8516243701759438709, userId=6025609337951212187, text=nec velit euismod Nam rutrum Kafka consectetur placerat. Vivamus, createdAt=2021-08-09T13:34:07))
2021-08-10 06:57:33 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4263951465562566414, userId=3065088830460406711, text=elit. consectetur Lorem ipsum rutrum Kafka Nam elit. sit, createdAt=2021-08-09T13:42:47))
2021-08-10 06:57:34 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4194320206741325661, userId=8631927213462682961, text=vitae ipsum nisl nec nisl Kafka consectetur dolor euismod, createdAt=2021-08-09T13:52:37))
2021-08-10 06:57:34 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7720512238431093741, userId=1542537527633234302, text=fringilla magna dolor placerat. Lorem Kafka Nam magna velit, createdAt=2021-08-03T14:40:24))
2021-08-10 06:57:34 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:57:35 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4378585461269450562, userId=303955498062827423, text=Nam velit vitae velit magna Kafka sit placerat. adipiscing, createdAt=2021-08-03T14:40:04))
2021-08-10 06:57:35 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3833232134482770196, userId=2560363226145167919, text=rutrum consectetur ipsum tempus amet, Kafka fringilla tempus adipiscing, createdAt=2021-08-03T15:09:41))
2021-08-10 06:57:36 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7834353156513091011, userId=1472581674973998455, text=sit sit rutrum ipsum euismod Kafka dolor elit. placerat., createdAt=2021-08-03T15:16:32))
2021-08-10 06:57:36 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5478593779813230472, userId=3519860467023290014, text=Lorem Nam magna magna placerat. Kafka Nam velit amet,, createdAt=2021-08-03T15:58:32))
2021-08-10 06:57:37 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1590293706069032606, userId=5806024648916521406, text=rutrum amet, Nam rutrum vitae Kafka fringilla euismod sit, createdAt=2021-08-03T16:21:52))
2021-08-10 06:57:37 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6064023656375391071, userId=4344193367527799511, text=elit. consectetur dolor ipsum consectetur Kafka consectetur fringilla velit, createdAt=2021-08-03T17:05:33))
2021-08-10 06:57:38 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8977606450777783207, userId=2366411826796014753, text=consectetur elit. nec euismod euismod Kafka consectetur consectetur adipiscing, createdAt=2021-08-03T17:28:53))
2021-08-10 06:57:38 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1887957575730276045, userId=2340596142200641665, text=Lorem magna fringilla Nam consectetur Kafka adipiscing adipiscing Nam, createdAt=2021-08-03T17:40:23))
2021-08-10 06:57:39 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5219087396083615620, userId=8999117558973762988, text=vitae placerat. Nam vitae placerat. Kafka suscipit euismod fringilla, createdAt=2021-08-03T18:07:44))
2021-08-10 06:57:39 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6612706615298365897, userId=8814450340012121623, text=ipsum euismod sit velit Lorem Kafka euismod placerat. Vivamus, createdAt=2021-08-03T18:10:54))
2021-08-10 06:57:40 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=562232430947692693, userId=6158372626527915724, text=vitae adipiscing nisl elit. nec Kafka dolor vitae magna, createdAt=2021-08-03T18:10:34))
2021-08-10 06:57:40 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4017772998743741496, userId=7872762393370781283, text=velit nec Vivamus ipsum tempus Kafka rutrum nec ipsum, createdAt=2021-08-03T18:19:34))
2021-08-10 06:57:41 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2719871638743218839, userId=6991356899014465689, text=fringilla tempus ipsum vitae tempus Kafka amet, Lorem amet,, createdAt=2021-08-03T18:37:24))
2021-08-10 06:57:41 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2950465563316048024, userId=1064979388206033923, text=rutrum placerat. adipiscing adipiscing elit. Kafka tempus Vivamus euismod, createdAt=2021-08-03T19:08:45))
2021-08-10 06:57:42 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2757312224223412829, userId=7537015170891287601, text=sit dolor dolor nec Lorem Kafka dolor Nam sit, createdAt=2021-08-03T19:17:35))
2021-08-10 06:57:42 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2680788404054418742, userId=6674932347646493553, text=velit Vivamus magna placerat. sit Kafka tempus vitae fringilla, createdAt=2021-08-03T19:26:55))
2021-08-10 06:57:43 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4597275553998012109, userId=4093813525587803533, text=consectetur fringilla Vivamus Lorem Lorem Kafka amet, vitae ipsum, createdAt=2021-08-03T19:29:05))
2021-08-10 06:57:43 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9010790371934193224, userId=5454406606197113182, text=adipiscing sit magna vitae tempus Kafka euismod nisl velit, createdAt=2021-08-03T19:56:45))
2021-08-10 06:57:44 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7930072327963061861, userId=3526272809412447300, text=dolor suscipit tempus placerat. Lorem Kafka sit Vivamus nec, createdAt=2021-08-04T04:59:15))
2021-08-10 06:57:44 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=586054377743354037, userId=4478740828209787264, text=nec vitae ipsum sit vitae Kafka adipiscing suscipit suscipit, createdAt=2021-08-04T05:08:55))
2021-08-10 06:57:45 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7371774453763852142, userId=44269112972143796, text=suscipit adipiscing nec tempus consectetur Kafka dolor nec nisl, createdAt=2021-08-04T05:21:15))
2021-08-10 06:57:45 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6139354624266217130, userId=2525958742823413305, text=tempus consectetur Nam velit Vivamus Kafka vitae adipiscing sit, createdAt=2021-08-04T05:33:26))
2021-08-10 06:57:46 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8799027218819598424, userId=3064631466674101420, text=placerat. placerat. suscipit dolor nisl Kafka consectetur Vivamus vitae, createdAt=2021-08-04T05:53:56))
2021-08-10 06:57:46 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4131936640497489300, userId=8885286319171041235, text=amet, consectetur amet, consectetur nec Kafka rutrum vitae placerat., createdAt=2021-08-04T06:29:19))
2021-08-10 06:57:46 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:57:47 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3502199844688379418, userId=8371320608902289594, text=ipsum fringilla elit. consectetur consectetur Kafka dolor nisl nisl, createdAt=2021-08-04T06:53:39))
2021-08-10 06:57:47 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2697864069977146417, userId=2077460576185562011, text=Vivamus nec rutrum rutrum tempus Kafka placerat. Nam adipiscing, createdAt=2021-08-04T07:40:50))
2021-08-10 06:57:48 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1998858593460631336, userId=5883596551052906970, text=Nam nisl adipiscing velit fringilla Kafka nec rutrum rutrum, createdAt=2021-08-04T08:03:51))
2021-08-10 06:57:48 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=940700565705647424, userId=8935836862133785417, text=placerat. ipsum velit sit amet, Kafka nec vitae adipiscing, createdAt=2021-08-04T08:04:01))
2021-08-10 06:57:49 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4081520272855544072, userId=4288575925099937100, text=amet, euismod euismod rutrum amet, Kafka Vivamus euismod suscipit, createdAt=2021-08-04T08:11:21))
2021-08-10 06:57:49 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5052052592274452146, userId=3254538669669733051, text=ipsum velit adipiscing euismod fringilla Kafka Lorem placerat. ipsum, createdAt=2021-08-04T08:31:51))
2021-08-10 06:57:50 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3412304893531831937, userId=2202441063392117279, text=consectetur Nam Vivamus nisl sit Kafka rutrum nisl rutrum, createdAt=2021-08-04T09:24:18))
2021-08-10 06:57:50 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8499622604229589874, userId=4164536864341351219, text=euismod nec sit Vivamus euismod Kafka fringilla elit. magna, createdAt=2021-08-04T10:40:03))
2021-08-10 06:57:51 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7443824591034921160, userId=689258060456535437, text=rutrum ipsum nisl fringilla ipsum Kafka placerat. Lorem tempus, createdAt=2021-08-04T11:34:16))
2021-08-10 06:57:51 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2673464655342703024, userId=4301799512194559148, text=adipiscing euismod consectetur Vivamus sit Kafka suscipit vitae fringilla, createdAt=2021-08-04T11:58:28))
2021-08-10 06:57:52 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3321804954872244117, userId=4144844182599918265, text=Nam consectetur magna adipiscing Vivamus Kafka sit consectetur placerat., createdAt=2021-08-04T12:41:29))
2021-08-10 06:57:52 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=569634766351120208, userId=681927066893708738, text=sit elit. dolor elit. Vivamus Kafka amet, nec velit, createdAt=2021-08-04T12:46:49))
2021-08-10 06:57:53 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1936957284330222363, userId=8121058388355928201, text=nisl nec velit velit ipsum Kafka nec fringilla placerat., createdAt=2021-08-04T13:01:39))
2021-08-10 06:57:53 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5006083299872362341, userId=4839180706321239423, text=magna magna fringilla vitae dolor Kafka Vivamus placerat. ipsum, createdAt=2021-08-04T13:04:29))
2021-08-10 06:57:54 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7520386214660438470, userId=61220620707178434, text=tempus Lorem consectetur suscipit Nam Kafka dolor nisl Vivamus, createdAt=2021-08-04T13:20:09))
2021-08-10 06:57:54 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1518078106436032003, userId=1690957934303334401, text=amet, euismod elit. magna Vivamus Kafka consectetur placerat. Vivamus, createdAt=2021-08-04T13:37:40))
2021-08-10 06:57:55 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3152653154919448409, userId=7642104762615057335, text=tempus vitae sit consectetur suscipit Kafka fringilla nec consectetur, createdAt=2021-08-04T13:47:10))
2021-08-10 06:57:55 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1723561858488849251, userId=1767439734124910994, text=rutrum vitae euismod tempus ipsum Kafka suscipit amet, nisl, createdAt=2021-08-04T13:53:10))
2021-08-10 06:57:56 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3181444171527714608, userId=3748683715665227033, text=consectetur elit. nisl adipiscing velit Kafka vitae Nam fringilla, createdAt=2021-08-04T14:07:50))
2021-08-10 06:57:56 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2381444671752418533, userId=1754428036348131402, text=consectetur elit. fringilla rutrum suscipit Kafka euismod fringilla amet,, createdAt=2021-08-09T10:16:24))
2021-08-10 06:57:57 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=976008609334858379, userId=5508757313486051533, text=dolor vitae sit sit nisl Kafka tempus amet, nec, createdAt=2021-08-09T10:42:24))
2021-08-10 06:57:57 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3594092973007084229, userId=4894253040216966085, text=nec rutrum rutrum magna consectetur Kafka vitae placerat. rutrum, createdAt=2021-08-09T11:10:04))
2021-08-10 06:57:58 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8683006646319498640, userId=1397547490348176098, text=placerat. rutrum amet, sit nisl Kafka dolor suscipit dolor, createdAt=2021-08-09T11:52:55))
2021-08-10 06:57:58 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5605973500506155798, userId=156705086873515218, text=adipiscing dolor consectetur magna tempus Kafka sit ipsum placerat., createdAt=2021-08-09T11:55:45))
2021-08-10 06:57:58 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:57:59 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4498511357689265032, userId=7328808838229657353, text=sit nisl Nam elit. Lorem Kafka dolor rutrum dolor, createdAt=2021-08-09T11:59:05))
2021-08-10 06:57:59 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8863410898999721668, userId=8286308329246063133, text=suscipit dolor ipsum tempus fringilla Kafka tempus Vivamus euismod, createdAt=2021-08-09T12:13:56))
2021-08-10 06:58:00 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8233413750465504457, userId=6216347858642530065, text=elit. sit elit. placerat. Nam Kafka elit. euismod Nam, createdAt=2021-08-09T12:44:56))
2021-08-10 06:58:00 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=883129672844682797, userId=5334421482453504682, text=nec placerat. tempus rutrum consectetur Kafka Vivamus Lorem adipiscing, createdAt=2021-08-09T13:56:07))
2021-08-10 06:58:01 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7188303244098977425, userId=5520542505305177614, text=sit euismod sit consectetur nec Kafka nisl Vivamus ipsum Vivamus, createdAt=2021-08-03T16:07:42))
2021-08-10 06:58:01 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5461983095571441851, userId=938248359483633711, text=amet, Nam nec ipsum suscipit Kafka placerat. velit Nam Lorem, createdAt=2021-08-03T15:17:42))
2021-08-10 06:58:02 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2449265868156510916, userId=8166408319962187423, text=sit Lorem nec nec magna Kafka nec sit magna tempus, createdAt=2021-08-03T15:17:02))
2021-08-10 06:58:02 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=864322884129006001, userId=3441636604108269192, text=sit velit magna Nam tempus Kafka Lorem euismod placerat. sit, createdAt=2021-08-03T15:29:52))
2021-08-10 06:58:03 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4058391168235183655, userId=6882076657872727496, text=sit magna velit euismod elit. Kafka euismod placerat. nec consectetur, createdAt=2021-08-03T15:38:32))
2021-08-10 06:58:03 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=920500409498236144, userId=7206091671563064418, text=magna elit. suscipit sit vitae Kafka elit. velit ipsum Vivamus, createdAt=2021-08-03T15:50:52))
2021-08-10 06:58:04 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8700048154876038100, userId=3876500964514394030, text=Nam ipsum adipiscing fringilla ipsum Kafka placerat. dolor nisl elit., createdAt=2021-08-03T16:07:12))
2021-08-10 06:58:04 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1175434809515629455, userId=3917842807022755567, text=placerat. rutrum velit nec magna Kafka fringilla Vivamus Vivamus placerat., createdAt=2021-08-03T16:29:03))
2021-08-10 06:58:05 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3412268207228266003, userId=182456101422495172, text=Lorem fringilla dolor velit sit Kafka fringilla ipsum elit. consectetur, createdAt=2021-08-03T17:26:03))
2021-08-10 06:58:05 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8740375630760149059, userId=844587628337096006, text=dolor dolor placerat. sit consectetur Kafka magna consectetur ipsum nec, createdAt=2021-08-03T17:57:04))
2021-08-10 06:58:06 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6776244755370685704, userId=1555172048415927052, text=Vivamus Nam Vivamus tempus vitae Kafka sit sit velit suscipit, createdAt=2021-08-03T19:07:25))
2021-08-10 06:58:06 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2282903864448098861, userId=7314710245654856592, text=euismod velit sit Vivamus ipsum Kafka fringilla elit. adipiscing adipiscing, createdAt=2021-08-03T19:54:55))
2021-08-10 06:58:07 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6708789553071572100, userId=3365981347838405332, text=euismod consectetur elit. vitae dolor Kafka dolor magna dolor fringilla, createdAt=2021-08-03T19:54:15))
2021-08-10 06:58:07 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7936327771862829388, userId=7031868432630263820, text=nec consectetur suscipit placerat. magna Kafka euismod euismod nisl fringilla, createdAt=2021-08-03T20:12:16))
2021-08-10 06:58:08 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1351199558807195051, userId=8614457720283160289, text=adipiscing rutrum suscipit rutrum placerat. Kafka euismod vitae fringilla suscipit, createdAt=2021-08-04T04:55:35))
2021-08-10 06:58:08 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7743969017688914248, userId=1484315540857227131, text=placerat. velit Lorem nec velit Kafka magna nec ipsum nec, createdAt=2021-08-04T05:19:15))
2021-08-10 06:58:09 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=430333200709029339, userId=797371819618490098, text=adipiscing suscipit adipiscing Nam tempus Kafka nec nisl consectetur dolor, createdAt=2021-08-04T06:54:39))
2021-08-10 06:58:09 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4968576129653016777, userId=3891946552779546425, text=placerat. tempus placerat. tempus dolor Kafka amet, dolor velit magna, createdAt=2021-08-04T07:21:50))
2021-08-10 06:58:10 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=282198559458832223, userId=1688807843417974817, text=Vivamus elit. elit. ipsum ipsum Kafka euismod vitae magna nisl, createdAt=2021-08-04T07:40:20))
2021-08-10 06:58:10 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1605581340531505571, userId=2368041182642131397, text=nisl placerat. Vivamus velit sit Kafka suscipit placerat. Lorem consectetur, createdAt=2021-08-04T07:46:11))
2021-08-10 06:58:10 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:58:11 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9162850797061465519, userId=8069369832680794825, text=Nam amet, magna Lorem elit. Kafka ipsum adipiscing sit nisl, createdAt=2021-08-04T08:15:41))
2021-08-10 06:58:11 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4867242145586515837, userId=3157263007506166639, text=amet, elit. Nam Vivamus elit. Kafka fringilla amet, adipiscing Vivamus, createdAt=2021-08-04T08:24:51))
2021-08-10 06:58:12 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6953807289702902918, userId=6872703878328319103, text=vitae euismod elit. sit sit Kafka nec adipiscing vitae ipsum, createdAt=2021-08-04T08:25:11))
2021-08-10 06:58:12 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2309372305986344360, userId=5028430583266010296, text=Lorem velit nisl amet, vitae Kafka tempus Nam euismod Nam, createdAt=2021-08-04T09:10:48))
2021-08-10 06:58:13 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8770580374393727710, userId=1139909500304535315, text=suscipit amet, velit adipiscing rutrum Kafka nisl sit fringilla Vivamus, createdAt=2021-08-04T09:43:02))
2021-08-10 06:58:13 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3770475510798137578, userId=1717979171728629116, text=ipsum magna vitae rutrum nec Kafka placerat. nisl nec elit., createdAt=2021-08-04T10:01:23))
2021-08-10 06:58:14 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=470484658187142535, userId=49331832839960255, text=nec fringilla suscipit nisl suscipit Kafka magna tempus placerat. rutrum, createdAt=2021-08-04T10:10:43))
2021-08-10 06:58:14 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4849786255508930566, userId=4291069136246864625, text=nec Lorem vitae magna rutrum Kafka Lorem sit suscipit adipiscing, createdAt=2021-08-04T10:25:03))
2021-08-10 06:58:15 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3452842763688690206, userId=3686264051619337815, text=velit fringilla amet, magna tempus Kafka nisl magna Lorem elit., createdAt=2021-08-04T10:26:13))
2021-08-10 06:58:15 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6568074396247053544, userId=2244048723055183440, text=adipiscing Vivamus dolor Vivamus Vivamus Kafka vitae rutrum Lorem nisl, createdAt=2021-08-04T11:15:24))
2021-08-10 06:58:16 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2212790146631957372, userId=4745920611676558564, text=sit nisl sit Nam sit Kafka rutrum ipsum elit. tempus, createdAt=2021-08-04T11:44:58))
2021-08-10 06:58:16 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5179865572541123084, userId=2529033945470091504, text=euismod velit nec suscipit dolor Kafka ipsum elit. Lorem placerat., createdAt=2021-08-04T11:48:18))
2021-08-10 06:58:17 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3055809760288093414, userId=5853563535135278893, text=fringilla Nam magna sit nec Kafka rutrum placerat. nisl Nam, createdAt=2021-08-04T12:19:18))
2021-08-10 06:58:17 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7031757686985615901, userId=183085981319501337, text=Lorem Nam placerat. nisl magna Kafka Lorem ipsum nisl Lorem, createdAt=2021-08-04T12:24:39))
2021-08-10 06:58:18 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5512439416135592886, userId=4114666888026745396, text=suscipit velit amet, magna Vivamus Kafka placerat. placerat. tempus consectetur, createdAt=2021-08-04T12:30:59))
2021-08-10 06:58:18 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4385178060047651800, userId=4401758251128021721, text=placerat. sit vitae elit. nisl Kafka velit suscipit adipiscing fringilla, createdAt=2021-08-04T13:18:29))
2021-08-10 06:58:19 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2081491443963814275, userId=7362483437592775426, text=nisl amet, amet, ipsum sit Kafka ipsum Lorem sit magna, createdAt=2021-08-04T13:28:20))
2021-08-10 06:58:19 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=534866999240686415, userId=6382930726668736574, text=elit. elit. ipsum adipiscing placerat. Kafka magna suscipit ipsum placerat., createdAt=2021-08-04T13:34:10))
2021-08-10 06:58:20 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2132477081604331944, userId=3202134435965136973, text=consectetur velit Lorem nisl tempus Kafka fringilla sit fringilla placerat., createdAt=2021-08-04T13:57:10))
2021-08-10 06:58:20 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=161352910945458232, userId=8344724341203342718, text=adipiscing consectetur velit amet, vitae Kafka nisl consectetur adipiscing nisl, createdAt=2021-08-04T14:10))
2021-08-10 06:58:21 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3637950142711876959, userId=1233449656477242957, text=amet, ipsum vitae dolor elit. Kafka adipiscing Lorem elit. magna, createdAt=2021-08-04T14:22))
2021-08-10 06:58:21 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6154393342390492888, userId=5305427834211237856, text=adipiscing fringilla euismod elit. velit Kafka suscipit tempus amet, vitae, createdAt=2021-08-09T09:47:13))
2021-08-10 06:58:22 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4042500829912160551, userId=340245982203648394, text=Vivamus Lorem fringilla tempus magna Kafka sit consectetur nec amet,, createdAt=2021-08-09T10:22:54))
2021-08-10 06:58:22 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6583028954615781195, userId=4064817363231703061, text=amet, amet, tempus suscipit nec Kafka tempus elit. Lorem suscipit, createdAt=2021-08-09T10:26:34))
2021-08-10 06:58:22 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:58:23 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8251924097144358542, userId=6624017812249430336, text=Lorem nisl nec Lorem amet, Kafka sit adipiscing vitae fringilla, createdAt=2021-08-09T10:30:04))
2021-08-10 06:58:23 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4224331084867251278, userId=154166127735595841, text=Nam dolor amet, tempus adipiscing Kafka sit Vivamus euismod Vivamus, createdAt=2021-08-09T11:05:34))
2021-08-10 06:58:24 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6984168135821927434, userId=6082143717256934356, text=tempus magna ipsum tempus Lorem Kafka Nam placerat. Nam magna, createdAt=2021-08-09T11:26:05))
2021-08-10 06:58:24 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3312251109352611430, userId=252329490398634454, text=Nam Vivamus ipsum vitae magna Kafka fringilla magna suscipit tempus, createdAt=2021-08-09T11:38:35))
2021-08-10 06:58:25 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8584618016011943479, userId=6429864186366367291, text=velit consectetur nec nec consectetur Kafka rutrum fringilla adipiscing elit., createdAt=2021-08-09T11:48:05))
2021-08-10 06:58:25 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6551603620201895983, userId=1872710408794444345, text=rutrum amet, Lorem nec suscipit Kafka sit fringilla rutrum ipsum, createdAt=2021-08-09T11:57:35))
2021-08-10 06:58:26 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1254607581782964985, userId=6867628100971856458, text=vitae Nam tempus fringilla elit. Kafka euismod euismod amet, sit, createdAt=2021-08-09T11:58:15))
2021-08-10 06:58:26 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8932879358802965636, userId=2717476536490723993, text=suscipit nisl nisl magna Vivamus Kafka vitae consectetur rutrum ipsum, createdAt=2021-08-09T12:40:26))
2021-08-10 06:58:27 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2044638274133307543, userId=6025936514933965960, text=euismod nisl ipsum sit Nam Kafka nec adipiscing Nam adipiscing, createdAt=2021-08-09T13:07:37))
2021-08-10 06:58:27 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2230047706930039880, userId=7133475750266886288, text=fringilla amet, adipiscing consectetur elit. Kafka elit. vitae Lorem velit, createdAt=2021-08-09T13:12:37))
2021-08-10 06:58:28 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1616661740404217256, userId=61392057967499003, text=velit velit nec vitae Lorem Kafka ipsum Vivamus Lorem dolor, createdAt=2021-08-09T13:36:57))
2021-08-10 06:58:28 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1800206463780813632, userId=1279492475970158104, text=placerat. Lorem consectetur fringilla amet, Kafka consectetur ipsum adipiscing nec, createdAt=2021-08-09T13:52:17))
2021-08-10 06:58:29 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3137230109154427028, userId=2115714606379131385, text=placerat. rutrum rutrum placerat. Vivamus Kafka magna Nam adipiscing vitae, createdAt=2021-08-03T14:46:10))
2021-08-10 06:58:29 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2531532777123189626, userId=2423329314674229008, text=Nam rutrum sit elit. nisl Kafka Nam fringilla amet, velit, createdAt=2021-08-03T15:01:21))
2021-08-10 06:58:30 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5833278225666459299, userId=6057169981554670999, text=vitae sit magna vitae Nam Kafka adipiscing suscipit velit magna, createdAt=2021-08-03T15:11:21))
2021-08-10 06:58:30 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3096593088479889137, userId=7813467124962517411, text=suscipit vitae consectetur fringilla euismod Kafka elit. placerat. nec ipsum, createdAt=2021-08-03T15:15:32))
2021-08-10 06:58:31 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7283969939407766357, userId=7368175662590662101, text=nec suscipit elit. tempus velit Kafka velit rutrum tempus nisl, createdAt=2021-08-03T15:49:02))
2021-08-10 06:58:31 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5508421369428975795, userId=8035889377527560439, text=nec nisl placerat. rutrum euismod Kafka euismod rutrum Lorem consectetur, createdAt=2021-08-03T16:48:23))
2021-08-10 06:58:32 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3915940215814155249, userId=9056821736865530300, text=amet, vitae rutrum consectetur sit Kafka vitae amet, elit. nisl, createdAt=2021-08-03T17:01:13))
2021-08-10 06:58:32 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7207120792685344043, userId=6912798320588621871, text=elit. amet, elit. amet, Vivamus Kafka euismod sit elit. adipiscing, createdAt=2021-08-03T17:02:03))
2021-08-10 06:58:33 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8195232213748434119, userId=7390947608252283857, text=ipsum consectetur nec vitae rutrum Kafka rutrum consectetur fringilla magna, createdAt=2021-08-03T17:05:03))
2021-08-10 06:58:33 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4258360077419117619, userId=2504153710319967022, text=dolor magna nisl euismod tempus Kafka magna Nam amet, tempus, createdAt=2021-08-03T17:05:43))
2021-08-10 06:58:34 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2631965643455614834, userId=8597036303273709504, text=rutrum Lorem nec dolor dolor Kafka nisl elit. ipsum consectetur, createdAt=2021-08-03T17:18:13))
2021-08-10 06:58:34 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7798616069107241068, userId=1387790062203921369, text=amet, amet, nec dolor ipsum Kafka placerat. nisl Lorem sit, createdAt=2021-08-03T17:42:33))
2021-08-10 06:58:34 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:58:35 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3361179099342119900, userId=8119444472432624402, text=Lorem tempus nisl magna rutrum Kafka consectetur nisl euismod Lorem, createdAt=2021-08-03T17:49:04))
2021-08-10 06:58:35 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4139814685259956296, userId=525884985761349294, text=rutrum fringilla Nam ipsum Nam Kafka Vivamus euismod ipsum ipsum, createdAt=2021-08-03T17:48:14))
2021-08-10 06:58:36 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3344379734728090239, userId=270320794518186671, text=Nam dolor ipsum rutrum amet, Kafka sit placerat. fringilla fringilla, createdAt=2021-08-03T18:42:24))
2021-08-10 06:58:36 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3532818428815070021, userId=8084026436708233848, text=velit elit. rutrum fringilla nisl Kafka amet, dolor adipiscing nisl, createdAt=2021-08-03T18:46:44))
2021-08-10 06:58:37 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7682952072958375043, userId=8152378017070561742, text=Lorem vitae nec Lorem euismod Kafka sit amet, fringilla Nam, createdAt=2021-08-03T18:52:34))
2021-08-10 06:58:37 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4790282311598668677, userId=5306333596476423225, text=rutrum suscipit adipiscing magna magna Kafka Vivamus velit sit consectetur, createdAt=2021-08-03T19:03:24))
2021-08-10 06:58:38 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5881483438476364283, userId=5658172912508974830, text=elit. vitae euismod euismod suscipit Kafka Nam fringilla Lorem vitae, createdAt=2021-08-03T19:04:24))
2021-08-10 06:58:38 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4455793447833747884, userId=8579163748496913535, text=tempus Nam ipsum Nam elit. Kafka sit euismod Lorem Vivamus, createdAt=2021-08-03T19:35:15))
2021-08-10 06:58:39 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=336339178082227815, userId=1528182414460699240, text=Nam rutrum adipiscing Nam fringilla Kafka rutrum fringilla euismod vitae, createdAt=2021-08-03T20:05:35))
2021-08-10 06:58:39 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8885389068111590672, userId=1523425644776036806, text=nisl magna suscipit Lorem placerat. Kafka amet, ipsum sit vitae, createdAt=2021-08-04T05:29:16))
2021-08-10 06:58:40 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6022616361394964084, userId=6545990772404874238, text=suscipit Nam fringilla sit suscipit Kafka euismod elit. suscipit suscipit, createdAt=2021-08-04T05:59:46))
2021-08-10 06:58:40 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8667315137734366281, userId=6370659292278257904, text=Vivamus suscipit ipsum consectetur rutrum Kafka nec placerat. Vivamus nec, createdAt=2021-08-04T06:41:09))
2021-08-10 06:58:41 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1842607478413644091, userId=4041133278399926298, text=suscipit tempus rutrum placerat. vitae Kafka dolor dolor nisl ipsum, createdAt=2021-08-04T07:14:20))
2021-08-10 06:58:41 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7187861455288618335, userId=209466008411216171, text=vitae rutrum dolor amet, placerat. Kafka nec rutrum velit rutrum, createdAt=2021-08-04T07:47:21))
2021-08-10 06:58:42 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8362661557971051155, userId=645630603162097889, text=velit Vivamus vitae magna ipsum Kafka dolor ipsum adipiscing fringilla, createdAt=2021-08-04T08:23:21))
2021-08-10 06:58:42 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5227830038569756503, userId=6075912886414229054, text=vitae consectetur placerat. placerat. consectetur Kafka placerat. Lorem sit magna, createdAt=2021-08-04T10:00:43))
2021-08-10 06:58:43 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5039452948884630297, userId=8110360458666194976, text=Lorem consectetur Lorem amet, ipsum Kafka tempus tempus Vivamus elit., createdAt=2021-08-04T09:59:33))
2021-08-10 06:58:43 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7067064887106609278, userId=6803510330344716968, text=vitae consectetur nisl ipsum adipiscing Kafka suscipit ipsum dolor rutrum, createdAt=2021-08-04T10:05:53))
2021-08-10 06:58:44 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7181874682831123101, userId=5975768967496327765, text=euismod Lorem vitae Vivamus Lorem Kafka placerat. velit tempus nisl, createdAt=2021-08-04T10:28:33))
2021-08-10 06:58:44 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2214614739863323294, userId=7492027643491542040, text=rutrum fringilla consectetur Vivamus dolor Kafka adipiscing euismod fringilla velit, createdAt=2021-08-04T10:47:04))
2021-08-10 06:58:45 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=847492730748638863, userId=510613727297338546, text=placerat. magna Nam Vivamus elit. Kafka tempus adipiscing Nam suscipit, createdAt=2021-08-04T10:46:43))
2021-08-10 06:58:45 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5096433977714837727, userId=2046847652851055519, text=elit. Lorem vitae nisl vitae Kafka consectetur elit. Lorem suscipit, createdAt=2021-08-04T10:49:04))
2021-08-10 06:58:46 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4202429155244563991, userId=4336859033546347908, text=elit. placerat. rutrum suscipit Vivamus Kafka Vivamus dolor suscipit rutrum, createdAt=2021-08-04T10:52:24))
2021-08-10 06:58:46 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6885243072289395248, userId=1947722842254558217, text=euismod sit adipiscing Vivamus dolor Kafka euismod adipiscing tempus euismod, createdAt=2021-08-04T11:19:24))
2021-08-10 06:58:46 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:58:47 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7983698591381764166, userId=4920822367286334345, text=elit. nisl amet, Nam velit Kafka dolor euismod nec fringilla, createdAt=2021-08-04T11:35:18))
2021-08-10 06:58:47 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1088784742402208733, userId=4433804784592533176, text=Vivamus vitae Vivamus nec euismod Kafka ipsum Nam suscipit rutrum, createdAt=2021-08-04T11:44:18))
2021-08-10 06:58:48 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3024624037043504979, userId=3656273477228352225, text=adipiscing velit dolor consectetur velit Kafka rutrum placerat. euismod adipiscing, createdAt=2021-08-04T11:46:58))
2021-08-10 06:58:48 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2754650175075404822, userId=8552147344061747000, text=velit consectetur sit Lorem velit Kafka magna placerat. fringilla dolor, createdAt=2021-08-04T12:41:19))
2021-08-10 06:58:49 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5529940288933055394, userId=6044385915136610280, text=vitae tempus elit. nec Vivamus Kafka sit vitae tempus placerat., createdAt=2021-08-04T13:20:39))
2021-08-10 06:58:49 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6438604778276947405, userId=2476819618551951263, text=dolor vitae Vivamus nec Nam Kafka euismod velit magna rutrum, createdAt=2021-08-04T13:38))
2021-08-10 06:58:50 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4874345148153414331, userId=2985671255108175767, text=nec rutrum fringilla tempus Nam Kafka nec magna nisl amet,, createdAt=2021-08-04T13:50:40))
2021-08-10 06:58:50 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5019534543679804928, userId=5136935687615859041, text=consectetur fringilla tempus adipiscing fringilla Kafka Lorem Nam suscipit adipiscing, createdAt=2021-08-04T13:52:40))
2021-08-10 06:58:51 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5780934046967355176, userId=5406025746854647764, text=fringilla Lorem amet, fringilla vitae Kafka suscipit nisl ipsum consectetur, createdAt=2021-08-04T13:56:20))
2021-08-10 06:58:51 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1768180252347231569, userId=3153636163761283377, text=nisl euismod euismod nec Nam Kafka Nam nec nisl consectetur, createdAt=2021-08-04T14:14:30))
2021-08-10 06:58:52 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4488849978029558219, userId=3303944750824872125, text=dolor nisl velit tempus tempus Kafka magna ipsum Nam Lorem, createdAt=2021-08-09T09:55:13))
2021-08-10 06:58:52 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3925785356468459949, userId=1063659490777966562, text=sit adipiscing consectetur nisl vitae Kafka euismod sit amet, tempus, createdAt=2021-08-09T09:55:53))
2021-08-10 06:58:53 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1488678907015190141, userId=2190626296400273906, text=Vivamus Vivamus Lorem vitae dolor Kafka nisl rutrum placerat. dolor, createdAt=2021-08-09T10:03:33))
2021-08-10 06:58:53 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8537261099891754043, userId=6765476489781615789, text=tempus velit vitae placerat. placerat. Kafka Nam consectetur nisl dolor, createdAt=2021-08-09T10:18:34))
2021-08-10 06:58:54 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6674321279127386418, userId=7830060108170055702, text=placerat. ipsum nisl elit. elit. Kafka dolor adipiscing dolor elit., createdAt=2021-08-09T10:22:44))
2021-08-10 06:58:54 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8687753771877983572, userId=5031599680441944391, text=dolor Lorem velit adipiscing magna Kafka fringilla vitae Nam sit, createdAt=2021-08-09T10:45:34))
2021-08-10 06:58:55 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2672292661215970873, userId=5852746632171947256, text=Nam fringilla Lorem tempus amet, Kafka vitae placerat. vitae placerat., createdAt=2021-08-09T10:57:54))
2021-08-10 06:58:55 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8645227580700475402, userId=2274360764080559787, text=suscipit rutrum dolor fringilla suscipit Kafka elit. consectetur Lorem fringilla, createdAt=2021-08-09T12:59:17))
2021-08-10 06:58:56 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8659026190016339212, userId=5180679031036526723, text=euismod consectetur vitae fringilla amet, Kafka Vivamus consectetur vitae consectetur, createdAt=2021-08-09T13:29:27))
2021-08-10 06:58:56 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=915060648823317632, userId=2699969709478489204, text=placerat. suscipit rutrum suscipit dolor Kafka elit. euismod Nam magna, createdAt=2021-08-09T13:32:57))
2021-08-10 06:58:57 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3568186834736995741, userId=8369082755122064208, text=nec vitae adipiscing Vivamus tempus Kafka adipiscing nec placerat. nec, createdAt=2021-08-09T13:32:47))
2021-08-10 06:58:57 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5375607057610356448, userId=3875843489045581732, text=Nam Vivamus euismod sit Vivamus Kafka magna Vivamus adipiscing tempus, createdAt=2021-08-09T13:44:07))
2021-08-10 06:58:58 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1218404143252848411, userId=1197195801258195062, text=Lorem ipsum consectetur velit sit consectetur Kafka suscipit nisl sit Lorem, createdAt=2021-08-03T15:57:02))
2021-08-10 06:58:58 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2416092195646703081, userId=8327523705748633349, text=nisl suscipit elit. amet, Lorem velit Kafka euismod velit sit magna, createdAt=2021-08-03T15:59:52))
2021-08-10 06:58:58 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:58:59 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1945245166319072083, userId=3629555014984251456, text=fringilla fringilla nec placerat. rutrum amet, Kafka ipsum amet, nec dolor, createdAt=2021-08-03T16:07:52))
2021-08-10 06:58:59 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=226172030051830020, userId=2531340562389560700, text=nec elit. consectetur suscipit velit elit. Kafka vitae vitae amet, nec, createdAt=2021-08-03T16:08:52))
2021-08-10 06:59:00 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8994616171234684748, userId=2455990202662632601, text=velit Nam consectetur Lorem magna consectetur Kafka Nam adipiscing vitae suscipit, createdAt=2021-08-03T16:14:52))
2021-08-10 06:59:00 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2691281272921516973, userId=606500813363964337, text=placerat. Nam dolor suscipit Nam velit Kafka dolor Lorem amet, dolor, createdAt=2021-08-03T16:01:02))
2021-08-10 06:59:01 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6187322962182362799, userId=2580325081253531107, text=consectetur fringilla placerat. placerat. euismod Lorem Kafka velit nec magna placerat., createdAt=2021-08-03T15:19:42))
2021-08-10 06:59:01 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6135605020096521269, userId=4534614613520834432, text=elit. ipsum sit Lorem nisl tempus Kafka consectetur placerat. rutrum rutrum, createdAt=2021-08-03T15:24:22))
2021-08-10 06:59:02 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=732525117597034445, userId=1883911896435033882, text=dolor euismod magna suscipit dolor Nam Kafka amet, fringilla nisl vitae, createdAt=2021-08-03T15:29:42))
2021-08-10 06:59:02 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=473948853593674536, userId=7728468288507363364, text=placerat. consectetur tempus amet, placerat. elit. Kafka Lorem magna ipsum magna, createdAt=2021-08-03T15:32:32))
2021-08-10 06:59:03 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7203718048871718722, userId=4071623134807705575, text=suscipit ipsum sit sit sit adipiscing Kafka amet, amet, adipiscing suscipit, createdAt=2021-08-03T15:35:22))
2021-08-10 06:59:03 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1760212722856495546, userId=7739127181267973159, text=magna Lorem dolor nisl suscipit sit Kafka elit. adipiscing amet, vitae, createdAt=2021-08-03T15:50:32))
2021-08-10 06:59:04 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1996233764133785703, userId=4187586380070151510, text=Nam Lorem rutrum nec dolor suscipit Kafka fringilla placerat. nisl dolor, createdAt=2021-08-03T16:18:32))
2021-08-10 06:59:04 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5692834583994708890, userId=1847036847038615561, text=dolor nisl nec magna euismod suscipit Kafka suscipit nisl elit. sit, createdAt=2021-08-03T16:29:23))
2021-08-10 06:59:05 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4770987212904723699, userId=6894732704859639097, text=magna tempus Lorem tempus nec ipsum Kafka dolor dolor nec Vivamus, createdAt=2021-08-03T16:41:33))
2021-08-10 06:59:05 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2962168756978497887, userId=2493161916438838125, text=tempus vitae suscipit magna tempus sit Kafka elit. adipiscing magna fringilla, createdAt=2021-08-03T17:06:33))
2021-08-10 06:59:06 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1714797431566189150, userId=8746290878902230867, text=ipsum euismod suscipit fringilla fringilla velit Kafka dolor amet, nisl Lorem, createdAt=2021-08-03T17:40:43))
2021-08-10 06:59:06 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2004153569185484300, userId=5121478306227456441, text=Lorem rutrum euismod sit magna placerat. Kafka magna elit. ipsum adipiscing, createdAt=2021-08-03T17:52:44))
2021-08-10 06:59:07 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2858437907002389604, userId=4784102961893876477, text=Vivamus nec fringilla nisl nec Lorem Kafka elit. fringilla Lorem velit, createdAt=2021-08-03T18:34:04))
2021-08-10 06:59:07 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5408339642008684459, userId=6250570756390781174, text=Vivamus tempus euismod euismod velit vitae Kafka Nam suscipit amet, vitae, createdAt=2021-08-03T18:34:44))
2021-08-10 06:59:08 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8342972646686872091, userId=8256979151685323610, text=vitae rutrum velit suscipit ipsum euismod Kafka velit suscipit Nam Vivamus, createdAt=2021-08-03T18:41:14))
2021-08-10 06:59:08 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3516202633248221621, userId=5548803665801364847, text=consectetur nec sit rutrum euismod Vivamus Kafka Nam amet, Nam consectetur, createdAt=2021-08-03T19:01:44))
2021-08-10 06:59:09 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8226636346353587498, userId=4876090095679304518, text=dolor sit vitae rutrum Nam sit Kafka amet, magna magna dolor, createdAt=2021-08-03T19:39:35))
2021-08-10 06:59:09 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7632126332641387207, userId=6737901829323293292, text=elit. tempus ipsum nec dolor fringilla Kafka euismod Nam euismod tempus, createdAt=2021-08-03T19:51:55))
2021-08-10 06:59:10 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7486374472268816343, userId=6628480441453378231, text=placerat. adipiscing sit tempus Vivamus sit Kafka velit sit tempus adipiscing, createdAt=2021-08-03T20:19:26))
2021-08-10 06:59:10 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4574039698548662456, userId=7938407922619360904, text=amet, nisl Lorem placerat. nisl nisl Kafka Lorem amet, suscipit magna, createdAt=2021-08-04T04:55:45))
2021-08-10 06:59:10 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:59:11 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7449246836001373400, userId=8469343177807330890, text=elit. elit. suscipit vitae nisl vitae Kafka placerat. placerat. adipiscing velit, createdAt=2021-08-04T04:58:15))
2021-08-10 06:59:11 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2612236772909068860, userId=7069430880655115138, text=dolor adipiscing euismod Nam euismod euismod Kafka placerat. ipsum velit nisl, createdAt=2021-08-04T05:13:35))
2021-08-10 06:59:12 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3453115321462462539, userId=1708858982312199392, text=rutrum fringilla fringilla tempus dolor amet, Kafka elit. euismod nec nec, createdAt=2021-08-04T07:01:09))
2021-08-10 06:59:12 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=890055067545509738, userId=6454947575919631469, text=Lorem euismod elit. adipiscing velit ipsum Kafka fringilla suscipit amet, amet,, createdAt=2021-08-04T07:31))
2021-08-10 06:59:13 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6598712041852892729, userId=715308532573934058, text=amet, tempus tempus nec elit. ipsum Kafka elit. sit Lorem velit, createdAt=2021-08-04T07:34:20))
2021-08-10 06:59:13 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8579267540409139964, userId=6930820500985611952, text=placerat. euismod rutrum suscipit consectetur elit. Kafka elit. sit consectetur nec, createdAt=2021-08-04T07:42:50))
2021-08-10 06:59:14 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5346449080280081337, userId=5614364482824433358, text=Nam Vivamus velit amet, Nam suscipit Kafka dolor amet, Nam consectetur, createdAt=2021-08-04T07:55:31))
2021-08-10 06:59:14 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4088772209913644361, userId=1235601983548701029, text=magna ipsum magna elit. dolor elit. Kafka rutrum velit Lorem rutrum, createdAt=2021-08-04T08:06:31))
2021-08-10 06:59:15 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2984713818122413263, userId=6717442542059768024, text=velit vitae sit sit tempus placerat. Kafka suscipit suscipit nec adipiscing, createdAt=2021-08-04T08:16:21))
2021-08-10 06:59:15 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3566930830710143152, userId=3712535439129064646, text=placerat. elit. sit elit. Nam euismod Kafka amet, sit Lorem dolor, createdAt=2021-08-04T08:15:51))
2021-08-10 06:59:16 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7896355809526089573, userId=6739803914368471405, text=euismod ipsum euismod ipsum dolor rutrum Kafka suscipit nisl fringilla nisl, createdAt=2021-08-04T08:25:31))
2021-08-10 06:59:16 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8192983917886258672, userId=4029698709392984665, text=nec ipsum nisl magna rutrum dolor Kafka suscipit placerat. Vivamus consectetur, createdAt=2021-08-04T09:16:28))
2021-08-10 06:59:17 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=152503242143292590, userId=6249385994061008194, text=vitae sit rutrum dolor vitae Lorem Kafka dolor sit velit dolor, createdAt=2021-08-04T09:27:58))
2021-08-10 06:59:17 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6116154531342150700, userId=6707310749814297523, text=adipiscing magna rutrum tempus Nam nec Kafka Vivamus suscipit nisl Lorem, createdAt=2021-08-04T09:30:59))
2021-08-10 06:59:18 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4441910854181262333, userId=5004841229731362126, text=suscipit dolor tempus amet, Lorem elit. Kafka ipsum Nam elit. Vivamus, createdAt=2021-08-04T09:43:32))
2021-08-10 06:59:18 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3204703029360725848, userId=1781023955161447277, text=velit nisl Lorem adipiscing Nam suscipit Kafka velit euismod sit Lorem, createdAt=2021-08-04T09:44:02))
2021-08-10 06:59:19 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1348530199573531714, userId=2816048187487977755, text=fringilla euismod sit Nam rutrum vitae Kafka tempus sit suscipit amet,, createdAt=2021-08-04T09:45:52))
2021-08-10 06:59:19 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8232421354488279130, userId=4444029643846503016, text=Lorem amet, adipiscing fringilla magna Lorem Kafka suscipit tempus ipsum nec, createdAt=2021-08-04T10:13:43))
2021-08-10 06:59:20 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7698446754987767734, userId=894190863239092878, text=placerat. amet, consectetur euismod rutrum magna Kafka euismod magna consectetur Vivamus, createdAt=2021-08-04T10:16:53))
2021-08-10 06:59:20 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8010051041805107816, userId=7137121785572940855, text=nec suscipit vitae suscipit adipiscing amet, Kafka nec dolor elit. sit, createdAt=2021-08-04T10:54:04))
2021-08-10 06:59:21 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2979456931394840717, userId=8960696825528626499, text=velit amet, rutrum adipiscing vitae euismod Kafka Vivamus dolor elit. nisl, createdAt=2021-08-04T10:57:34))
2021-08-10 06:59:21 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3415050041411646597, userId=3487041805358740931, text=consectetur sit placerat. tempus tempus suscipit Kafka tempus vitae consectetur nec, createdAt=2021-08-04T11:11:44))
2021-08-10 06:59:22 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=973214584400499911, userId=6060885459035264902, text=adipiscing elit. nec nisl tempus sit Kafka velit Nam dolor fringilla, createdAt=2021-08-04T11:37:58))
2021-08-10 06:59:22 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3509376156807829903, userId=4550745019509230392, text=Nam vitae Nam dolor vitae elit. Kafka rutrum elit. placerat. consectetur, createdAt=2021-08-04T11:49:18))
2021-08-10 06:59:22 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:59:23 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2193111823407271006, userId=1987604233410826650, text=Nam nisl adipiscing sit euismod Vivamus Kafka consectetur ipsum suscipit sit, createdAt=2021-08-04T12:21:18))
2021-08-10 06:59:23 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=645741133677612424, userId=2065686512654965704, text=magna vitae velit magna dolor tempus Kafka elit. magna consectetur consectetur, createdAt=2021-08-04T12:25:19))
2021-08-10 06:59:24 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=508903248101238210, userId=2053885545363212960, text=rutrum Vivamus tempus ipsum nec velit Kafka suscipit magna dolor magna, createdAt=2021-08-04T12:57:39))
2021-08-10 06:59:24 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2546023633761654867, userId=1622169342533442311, text=Lorem ipsum placerat. Nam elit. Lorem Kafka tempus Vivamus Lorem elit., createdAt=2021-08-04T13:37:10))
2021-08-10 06:59:25 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4346123918564232689, userId=9135216246253386976, text=magna elit. nisl tempus dolor sit Kafka consectetur dolor vitae Nam, createdAt=2021-08-04T14:15:10))
2021-08-10 06:59:25 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7721263055402635534, userId=1730627473894123049, text=dolor elit. elit. adipiscing magna Lorem Kafka euismod amet, Lorem Nam, createdAt=2021-08-04T14:19))
2021-08-10 06:59:26 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=473615149305667871, userId=6603429813342191697, text=amet, amet, Vivamus consectetur elit. fringilla Kafka Nam Lorem rutrum fringilla, createdAt=2021-08-04T14:21:20))
2021-08-10 06:59:26 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9156945266052287302, userId=2298403640879249957, text=Nam dolor euismod dolor consectetur consectetur Kafka Nam consectetur euismod Lorem, createdAt=2021-08-04T14:24))
2021-08-10 06:59:27 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8419837166959731796, userId=2873975245877113803, text=elit. consectetur nisl fringilla nec Vivamus Kafka dolor amet, vitae Lorem, createdAt=2021-08-09T09:50:03))
2021-08-10 06:59:27 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1019279277321916003, userId=8629581074518350844, text=magna Lorem magna euismod Lorem euismod Kafka nisl Vivamus elit. elit., createdAt=2021-08-09T09:53:03))
2021-08-10 06:59:28 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5543491539702038162, userId=2274374592225972553, text=amet, sit consectetur fringilla tempus Nam Kafka adipiscing adipiscing suscipit Vivamus, createdAt=2021-08-09T10:09:14))
2021-08-10 06:59:28 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6890568817136118386, userId=1841805916181994512, text=Nam sit euismod amet, Nam nec Kafka velit sit consectetur nec, createdAt=2021-08-09T10:32:54))
2021-08-10 06:59:29 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2234787691187682272, userId=2808333224633237942, text=consectetur vitae Nam rutrum magna tempus Kafka magna amet, dolor elit., createdAt=2021-08-09T11:20:35))
2021-08-10 06:59:29 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4017587429273959723, userId=8725779473088886630, text=elit. magna dolor sit placerat. rutrum Kafka placerat. suscipit Lorem tempus, createdAt=2021-08-09T12:00:55))
2021-08-10 06:59:30 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8295579756413166091, userId=4420717538200921674, text=adipiscing amet, euismod euismod vitae vitae Kafka adipiscing tempus elit. vitae, createdAt=2021-08-09T12:36:56))
2021-08-10 06:59:30 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7074757797278005747, userId=6735554291008839781, text=sit rutrum fringilla fringilla amet, amet, Kafka nec elit. magna elit., createdAt=2021-08-09T12:43:16))
2021-08-10 06:59:31 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8350531463927128008, userId=7486720769272801304, text=tempus velit Vivamus Nam amet, magna Kafka sit dolor dolor dolor, createdAt=2021-08-09T12:48:56))
2021-08-10 06:59:31 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9187528398216133781, userId=5895081848239106052, text=nisl elit. fringilla tempus rutrum consectetur Kafka sit placerat. nec rutrum, createdAt=2021-08-09T12:55:06))
2021-08-10 06:59:32 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1019890303143280252, userId=4741809715024388561, text=velit nec elit. placerat. nisl ipsum Kafka tempus fringilla nec consectetur, createdAt=2021-08-09T13:09:17))
2021-08-10 06:59:32 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5464323007817979963, userId=4540635526392489453, text=elit. Lorem adipiscing amet, Lorem nisl Kafka rutrum sit Nam Lorem, createdAt=2021-08-09T13:55:27))
2021-08-10 06:59:33 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4047478195335961758, userId=2339343181216207506, text=adipiscing dolor Nam vitae dolor placerat. Kafka Nam rutrum placerat. velit, createdAt=2021-08-03T14:44:40))
2021-08-10 06:59:33 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1268431759289559146, userId=8455257996022691874, text=sit magna Nam placerat. consectetur tempus Kafka placerat. euismod Nam vitae, createdAt=2021-08-03T14:46:20))
2021-08-10 06:59:34 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=894427990827211657, userId=3560394669433612006, text=amet, nec Vivamus suscipit consectetur Lorem Kafka consectetur dolor velit vitae, createdAt=2021-08-03T16:05:52))
2021-08-10 06:59:34 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8211278595923018970, userId=1278662099174968539, text=velit ipsum euismod Lorem dolor nisl Kafka nisl magna magna velit, createdAt=2021-08-03T16:08:52))
2021-08-10 06:59:34 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:59:35 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=511926900566839183, userId=2838004615996502037, text=Vivamus rutrum Lorem placerat. ipsum magna Kafka Lorem tempus velit nisl, createdAt=2021-08-03T16:30:03))
2021-08-10 06:59:35 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1975576472451437828, userId=4281351720481154473, text=nec nec rutrum amet, Vivamus fringilla Kafka tempus consectetur adipiscing suscipit, createdAt=2021-08-03T16:48:03))
2021-08-10 06:59:36 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8240186438586840422, userId=3454230095340734374, text=nec Lorem amet, tempus sit ipsum Kafka rutrum Vivamus Vivamus Nam, createdAt=2021-08-03T17:24:53))
2021-08-10 06:59:36 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7703444738784243224, userId=5030557041214220336, text=sit elit. rutrum consectetur vitae elit. Kafka placerat. sit nec sit, createdAt=2021-08-03T17:27:23))
2021-08-10 06:59:37 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5531013645374737737, userId=8101618815999081232, text=nisl placerat. vitae amet, adipiscing suscipit Kafka suscipit adipiscing tempus velit, createdAt=2021-08-03T17:32:53))
2021-08-10 06:59:37 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1241941529517814773, userId=7556755003731923565, text=velit magna Vivamus placerat. adipiscing placerat. Kafka dolor adipiscing vitae adipiscing, createdAt=2021-08-03T17:38:33))
2021-08-10 06:59:38 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3903069093617210793, userId=5924261076831328777, text=adipiscing nisl suscipit elit. Nam Nam Kafka consectetur rutrum consectetur elit., createdAt=2021-08-03T17:38:03))
2021-08-10 06:59:38 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2847715664895712802, userId=6247191480462562022, text=elit. elit. placerat. velit nec Lorem Kafka nisl nisl vitae suscipit, createdAt=2021-08-03T17:59:34))
2021-08-10 06:59:39 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=720059011363040065, userId=927224356333846006, text=consectetur dolor vitae amet, placerat. placerat. Kafka Nam dolor velit velit, createdAt=2021-08-03T18:42:14))
2021-08-10 06:59:39 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6720078899113923768, userId=5385840964356686210, text=suscipit dolor tempus suscipit Nam consectetur Kafka fringilla adipiscing suscipit Vivamus, createdAt=2021-08-03T18:47:54))
2021-08-10 06:59:40 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4295986522424498841, userId=8863089027493042606, text=amet, Nam euismod velit tempus Vivamus Kafka nisl nisl euismod vitae, createdAt=2021-08-03T19:04:14))
2021-08-10 06:59:40 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7022658384884968973, userId=2312470523950224990, text=fringilla Vivamus amet, Lorem velit rutrum Kafka suscipit dolor amet, nec, createdAt=2021-08-03T19:19:35))
2021-08-10 06:59:41 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4357211260697554206, userId=8451745419007306437, text=placerat. nec Lorem placerat. fringilla suscipit Kafka dolor amet, consectetur tempus, createdAt=2021-08-03T19:28:55))
2021-08-10 06:59:41 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2693194502450602264, userId=6609170075171140091, text=placerat. magna nisl fringilla fringilla vitae Kafka fringilla Nam rutrum adipiscing, createdAt=2021-08-03T19:58:45))
2021-08-10 06:59:42 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4492137333387127725, userId=7498562807284476007, text=dolor amet, nisl velit vitae adipiscing Kafka placerat. magna rutrum placerat., createdAt=2021-08-04T05:05:45))
2021-08-10 06:59:42 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9035480302917639668, userId=3559578988730752318, text=euismod amet, consectetur Lorem adipiscing adipiscing Kafka velit adipiscing ipsum euismod, createdAt=2021-08-04T05:42:26))
2021-08-10 06:59:43 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1758216182259153431, userId=6444881665403803543, text=consectetur elit. sit rutrum elit. vitae Kafka dolor rutrum rutrum suscipit, createdAt=2021-08-04T05:47:46))
2021-08-10 06:59:43 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4697151978476256683, userId=6035910504652427514, text=adipiscing consectetur velit velit suscipit nisl Kafka Vivamus suscipit nisl dolor, createdAt=2021-08-04T07:01:59))
2021-08-10 06:59:44 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=279139341444804645, userId=3283403287882811513, text=Lorem magna fringilla Nam suscipit elit. Kafka euismod Lorem fringilla placerat., createdAt=2021-08-04T07:02:59))
2021-08-10 06:59:44 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7355949154189670490, userId=6569085145420877601, text=euismod vitae euismod consectetur magna velit Kafka vitae dolor velit sit, createdAt=2021-08-04T07:11:50))
2021-08-10 06:59:45 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2198077354240179509, userId=2108106677503707584, text=nec rutrum placerat. sit dolor Nam Kafka euismod adipiscing elit. vitae, createdAt=2021-08-04T07:22:50))
2021-08-10 06:59:45 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5970787865059448415, userId=9022954828413087682, text=fringilla adipiscing rutrum ipsum consectetur ipsum Kafka suscipit amet, velit velit, createdAt=2021-08-04T07:32:10))
2021-08-10 06:59:46 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6116938677668898328, userId=3771023117816242965, text=rutrum placerat. rutrum ipsum adipiscing vitae Kafka amet, rutrum Lorem nisl, createdAt=2021-08-04T07:32))
2021-08-10 06:59:46 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1791355082332616610, userId=8766832562262764329, text=nisl magna nec consectetur magna Nam Kafka vitae amet, amet, fringilla, createdAt=2021-08-04T07:44:40))
2021-08-10 06:59:46 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:59:47 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3901156744915501781, userId=2682505017253223966, text=suscipit Vivamus Nam velit nec magna Kafka vitae suscipit dolor adipiscing, createdAt=2021-08-04T07:56:41))
2021-08-10 06:59:47 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5866369351469067637, userId=1499843539510659553, text=Lorem Lorem velit dolor adipiscing vitae Kafka placerat. suscipit rutrum placerat., createdAt=2021-08-04T08:23:41))
2021-08-10 06:59:48 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7899920288156856272, userId=1242468330482178574, text=velit nisl Vivamus magna magna vitae Kafka Nam vitae Vivamus velit, createdAt=2021-08-04T09:02:48))
2021-08-10 06:59:48 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6199185543726855663, userId=7577274265256733599, text=tempus dolor Nam velit dolor fringilla Kafka consectetur magna magna sit, createdAt=2021-08-04T09:08:48))
2021-08-10 06:59:49 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=796734479796180914, userId=4145105558494092491, text=elit. euismod Lorem Vivamus consectetur elit. Kafka Lorem velit velit suscipit, createdAt=2021-08-04T09:14:48))
2021-08-10 06:59:49 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4670418966927537295, userId=8308346093455756181, text=vitae consectetur consectetur amet, euismod rutrum Kafka adipiscing rutrum amet, elit., createdAt=2021-08-04T09:21:08))
2021-08-10 06:59:50 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7120981836588316179, userId=3680612242388877620, text=velit velit nisl suscipit tempus ipsum Kafka Nam amet, magna fringilla, createdAt=2021-08-04T10:50:14))
2021-08-10 06:59:50 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8133156324799887399, userId=6433140318026592742, text=dolor suscipit dolor rutrum euismod Vivamus Kafka elit. nisl amet, magna, createdAt=2021-08-04T11:20:04))
2021-08-10 06:59:51 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7065423857230367532, userId=7897653980777394519, text=fringilla magna amet, rutrum dolor placerat. Kafka rutrum fringilla Lorem vitae, createdAt=2021-08-04T12:25:39))
2021-08-10 06:59:51 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7852652843466382458, userId=2885308687541782427, text=consectetur suscipit sit Lorem tempus suscipit Kafka placerat. vitae Lorem nisl, createdAt=2021-08-04T12:58:49))
2021-08-10 06:59:52 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1203883865451068094, userId=5128108129842995848, text=placerat. nec amet, ipsum nisl magna Kafka Nam sit amet, suscipit, createdAt=2021-08-04T13:08:49))
2021-08-10 06:59:52 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2952967946075385215, userId=8770821287190119426, text=amet, vitae nisl nec fringilla vitae Kafka Nam Vivamus fringilla Nam, createdAt=2021-08-04T13:16:49))
2021-08-10 06:59:53 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1014304166033079333, userId=7458937150409828992, text=sit suscipit adipiscing tempus ipsum tempus Kafka nec dolor amet, Nam, createdAt=2021-08-04T13:50:20))
2021-08-10 06:59:53 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5036273628486585283, userId=9136606645404002955, text=suscipit fringilla consectetur magna sit euismod Kafka velit suscipit adipiscing fringilla, createdAt=2021-08-04T14:11:10))
2021-08-10 06:59:54 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4347367291071830961, userId=356620163649801744, text=adipiscing Vivamus Lorem amet, magna ipsum Kafka amet, tempus dolor adipiscing, createdAt=2021-08-04T14:19:50))
2021-08-10 06:59:54 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1783828457851490950, userId=3641376200977148145, text=elit. adipiscing elit. vitae tempus amet, Kafka euismod fringilla rutrum sit, createdAt=2021-08-09T09:57:03))
2021-08-10 06:59:55 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8629771560645888086, userId=1166185385349254716, text=nisl rutrum velit magna adipiscing Nam Kafka rutrum fringilla nisl Lorem, createdAt=2021-08-09T09:59:53))
2021-08-10 06:59:55 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3852896878875314652, userId=661657705567651218, text=amet, Lorem Lorem amet, adipiscing amet, Kafka placerat. suscipit consectetur rutrum, createdAt=2021-08-09T10:00:33))
2021-08-10 06:59:56 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3131032832313384897, userId=3410131052989672575, text=placerat. adipiscing tempus velit elit. nisl Kafka ipsum euismod Nam sit, createdAt=2021-08-09T10:04:03))
2021-08-10 06:59:57 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=263126336979933335, userId=3378134900601010473, text=nec Nam suscipit euismod elit. Lorem Kafka Lorem euismod velit tempus, createdAt=2021-08-09T10:13:04))
2021-08-10 06:59:57 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2179093489835296088, userId=152315710334773833, text=fringilla placerat. rutrum Lorem adipiscing consectetur Kafka magna nisl velit fringilla, createdAt=2021-08-09T10:30:44))
2021-08-10 06:59:58 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=253544765853049578, userId=7613255682369081148, text=dolor nec tempus dolor magna ipsum Kafka ipsum elit. tempus amet,, createdAt=2021-08-09T10:36:24))
2021-08-10 06:59:58 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=920463074048955275, userId=7967494362851622688, text=dolor sit euismod tempus elit. sit Kafka elit. elit. dolor dolor, createdAt=2021-08-09T11:09:24))
2021-08-10 06:59:59 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5999347372670172164, userId=7501376048296900498, text=elit. suscipit Lorem vitae consectetur suscipit Kafka magna Vivamus amet, magna, createdAt=2021-08-09T11:19:35))
2021-08-10 06:59:59 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 06:59:59 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4417762910845673824, userId=4060294444646178155, text=placerat. sit elit. sit ipsum sit Kafka nec adipiscing euismod Lorem, createdAt=2021-08-09T11:18:45))
2021-08-10 07:00:00 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1948572205753407084, userId=1210544183637249663, text=tempus fringilla vitae nisl nec dolor Kafka rutrum euismod dolor Vivamus, createdAt=2021-08-09T11:40:25))
2021-08-10 07:00:00 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1993168915204998755, userId=4749159291663628171, text=rutrum elit. suscipit nisl velit amet, Kafka elit. ipsum nisl velit, createdAt=2021-08-09T12:50:46))
2021-08-10 07:00:01 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8178756914346239875, userId=600445701596365000, text=vitae amet, fringilla elit. nec vitae Kafka magna rutrum sit nec, createdAt=2021-08-09T12:59:47))
2021-08-10 07:00:01 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3744231470753248793, userId=5848784893532324657, text=adipiscing ipsum consectetur dolor velit tempus Kafka amet, Vivamus ipsum tempus, createdAt=2021-08-09T13:14:17))
2021-08-10 07:00:02 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1764855376988453954, userId=5626277249119412947, text=magna Nam velit magna ipsum Nam Kafka elit. Nam amet, fringilla, createdAt=2021-08-09T13:14:27))
2021-08-10 07:00:02 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1194352756480620642, userId=3101000897348173149, text=fringilla Vivamus Vivamus suscipit Lorem amet, Kafka fringilla Lorem ipsum tempus, createdAt=2021-08-09T13:41:37))
2021-08-10 07:00:03 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7920492653066733771, userId=7075714727177745631, text=nisl Lorem consectetur vitae amet, ipsum Kafka suscipit rutrum nec dolor, createdAt=2021-08-09T13:47:47))
2021-08-10 07:00:03 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6926256037725632462, userId=811580214834753539, text=euismod adipiscing tempus fringilla nec nec Kafka ipsum rutrum euismod dolor, createdAt=2021-08-09T13:52:57))
2021-08-10 07:00:04 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7188063675644447709, userId=4862042850441076981, text=nisl Nam sit Nam magna amet, Kafka amet, fringilla fringilla euismod ipsum, createdAt=2021-08-03T15:59:22))
2021-08-10 07:00:04 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3651207151316536886, userId=2892520130472865878, text=Lorem Lorem sit amet, adipiscing velit Kafka Lorem adipiscing rutrum Nam tempus, createdAt=2021-08-03T16:00:32))
2021-08-10 07:00:05 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4168829355061289832, userId=6281935328480102772, text=consectetur sit consectetur suscipit fringilla placerat. Kafka fringilla Vivamus velit nec euismod, createdAt=2021-08-03T14:32:51))
2021-08-10 07:00:05 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4848768332530606677, userId=4096338829277653167, text=Nam amet, adipiscing elit. amet, ipsum Kafka rutrum consectetur Vivamus Vivamus euismod, createdAt=2021-08-03T15:20:02))
2021-08-10 07:00:06 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1485514101783242420, userId=8817654640725052916, text=Vivamus placerat. euismod elit. nec nec Kafka tempus fringilla rutrum velit tempus, createdAt=2021-08-03T15:27:02))
2021-08-10 07:00:06 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7299588693783674503, userId=8431790786780711980, text=amet, sit magna suscipit magna placerat. Kafka Lorem magna elit. vitae amet,, createdAt=2021-08-03T15:45:12))
2021-08-10 07:00:07 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4776328392192404738, userId=7973872786247458591, text=Lorem Nam placerat. Vivamus vitae adipiscing Kafka dolor suscipit adipiscing elit. adipiscing, createdAt=2021-08-03T15:54:42))
2021-08-10 07:00:07 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=746328197814993911, userId=5637959588695066119, text=amet, Nam suscipit dolor Lorem suscipit Kafka rutrum rutrum ipsum fringilla suscipit, createdAt=2021-08-03T16:22:32))
2021-08-10 07:00:08 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6487987666439675090, userId=477881053947523545, text=euismod placerat. rutrum adipiscing Nam suscipit Kafka nec consectetur dolor velit dolor, createdAt=2021-08-03T16:32:13))
2021-08-10 07:00:08 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=874603835519240166, userId=5416534940130745610, text=consectetur sit fringilla Lorem ipsum Nam Kafka Vivamus velit ipsum amet, tempus, createdAt=2021-08-03T16:38:23))
2021-08-10 07:00:09 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7911611251780227135, userId=7229607448534793293, text=placerat. Nam consectetur suscipit tempus ipsum Kafka velit fringilla vitae euismod Nam, createdAt=2021-08-03T16:55:23))
2021-08-10 07:00:09 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4976806927798105656, userId=5089556305306923991, text=suscipit consectetur dolor placerat. Vivamus fringilla Kafka sit euismod nisl suscipit amet,, createdAt=2021-08-03T17:13:33))
2021-08-10 07:00:10 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6610486669488177830, userId=3623039986101942297, text=rutrum Nam tempus tempus euismod Vivamus Kafka elit. elit. nisl suscipit ipsum, createdAt=2021-08-03T17:14:03))
2021-08-10 07:00:10 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4793135067426041674, userId=1410718294093161646, text=placerat. elit. fringilla Lorem euismod velit Kafka ipsum sit Nam euismod vitae, createdAt=2021-08-03T17:56:34))
2021-08-10 07:00:11 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3751664091929088763, userId=1756397620365002715, text=Lorem Nam vitae amet, Lorem magna Kafka elit. dolor Nam nec tempus, createdAt=2021-08-03T17:55:34))
2021-08-10 07:00:11 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:00:11 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1316462561549157276, userId=5798965005200766286, text=amet, magna Lorem euismod amet, Lorem Kafka Nam velit Lorem consectetur magna, createdAt=2021-08-03T17:57:44))
2021-08-10 07:00:12 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2824638850948649380, userId=8743579742090575369, text=sit nec nec nisl fringilla velit Kafka Vivamus nisl sit adipiscing euismod, createdAt=2021-08-03T18:06:44))
2021-08-10 07:00:12 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=861816758050107237, userId=2695256856947750072, text=adipiscing amet, Lorem amet, nisl placerat. Kafka nisl fringilla velit sit Vivamus, createdAt=2021-08-03T18:35:54))
2021-08-10 07:00:13 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2104054280339712800, userId=3604880385198730117, text=Nam Nam Vivamus tempus amet, euismod Kafka nec rutrum adipiscing amet, ipsum, createdAt=2021-08-03T19:12:35))
2021-08-10 07:00:13 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3449256518463069717, userId=1148900997913751959, text=velit elit. magna adipiscing elit. rutrum Kafka ipsum velit vitae magna Vivamus, createdAt=2021-08-03T19:36:55))
2021-08-10 07:00:14 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3534792873635157338, userId=1597044875559012674, text=Lorem velit placerat. fringilla velit Vivamus Kafka amet, fringilla dolor Lorem vitae, createdAt=2021-08-03T19:52:15))
2021-08-10 07:00:14 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3328829631542505827, userId=7736025351187834295, text=Nam suscipit vitae placerat. Lorem adipiscing Kafka sit tempus placerat. tempus Vivamus, createdAt=2021-08-03T20:15:16))
2021-08-10 07:00:15 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1841550331795444060, userId=4774768321887223575, text=Vivamus Lorem sit tempus amet, nec Kafka euismod ipsum amet, euismod adipiscing, createdAt=2021-08-04T05:16:35))
2021-08-10 07:00:15 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5905814798326967569, userId=283794335812361416, text=nisl suscipit dolor Vivamus rutrum ipsum Kafka Lorem tempus adipiscing Vivamus nisl, createdAt=2021-08-04T05:25:06))
2021-08-10 07:00:16 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9137184071615125192, userId=5217769200656376193, text=Vivamus nisl fringilla rutrum nec Lorem Kafka rutrum Nam velit nec amet,, createdAt=2021-08-04T05:55:26))
2021-08-10 07:00:16 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9076167539407096929, userId=3671374180034560475, text=consectetur sit euismod euismod suscipit placerat. Kafka dolor amet, suscipit suscipit magna, createdAt=2021-08-04T06:33:29))
2021-08-10 07:00:17 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7439057351903187718, userId=2379661044186690539, text=amet, nisl nisl euismod magna fringilla Kafka Lorem sit fringilla euismod nec, createdAt=2021-08-04T06:46:19))
2021-08-10 07:00:17 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6430997703358726405, userId=2554086083620154990, text=amet, ipsum adipiscing Vivamus adipiscing vitae Kafka elit. tempus consectetur fringilla Nam, createdAt=2021-08-04T06:52:09))
2021-08-10 07:00:18 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5818406673884169914, userId=3607158085366118227, text=Vivamus Nam placerat. nisl vitae Lorem Kafka sit amet, sit consectetur magna, createdAt=2021-08-04T07:09:20))
2021-08-10 07:00:18 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7312536772787553439, userId=7819122170344197534, text=Vivamus adipiscing velit amet, ipsum Nam Kafka amet, rutrum nisl consectetur placerat., createdAt=2021-08-04T07:12:30))
2021-08-10 07:00:19 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6365944386512163830, userId=7963178751396753287, text=tempus Vivamus rutrum rutrum Nam sit Kafka amet, Lorem adipiscing rutrum nec, createdAt=2021-08-04T07:22:30))
2021-08-10 07:00:19 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5553241760584823364, userId=1096906517786540802, text=euismod vitae consectetur euismod Lorem vitae Kafka fringilla nec rutrum nisl euismod, createdAt=2021-08-04T07:25:10))
2021-08-10 07:00:20 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5472879731693236033, userId=5093715088052614239, text=nec Nam rutrum Lorem ipsum sit Kafka nec consectetur vitae sit vitae, createdAt=2021-08-04T07:45:51))
2021-08-10 07:00:20 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4661311200020710400, userId=6587623707972694990, text=velit amet, velit sit tempus dolor Kafka amet, euismod tempus magna Lorem, createdAt=2021-08-04T07:51:11))
2021-08-10 07:00:21 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7348005377074161978, userId=1336510975014069585, text=adipiscing elit. placerat. vitae vitae Nam Kafka euismod consectetur Nam elit. magna, createdAt=2021-08-04T08:10:01))
2021-08-10 07:00:21 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1603956336508336434, userId=3962206829645077607, text=dolor euismod suscipit nisl Lorem adipiscing Kafka nisl rutrum magna consectetur rutrum, createdAt=2021-08-04T08:22:11))
2021-08-10 07:00:22 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8052890492718263322, userId=1549946039843348318, text=suscipit magna vitae rutrum magna suscipit Kafka dolor dolor suscipit placerat. consectetur, createdAt=2021-08-04T08:21:11))
2021-08-10 07:00:22 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3173096583728642099, userId=5496450448907996226, text=amet, Nam euismod placerat. magna consectetur Kafka ipsum ipsum adipiscing euismod sit, createdAt=2021-08-04T08:27:21))
2021-08-10 07:00:23 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9113821523640036508, userId=4284188139207033756, text=Nam rutrum fringilla adipiscing magna elit. Kafka suscipit ipsum suscipit Vivamus Vivamus, createdAt=2021-08-04T09:01:27))
2021-08-10 07:00:23 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:00:23 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1933234040018550850, userId=7139039188562274091, text=adipiscing consectetur fringilla adipiscing rutrum fringilla Kafka dolor nisl sit euismod Vivamus, createdAt=2021-08-04T09:16:08))
2021-08-10 07:00:24 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8143452734294801708, userId=8649982969752403816, text=rutrum Vivamus suscipit vitae Vivamus sit Kafka elit. suscipit Vivamus fringilla vitae, createdAt=2021-08-04T09:23:08))
2021-08-10 07:00:24 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8709621272582448649, userId=7618964769746988169, text=Vivamus euismod ipsum rutrum Lorem elit. Kafka dolor suscipit adipiscing tempus elit., createdAt=2021-08-04T09:52:43))
2021-08-10 07:00:25 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=880121079571807588, userId=2265624700125147903, text=sit Lorem velit vitae velit nec Kafka elit. suscipit Lorem Lorem consectetur, createdAt=2021-08-04T10:07:13))
2021-08-10 07:00:25 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2846346286514639131, userId=9211568563968600199, text=velit elit. ipsum dolor elit. velit Kafka sit rutrum adipiscing adipiscing placerat., createdAt=2021-08-04T10:10:53))
2021-08-10 07:00:26 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2595955153403463366, userId=3674391237545700079, text=Nam tempus placerat. magna suscipit Vivamus Kafka magna Nam amet, consectetur Nam, createdAt=2021-08-04T10:22:03))
2021-08-10 07:00:26 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2157227014421345811, userId=932423784962089660, text=adipiscing suscipit velit sit nisl fringilla Kafka amet, fringilla suscipit fringilla nec, createdAt=2021-08-04T10:25:43))
2021-08-10 07:00:27 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6550894427802263628, userId=2802014265612042043, text=fringilla amet, elit. ipsum suscipit Nam Kafka elit. dolor Nam euismod Nam, createdAt=2021-08-04T10:33:33))
2021-08-10 07:00:27 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1877324431486826458, userId=5185758023090553639, text=tempus Lorem euismod dolor amet, velit Kafka fringilla elit. vitae fringilla amet,, createdAt=2021-08-04T11:08:44))
2021-08-10 07:00:28 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=494132549158495708, userId=2213836790055428019, text=ipsum Nam tempus rutrum euismod nec Kafka nec euismod sit nec vitae, createdAt=2021-08-04T11:08:34))
2021-08-10 07:00:28 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8409375231213688876, userId=850889295349059899, text=placerat. placerat. euismod Lorem euismod consectetur Kafka velit adipiscing Lorem ipsum nisl, createdAt=2021-08-04T11:42:48))
2021-08-10 07:00:29 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3144675409505082701, userId=4856713638647613232, text=dolor dolor nisl nisl consectetur consectetur Kafka amet, magna Lorem Vivamus ipsum, createdAt=2021-08-04T12:00:28))
2021-08-10 07:00:29 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6605435333287582923, userId=8481268689739171453, text=Vivamus consectetur elit. Nam ipsum euismod Kafka Lorem suscipit nec velit consectetur, createdAt=2021-08-04T12:16:08))
2021-08-10 07:00:30 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1043916151293328584, userId=5656193352370900090, text=amet, dolor amet, placerat. rutrum amet, Kafka euismod nisl nisl Nam placerat., createdAt=2021-08-04T12:35:59))
2021-08-10 07:00:30 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8453918610025217808, userId=4781254347166609672, text=vitae euismod dolor nisl nisl dolor Kafka nisl velit Lorem nec ipsum, createdAt=2021-08-04T13:00:19))
2021-08-10 07:00:31 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2751569485359876770, userId=2050235795504571381, text=elit. Vivamus fringilla vitae velit placerat. Kafka adipiscing sit rutrum fringilla ipsum, createdAt=2021-08-04T13:24:09))
2021-08-10 07:00:31 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5347508218508152044, userId=6288933039719118567, text=consectetur fringilla magna Vivamus Vivamus magna Kafka ipsum rutrum magna Nam adipiscing, createdAt=2021-08-04T14:12))
2021-08-10 07:00:32 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6940553679609256399, userId=8798170536844722808, text=Nam ipsum nisl suscipit nec euismod Kafka Lorem vitae consectetur euismod rutrum, createdAt=2021-08-09T10:12:14))
2021-08-10 07:00:32 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6645757467096258038, userId=6040346291985960971, text=vitae ipsum elit. suscipit fringilla nisl Kafka amet, suscipit placerat. nec dolor, createdAt=2021-08-09T10:17:44))
2021-08-10 07:00:33 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8350327717159294156, userId=6541650244218236596, text=rutrum dolor sit consectetur Vivamus ipsum Kafka Nam euismod consectetur sit Vivamus, createdAt=2021-08-09T10:19:54))
2021-08-10 07:00:33 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2745886724890635549, userId=1545005085992427043, text=Lorem fringilla adipiscing dolor Nam placerat. Kafka tempus consectetur Lorem euismod fringilla, createdAt=2021-08-09T11:09:04))
2021-08-10 07:00:34 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3775113024323329074, userId=8253256309537157068, text=rutrum Nam consectetur consectetur nisl ipsum Kafka fringilla ipsum placerat. magna elit., createdAt=2021-08-09T11:08:14))
2021-08-10 07:00:34 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6200122151856637110, userId=8193783235635265349, text=Nam Lorem adipiscing euismod amet, fringilla Kafka amet, sit magna consectetur nisl, createdAt=2021-08-09T11:30:05))
2021-08-10 07:00:35 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4714880130507865676, userId=5300077544401845624, text=placerat. velit suscipit adipiscing fringilla nisl Kafka Nam consectetur tempus Lorem vitae, createdAt=2021-08-09T11:54:15))
2021-08-10 07:00:35 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:00:35 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3990492964421880662, userId=448111327343972007, text=sit sit sit nisl placerat. placerat. Kafka placerat. Nam suscipit sit nisl, createdAt=2021-08-09T11:55:05))
2021-08-10 07:00:36 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8829134718829179822, userId=5701402603579521290, text=nisl euismod adipiscing elit. velit Vivamus Kafka nec suscipit elit. tempus rutrum, createdAt=2021-08-09T12:00:35))
2021-08-10 07:00:36 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7882858984897173079, userId=3966745681323202106, text=sit euismod nec tempus nec Nam Kafka dolor Lorem dolor fringilla dolor, createdAt=2021-08-09T12:39:56))
2021-08-10 07:00:37 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5785256212496692592, userId=1903874493123568844, text=tempus tempus amet, ipsum suscipit suscipit Kafka Vivamus fringilla consectetur Vivamus ipsum, createdAt=2021-08-09T12:45:46))
2021-08-10 07:00:37 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3493962447615745694, userId=5946923651149195213, text=vitae fringilla velit euismod euismod Vivamus Kafka Nam placerat. suscipit ipsum adipiscing, createdAt=2021-08-09T13:04:17))
2021-08-10 07:00:38 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1685515820013077631, userId=137303247807883408, text=dolor velit fringilla ipsum suscipit sit Kafka adipiscing elit. nec elit. nec, createdAt=2021-08-09T13:45:57))
2021-08-10 07:00:38 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2861098468080800460, userId=3054602120274507066, text=sit magna Lorem Vivamus sit tempus Kafka consectetur dolor sit nisl nisl, createdAt=2021-08-03T14:39:24))
2021-08-10 07:00:39 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8306630935754834715, userId=480184346964560061, text=ipsum suscipit placerat. adipiscing amet, euismod Kafka sit placerat. Vivamus nec rutrum, createdAt=2021-08-03T14:45:30))
2021-08-10 07:00:39 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=524763077695128155, userId=6447273316677896896, text=amet, sit amet, vitae tempus consectetur Kafka Lorem consectetur elit. euismod nisl, createdAt=2021-08-03T15:03:21))
2021-08-10 07:00:40 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7403298014972795133, userId=5461942441411486310, text=nisl placerat. rutrum amet, vitae sit Kafka tempus nisl velit sit euismod, createdAt=2021-08-03T15:39:22))
2021-08-10 07:00:40 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1747758833105167632, userId=5125828595402921440, text=rutrum nisl fringilla Lorem ipsum vitae Kafka sit fringilla placerat. ipsum Lorem, createdAt=2021-08-03T16:16:42))
2021-08-10 07:00:41 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4107250238677814175, userId=8440033393744583800, text=nec suscipit Nam adipiscing Nam velit Kafka tempus dolor magna placerat. fringilla, createdAt=2021-08-03T16:31:13))
2021-08-10 07:00:41 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1756048478267065224, userId=994769028325168288, text=fringilla elit. magna tempus nisl consectetur Kafka Nam elit. adipiscing tempus Vivamus, createdAt=2021-08-03T16:49:03))
2021-08-10 07:00:42 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3638534987918170979, userId=1144235118845445524, text=rutrum consectetur Vivamus euismod consectetur Vivamus Kafka elit. nec elit. placerat. nec, createdAt=2021-08-03T16:52:33))
2021-08-10 07:00:42 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2986998509283728037, userId=4586984255082461424, text=amet, ipsum vitae velit amet, magna Kafka tempus placerat. ipsum elit. adipiscing, createdAt=2021-08-03T16:57:43))
2021-08-10 07:00:43 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8995836281248818536, userId=4378267823300673427, text=nec nec suscipit Lorem nec consectetur Kafka velit suscipit magna elit. elit., createdAt=2021-08-03T17:12:33))
2021-08-10 07:00:43 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1622776423999928268, userId=1478624475471398624, text=rutrum nec euismod nisl ipsum nec Kafka nec adipiscing ipsum velit magna, createdAt=2021-08-03T17:22:13))
2021-08-10 07:00:44 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5361721509072716446, userId=3123755609935074030, text=ipsum suscipit nisl dolor nisl suscipit Kafka suscipit ipsum amet, suscipit tempus, createdAt=2021-08-03T17:32:33))
2021-08-10 07:00:44 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6312727096888700191, userId=3914142189746127185, text=nec sit nisl euismod ipsum magna Kafka Nam placerat. euismod Vivamus magna, createdAt=2021-08-03T17:35:03))
2021-08-10 07:00:45 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5501177332774795497, userId=8948110467891351794, text=elit. nec Nam sit amet, sit Kafka placerat. Vivamus dolor suscipit elit., createdAt=2021-08-03T18:45:34))
2021-08-10 07:00:45 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3236937705690469445, userId=8656344244033656309, text=suscipit ipsum sit rutrum nec dolor Kafka consectetur ipsum adipiscing elit. placerat., createdAt=2021-08-03T18:47:14))
2021-08-10 07:00:46 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7894389004388129013, userId=8165827097994996688, text=nec adipiscing consectetur velit sit magna Kafka elit. Vivamus magna velit Lorem, createdAt=2021-08-03T18:57:54))
2021-08-10 07:00:46 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3373921276351083666, userId=141650381851823485, text=velit magna nisl nisl tempus suscipit Kafka Nam euismod consectetur Lorem rutrum, createdAt=2021-08-03T19:46:45))
2021-08-10 07:00:47 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4453235029962337962, userId=1657842576639287662, text=consectetur elit. consectetur magna Lorem Lorem Kafka euismod sit dolor magna ipsum, createdAt=2021-08-03T19:47:05))
2021-08-10 07:00:47 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:00:47 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=401958658139135346, userId=769212409194820901, text=amet, vitae Nam adipiscing vitae adipiscing Kafka Lorem vitae placerat. sit consectetur, createdAt=2021-08-03T20:04:35))
2021-08-10 07:00:48 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2051766104714840250, userId=5900795772291792599, text=suscipit vitae elit. sit sit fringilla Kafka suscipit nisl rutrum adipiscing dolor, createdAt=2021-08-03T20:14:26))
2021-08-10 07:00:48 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4470923503036662595, userId=844751854202159305, text=ipsum dolor Lorem suscipit consectetur consectetur Kafka rutrum velit rutrum euismod dolor, createdAt=2021-08-03T20:16:26))
2021-08-10 07:00:49 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2341975980837135240, userId=3193148920626424084, text=adipiscing rutrum elit. velit rutrum velit Kafka dolor elit. nisl placerat. Vivamus, createdAt=2021-08-04T05:02:55))
2021-08-10 07:00:49 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5877908833962222350, userId=9185521868121173011, text=magna velit elit. elit. Lorem elit. Kafka consectetur euismod nec Nam magna, createdAt=2021-08-04T05:24:36))
2021-08-10 07:00:50 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6269633944983084225, userId=1511625115084909582, text=amet, nisl elit. Lorem placerat. velit Kafka suscipit ipsum euismod sit dolor, createdAt=2021-08-04T06:41:19))
2021-08-10 07:00:50 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2974931265928030760, userId=2001755209688035436, text=consectetur fringilla placerat. consectetur ipsum ipsum Kafka suscipit euismod rutrum euismod elit., createdAt=2021-08-04T06:44:49))
2021-08-10 07:00:51 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2500031063375436967, userId=5260999457332284449, text=rutrum velit Lorem elit. velit magna Kafka consectetur fringilla ipsum Vivamus elit., createdAt=2021-08-04T06:53:49))
2021-08-10 07:00:51 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1619974313181820989, userId=6738573379491553420, text=rutrum elit. ipsum adipiscing nisl nisl Kafka elit. Lorem suscipit elit. velit, createdAt=2021-08-04T07:05:50))
2021-08-10 07:00:52 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7071238336434233378, userId=2881284964865571096, text=amet, suscipit magna Lorem amet, adipiscing Kafka elit. suscipit adipiscing dolor suscipit, createdAt=2021-08-04T07:13:40))
2021-08-10 07:00:52 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7440035577919448298, userId=5566625025140723612, text=Vivamus rutrum adipiscing velit fringilla Nam Kafka vitae amet, placerat. dolor adipiscing, createdAt=2021-08-04T07:41:20))
2021-08-10 07:00:53 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2800762897271023134, userId=8692973189083744724, text=nec velit elit. suscipit consectetur suscipit Kafka consectetur elit. elit. fringilla rutrum, createdAt=2021-08-04T08:04:11))
2021-08-10 07:00:53 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7364524668519004239, userId=4053937245219568998, text=rutrum placerat. consectetur ipsum ipsum nec Kafka ipsum consectetur vitae fringilla fringilla, createdAt=2021-08-04T08:14:41))
2021-08-10 07:00:54 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1147158657864877313, userId=5802691581178780692, text=consectetur Lorem suscipit adipiscing elit. tempus Kafka nisl Nam elit. amet, Lorem, createdAt=2021-08-04T08:32:11))
2021-08-10 07:00:54 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5923181252936888347, userId=2192192109154886509, text=consectetur adipiscing placerat. euismod euismod elit. Kafka magna sit nisl velit sit, createdAt=2021-08-04T09:03:28))
2021-08-10 07:00:55 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1484605824899523588, userId=5950998266771470818, text=velit dolor nec nec dolor nec Kafka vitae amet, sit dolor vitae, createdAt=2021-08-04T09:09:48))
2021-08-10 07:00:55 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8569984918717705204, userId=694299004191763662, text=vitae amet, velit ipsum adipiscing nec Kafka sit adipiscing Nam nisl ipsum, createdAt=2021-08-04T09:36:12))
2021-08-10 07:00:56 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=110429293761037517, userId=1167163575503220416, text=adipiscing placerat. consectetur rutrum adipiscing vitae Kafka sit sit Vivamus dolor Nam, createdAt=2021-08-04T11:34:28))
2021-08-10 07:00:56 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3652281472586636224, userId=4961304105970960866, text=euismod fringilla tempus velit euismod adipiscing Kafka nec Nam tempus velit velit, createdAt=2021-08-04T11:50:08))
2021-08-10 07:00:57 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=122756886994204403, userId=245401484468357948, text=elit. adipiscing vitae adipiscing placerat. tempus Kafka tempus Lorem sit nisl adipiscing, createdAt=2021-08-04T12:31:49))
2021-08-10 07:00:57 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1249843476354681110, userId=3985020207865543117, text=Lorem velit nisl elit. nisl velit Kafka amet, elit. placerat. elit. amet,, createdAt=2021-08-04T12:46:59))
2021-08-10 07:00:58 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1247903088690028201, userId=3660724351330575609, text=velit ipsum consectetur suscipit nisl magna Kafka amet, suscipit fringilla tempus Lorem, createdAt=2021-08-04T13:20:19))
2021-08-10 07:00:58 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2158318676391812399, userId=4210364973346533782, text=Vivamus tempus consectetur consectetur placerat. Nam Kafka velit euismod Nam velit dolor, createdAt=2021-08-09T09:55:43))
2021-08-10 07:00:59 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5846963014825929691, userId=1818260714722158171, text=Nam tempus placerat. nec elit. dolor Kafka Nam fringilla nisl ipsum tempus, createdAt=2021-08-09T10:16:14))
2021-08-10 07:00:59 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:00:59 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2564464493912787506, userId=7707346817034949479, text=Nam magna magna Vivamus rutrum euismod Kafka amet, amet, vitae dolor nec, createdAt=2021-08-09T10:18:44))
2021-08-10 07:01:00 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8419754269603953585, userId=7681441594125143660, text=vitae sit euismod magna euismod ipsum Kafka nisl magna adipiscing Lorem sit, createdAt=2021-08-09T10:55:34))
2021-08-10 07:01:00 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4237772214907510757, userId=4568583968463040726, text=fringilla Lorem Nam dolor Vivamus consectetur Kafka placerat. nisl dolor nec Lorem, createdAt=2021-08-09T11:01:14))
2021-08-10 07:01:01 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5460836465472369834, userId=7597878860495555908, text=sit tempus magna Lorem magna suscipit Kafka nec sit elit. sit placerat., createdAt=2021-08-09T11:00:44))
2021-08-10 07:01:01 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8431384883412691866, userId=7491244106435596504, text=fringilla placerat. fringilla amet, tempus vitae Kafka Vivamus magna suscipit tempus dolor, createdAt=2021-08-09T11:04:34))
2021-08-10 07:01:02 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3305795709541109792, userId=975952025385605456, text=Vivamus Nam fringilla velit adipiscing vitae Kafka rutrum Vivamus Lorem vitae amet,, createdAt=2021-08-09T11:28:05))
2021-08-10 07:01:02 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6545643335772699319, userId=5731479644538749423, text=placerat. rutrum suscipit rutrum ipsum Lorem Kafka vitae magna Vivamus dolor amet,, createdAt=2021-08-09T11:42:35))
2021-08-10 07:01:03 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7555664980633917045, userId=7680426234597989392, text=Nam amet, consectetur adipiscing adipiscing tempus Kafka nisl nisl Vivamus adipiscing Nam, createdAt=2021-08-09T11:52:45))
2021-08-10 07:01:03 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5193759022063243015, userId=7397789538763309738, text=elit. placerat. Vivamus Nam euismod tempus Kafka sit fringilla consectetur rutrum rutrum, createdAt=2021-08-09T11:59:45))
2021-08-10 07:01:04 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6663529360513806558, userId=1675110344052199986, text=consectetur fringilla suscipit fringilla nisl placerat. Kafka tempus nisl amet, fringilla dolor, createdAt=2021-08-09T12:07:46))
2021-08-10 07:01:04 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7465459777066403497, userId=8759636333316747638, text=dolor suscipit fringilla velit euismod Vivamus Kafka fringilla sit nec dolor tempus, createdAt=2021-08-09T12:49:56))
2021-08-10 07:01:05 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8311701456915823946, userId=4972160979340917121, text=Lorem nec adipiscing sit nisl ipsum Kafka rutrum suscipit euismod velit elit., createdAt=2021-08-09T13:06:07))
2021-08-10 07:01:05 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1436212281179870512, userId=6205666352176743276, text=vitae vitae suscipit velit elit. velit Kafka consectetur suscipit Nam nec Lorem, createdAt=2021-08-09T13:11:57))
2021-08-10 07:01:06 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2775704123743302434, userId=1541108356999408639, text=Vivamus vitae suscipit euismod Nam Lorem Kafka Nam elit. sit elit. tempus, createdAt=2021-08-09T13:19:57))
2021-08-10 07:01:06 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2291534237973200896, userId=8795405542853895055, text=nisl fringilla suscipit Vivamus sit Vivamus Kafka tempus tempus adipiscing elit. sit, createdAt=2021-08-09T13:48:07))
2021-08-10 07:01:07 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6925992254277945373, userId=6711066191388748262, text=consectetur Nam velit nec tempus tempus Nam Kafka euismod rutrum nec magna elit., createdAt=2021-08-03T15:53:11))
2021-08-10 07:01:07 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8631679897541693288, userId=4794038865470443287, text=elit. velit placerat. ipsum vitae consectetur tempus Kafka Nam rutrum tempus dolor magna, createdAt=2021-08-03T16:08:12))
2021-08-10 07:01:08 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8780823172506375056, userId=6820507775908880993, text=adipiscing nec ipsum magna elit. Nam adipiscing Kafka elit. elit. tempus Vivamus rutrum, createdAt=2021-08-03T16:11:32))
2021-08-10 07:01:08 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9007971250101454030, userId=4024720773107510422, text=suscipit sit consectetur nisl ipsum elit. ipsum Kafka velit sit elit. euismod sit, createdAt=2021-08-03T16:16:02))
2021-08-10 07:01:09 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9112302035382488378, userId=1582026968260472087, text=dolor nec nisl magna consectetur adipiscing euismod Kafka euismod euismod placerat. vitae vitae, createdAt=2021-08-03T15:17:32))
2021-08-10 07:01:09 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3854013704792173654, userId=6499767352730220936, text=fringilla vitae Nam euismod fringilla magna tempus Kafka sit nec magna adipiscing tempus, createdAt=2021-08-03T16:15:22))
2021-08-10 07:01:10 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7590453272213875910, userId=6656118526281286815, text=sit magna placerat. amet, amet, Lorem rutrum Kafka fringilla tempus nisl magna vitae, createdAt=2021-08-03T16:26:12))
2021-08-10 07:01:10 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1244749895617564047, userId=1037537574426964501, text=Vivamus velit velit vitae Vivamus dolor ipsum Kafka ipsum fringilla fringilla nisl dolor, createdAt=2021-08-03T16:32:03))
2021-08-10 07:01:11 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5361840611662368075, userId=5912070148245327942, text=Nam vitae magna vitae placerat. consectetur sit Kafka ipsum dolor placerat. magna consectetur, createdAt=2021-08-03T16:46:43))
2021-08-10 07:01:11 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:01:11 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6622323351003785723, userId=4679498379551879426, text=nisl consectetur magna Nam rutrum sit vitae Kafka elit. consectetur magna dolor nec, createdAt=2021-08-03T16:55:03))
2021-08-10 07:01:12 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5408667142875751016, userId=2376725950812533163, text=amet, amet, sit nisl adipiscing euismod Nam Kafka suscipit Nam Lorem dolor placerat., createdAt=2021-08-03T17:03:03))
2021-08-10 07:01:12 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5402332283246065033, userId=7965550867273737484, text=magna suscipit euismod amet, nisl vitae consectetur Kafka placerat. amet, Vivamus Vivamus adipiscing, createdAt=2021-08-03T17:10:23))
2021-08-10 07:01:13 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5137464428921686250, userId=1466097957406305199, text=adipiscing amet, amet, nec dolor tempus amet, Kafka rutrum placerat. euismod placerat. velit, createdAt=2021-08-03T17:36:03))
2021-08-10 07:01:13 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6555614353031507800, userId=4100211439027691754, text=magna sit fringilla euismod euismod vitae Lorem Kafka magna magna rutrum fringilla Vivamus, createdAt=2021-08-03T17:47:03))
2021-08-10 07:01:14 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1018236403373159991, userId=6948018833392356908, text=elit. nec sit tempus nisl consectetur tempus Kafka velit fringilla amet, euismod Nam, createdAt=2021-08-03T18:51:44))
2021-08-10 07:01:14 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6020888783834693213, userId=3155125589617072800, text=euismod tempus rutrum amet, Nam tempus rutrum Kafka tempus nec amet, elit. sit, createdAt=2021-08-03T18:58:54))
2021-08-10 07:01:15 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=819748273974692462, userId=9045253732325343983, text=consectetur Lorem nisl vitae placerat. nec vitae Kafka nisl Lorem sit suscipit suscipit, createdAt=2021-08-03T19:06:15))
2021-08-10 07:01:15 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2885733400398103480, userId=7879564310066365500, text=euismod Nam amet, nisl adipiscing Vivamus vitae Kafka consectetur Nam Nam fringilla velit, createdAt=2021-08-03T19:42:55))
2021-08-10 07:01:16 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4782713242305978964, userId=1168763771359260772, text=magna placerat. ipsum tempus velit nisl tempus Kafka sit Vivamus rutrum euismod fringilla, createdAt=2021-08-03T20:18:16))
2021-08-10 07:01:16 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1153947031651250820, userId=7530069241139540449, text=fringilla sit ipsum sit euismod tempus rutrum Kafka rutrum tempus vitae rutrum rutrum, createdAt=2021-08-04T04:55:05))
2021-08-10 07:01:17 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9074378130481156885, userId=1205070248499266893, text=velit magna consectetur Lorem tempus consectetur Vivamus Kafka Vivamus adipiscing nec tempus vitae, createdAt=2021-08-04T05:04:45))
2021-08-10 07:01:17 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5854496085873951592, userId=4015368207092529989, text=fringilla adipiscing velit vitae sit dolor elit. Kafka vitae sit Vivamus suscipit magna, createdAt=2021-08-04T05:25:36))
2021-08-10 07:01:18 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=743493402101270762, userId=4306322821101556000, text=nec amet, velit tempus dolor consectetur euismod Kafka velit consectetur placerat. suscipit suscipit, createdAt=2021-08-04T05:46:56))
2021-08-10 07:01:18 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6855652201289115339, userId=8874594908382046308, text=Nam suscipit ipsum sit euismod placerat. consectetur Kafka Nam Lorem suscipit elit. fringilla, createdAt=2021-08-04T05:58:46))
2021-08-10 07:01:19 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8913179706510892864, userId=1850420044025075220, text=Nam Nam fringilla nec nisl suscipit dolor Kafka placerat. Vivamus Lorem nec velit, createdAt=2021-08-04T06:01:56))
2021-08-10 07:01:19 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4031977170978799353, userId=6595300584684656861, text=velit Nam suscipit euismod rutrum vitae vitae Kafka magna magna suscipit ipsum Nam, createdAt=2021-08-04T06:36:29))
2021-08-10 07:01:20 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2512026870388352347, userId=5562780402598529296, text=Vivamus fringilla fringilla sit Lorem suscipit sit Kafka adipiscing euismod suscipit nec Nam, createdAt=2021-08-04T07:09:50))
2021-08-10 07:01:20 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1512398903164399392, userId=319661352061402502, text=consectetur velit elit. Nam rutrum magna dolor Kafka Lorem amet, Lorem placerat. nisl, createdAt=2021-08-04T08:18:41))
2021-08-10 07:01:21 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9145341185864429642, userId=3505080199453773242, text=sit velit tempus ipsum nec consectetur Nam Kafka nec amet, magna vitae consectetur, createdAt=2021-08-04T08:34:11))
2021-08-10 07:01:21 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5525122431695653937, userId=8824815598901940282, text=Nam nec dolor ipsum rutrum euismod rutrum Kafka consectetur tempus velit adipiscing rutrum, createdAt=2021-08-04T09:19:08))
2021-08-10 07:01:22 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1681906470730931368, userId=6855717846390150009, text=Nam fringilla tempus nisl fringilla nec placerat. Kafka elit. placerat. consectetur adipiscing rutrum, createdAt=2021-08-04T09:31:29))
2021-08-10 07:01:22 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8721776090682492833, userId=3899494889084631515, text=velit vitae velit nec Nam rutrum rutrum Kafka Vivamus fringilla rutrum velit Lorem, createdAt=2021-08-04T09:40:42))
2021-08-10 07:01:23 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8467597665827839213, userId=6202154039299002799, text=rutrum ipsum dolor fringilla Lorem velit fringilla Kafka consectetur amet, magna dolor tempus, createdAt=2021-08-04T10:20:03))
2021-08-10 07:01:23 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:01:23 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1643043723835833218, userId=2887910700121477540, text=amet, magna suscipit nisl vitae tempus elit. Kafka rutrum nisl fringilla rutrum vitae, createdAt=2021-08-04T11:14:44))
2021-08-10 07:01:24 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=799345573539817199, userId=540640160532644760, text=consectetur dolor Vivamus elit. vitae adipiscing Nam Kafka euismod adipiscing tempus euismod euismod, createdAt=2021-08-04T11:45:48))
2021-08-10 07:01:24 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=173713011830601439, userId=3930943193222994441, text=ipsum fringilla Vivamus placerat. nec rutrum vitae Kafka suscipit fringilla ipsum amet, amet,, createdAt=2021-08-04T12:19:08))
2021-08-10 07:01:25 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6768553737766317760, userId=6649786054799402290, text=amet, dolor tempus suscipit fringilla magna elit. Kafka Lorem nisl elit. dolor rutrum, createdAt=2021-08-04T13:17:59))
2021-08-10 07:01:25 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2604160535882317394, userId=4933864202863767740, text=magna dolor placerat. vitae suscipit Nam euismod Kafka consectetur dolor rutrum placerat. vitae, createdAt=2021-08-04T13:54:10))
2021-08-10 07:01:26 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1056317113821337197, userId=8645318098158821256, text=magna placerat. euismod Lorem placerat. dolor dolor Kafka amet, dolor Lorem elit. velit, createdAt=2021-08-04T14:06:20))
2021-08-10 07:01:26 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7311534471675286773, userId=2358574108664101431, text=magna elit. dolor placerat. suscipit elit. ipsum Kafka tempus dolor Vivamus Lorem vitae, createdAt=2021-08-04T14:13))
2021-08-10 07:01:27 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2083468308352744928, userId=6050506463799757836, text=vitae magna fringilla placerat. dolor elit. fringilla Kafka ipsum Nam Nam amet, amet,, createdAt=2021-08-04T14:12:20))
2021-08-10 07:01:27 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6342481148462578111, userId=2127845263874214616, text=dolor amet, ipsum suscipit adipiscing Vivamus rutrum Kafka fringilla vitae fringilla placerat. consectetur, createdAt=2021-08-09T09:48:03))
2021-08-10 07:01:28 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7909448000592340053, userId=3404975111173859418, text=Nam Vivamus placerat. sit euismod rutrum nisl Kafka sit velit Lorem Vivamus Nam, createdAt=2021-08-09T09:49:43))
2021-08-10 07:01:28 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6640794141218543412, userId=8570897301435786828, text=elit. sit Vivamus ipsum euismod amet, Lorem Kafka euismod Lorem elit. sit Lorem, createdAt=2021-08-09T10:10:54))
2021-08-10 07:01:29 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4057102059242742449, userId=1761308957802904854, text=magna suscipit rutrum consectetur dolor elit. ipsum Kafka amet, vitae Vivamus Vivamus Nam, createdAt=2021-08-09T10:27:14))
2021-08-10 07:01:29 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=220955418869385176, userId=4876310436031341322, text=dolor magna placerat. placerat. fringilla fringilla elit. Kafka ipsum nec Nam adipiscing Nam, createdAt=2021-08-09T10:50:14))
2021-08-10 07:01:30 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3807058770409489755, userId=4075905400420225210, text=amet, Nam vitae euismod euismod ipsum adipiscing Kafka fringilla nec ipsum consectetur dolor, createdAt=2021-08-09T10:59:34))
2021-08-10 07:01:30 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3466356552060738745, userId=4841830744851394967, text=dolor nec suscipit ipsum fringilla ipsum ipsum Kafka vitae tempus ipsum Nam Nam, createdAt=2021-08-09T11:23:15))
2021-08-10 07:01:31 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=725342775333465819, userId=8435067692459829925, text=vitae Vivamus rutrum Nam Lorem consectetur Nam Kafka elit. adipiscing consectetur amet, Vivamus, createdAt=2021-08-09T11:57:25))
2021-08-10 07:01:31 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=189893481484300032, userId=5484568617093350023, text=dolor Vivamus Vivamus dolor adipiscing adipiscing dolor Kafka Lorem nec nisl adipiscing euismod, createdAt=2021-08-09T12:18:26))
2021-08-10 07:01:32 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3648116154529722796, userId=196345742770184266, text=placerat. suscipit dolor ipsum nec Vivamus Nam Kafka placerat. rutrum tempus dolor tempus, createdAt=2021-08-09T12:30:26))
2021-08-10 07:01:32 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2500727835264509083, userId=5816229864381365857, text=nec nec adipiscing amet, nec suscipit sit Kafka rutrum Vivamus ipsum magna tempus, createdAt=2021-08-09T12:33:26))
2021-08-10 07:01:33 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1115753377298994898, userId=6111334576553343122, text=euismod sit ipsum ipsum velit vitae vitae Kafka sit euismod velit consectetur Vivamus, createdAt=2021-08-09T13:00:17))
2021-08-10 07:01:33 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4561205031692078663, userId=5334090899046203739, text=sit euismod elit. sit placerat. velit rutrum Kafka dolor nisl vitae suscipit amet,, createdAt=2021-08-09T13:10:37))
2021-08-10 07:01:34 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6492031696652684553, userId=3502547118348557305, text=placerat. dolor rutrum amet, Lorem Lorem Vivamus Kafka Nam velit adipiscing sit ipsum, createdAt=2021-08-09T13:15:47))
2021-08-10 07:01:34 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5490759933793370535, userId=1053047210754497959, text=placerat. ipsum Lorem adipiscing suscipit suscipit magna Kafka vitae adipiscing euismod euismod placerat., createdAt=2021-08-09T13:21:27))
2021-08-10 07:01:35 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2393306227332714151, userId=88464461041626458, text=Vivamus consectetur ipsum tempus placerat. consectetur elit. Kafka dolor fringilla magna Lorem tempus, createdAt=2021-08-09T13:26:47))
2021-08-10 07:01:35 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:01:35 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3570238240926142856, userId=3773791417803737301, text=sit adipiscing elit. adipiscing euismod Vivamus nec Kafka vitae placerat. vitae elit. fringilla, createdAt=2021-08-09T13:30:17))
2021-08-10 07:01:36 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4636702609298733309, userId=7152731840463140294, text=dolor fringilla adipiscing Nam amet, ipsum nec Kafka nec elit. dolor fringilla vitae, createdAt=2021-08-09T13:46:37))
2021-08-10 07:01:36 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8596089482020152970, userId=8519790799454378984, text=Lorem Lorem suscipit velit consectetur velit Nam Kafka fringilla tempus nec adipiscing euismod, createdAt=2021-08-03T14:33:44))
2021-08-10 07:01:37 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2824181582550604749, userId=4205988873509219479, text=tempus sit euismod amet, dolor Lorem consectetur Kafka nisl sit magna Lorem adipiscing, createdAt=2021-08-03T14:54:27))
2021-08-10 07:01:37 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8389515759299639627, userId=6033444059881617554, text=sit euismod vitae euismod tempus nisl adipiscing Kafka consectetur amet, euismod Nam consectetur, createdAt=2021-08-03T15:16:22))
2021-08-10 07:01:38 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6583565450447845214, userId=2509688879928887292, text=euismod adipiscing placerat. velit consectetur suscipit Vivamus Kafka amet, magna ipsum sit dolor, createdAt=2021-08-03T15:23:22))
2021-08-10 07:01:38 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7121516721206425219, userId=9018982729572135491, text=ipsum Vivamus Vivamus consectetur Vivamus Lorem vitae Kafka Vivamus nisl nisl elit. nec, createdAt=2021-08-03T15:30:32))
2021-08-10 07:01:39 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2542822999505140897, userId=875111851733544612, text=tempus adipiscing nisl rutrum suscipit adipiscing vitae Kafka ipsum tempus nec nec sit, createdAt=2021-08-03T15:40:02))
2021-08-10 07:01:39 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7146105934755461454, userId=2959210611276731151, text=amet, dolor amet, Lorem nisl tempus nec Kafka suscipit amet, ipsum rutrum Vivamus, createdAt=2021-08-03T15:48:02))
2021-08-10 07:01:40 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2972717149930143615, userId=1404485184887064930, text=amet, nec Nam Lorem fringilla vitae ipsum Kafka tempus sit consectetur Vivamus sit, createdAt=2021-08-03T16:14:22))
2021-08-10 07:01:40 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3859155509410160863, userId=7371656963241812243, text=dolor consectetur amet, magna magna consectetur rutrum Kafka suscipit magna vitae Nam Nam, createdAt=2021-08-03T16:28:02))
2021-08-10 07:01:41 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7004495636370186957, userId=3666181997160502924, text=tempus vitae nec vitae magna vitae Nam Kafka tempus velit rutrum dolor ipsum, createdAt=2021-08-03T16:27:12))
2021-08-10 07:01:41 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7117691062968936336, userId=4507247645631725602, text=adipiscing velit Lorem magna nisl amet, velit Kafka vitae ipsum elit. suscipit vitae, createdAt=2021-08-03T16:35:33))
2021-08-10 07:01:42 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8832233107290549052, userId=3596097941029235137, text=Vivamus amet, placerat. nec rutrum dolor elit. Kafka nisl rutrum elit. suscipit Nam, createdAt=2021-08-03T16:34:43))
2021-08-10 07:01:42 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5164802392226720284, userId=5135674171093039785, text=placerat. Lorem magna nisl rutrum consectetur euismod Kafka Vivamus magna vitae nec suscipit, createdAt=2021-08-03T16:53:23))
2021-08-10 07:01:43 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=889725630251925944, userId=1573656287703778457, text=rutrum placerat. Vivamus fringilla elit. nisl magna Kafka Nam adipiscing magna Nam amet,, createdAt=2021-08-03T17:21:03))
2021-08-10 07:01:43 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6349578385735816935, userId=5098375704816382489, text=Lorem Nam consectetur euismod rutrum ipsum elit. Kafka amet, sit Nam Lorem dolor, createdAt=2021-08-03T17:24:33))
2021-08-10 07:01:44 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3916276037682797220, userId=8252041263775926734, text=euismod placerat. magna nec adipiscing placerat. elit. Kafka nec dolor Vivamus suscipit nisl, createdAt=2021-08-03T17:59:14))
2021-08-10 07:01:44 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4682445284868477503, userId=6624020062410058641, text=consectetur Lorem vitae fringilla velit fringilla rutrum Kafka nisl adipiscing euismod Nam amet,, createdAt=2021-08-03T18:11:24))
2021-08-10 07:01:45 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5143841857404119253, userId=2217946897424318145, text=nec dolor vitae suscipit vitae fringilla Vivamus Kafka nisl suscipit nec vitae euismod, createdAt=2021-08-03T18:52:54))
2021-08-10 07:01:45 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4698077821131596904, userId=2723863776659278541, text=nec ipsum magna ipsum Vivamus sit amet, Kafka ipsum consectetur nisl adipiscing sit, createdAt=2021-08-03T20:10:46))
2021-08-10 07:01:46 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2001967021325923066, userId=4216490763304204379, text=dolor ipsum dolor nec adipiscing ipsum sit Kafka placerat. sit suscipit placerat. placerat., createdAt=2021-08-04T05:15:05))
2021-08-10 07:01:46 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4882601092196986117, userId=3121531667973334757, text=adipiscing consectetur Lorem elit. Vivamus consectetur euismod Kafka ipsum rutrum consectetur euismod rutrum, createdAt=2021-08-04T06:02:56))
2021-08-10 07:01:47 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2557770807423197157, userId=404236145008731520, text=adipiscing ipsum nec vitae magna Lorem Vivamus Kafka Nam nec sit velit Nam, createdAt=2021-08-04T06:29:59))
2021-08-10 07:01:47 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:01:47 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5652006540007743379, userId=1515674963268024580, text=sit Nam vitae magna euismod consectetur Lorem Kafka velit velit Vivamus suscipit Vivamus, createdAt=2021-08-04T06:38:59))
2021-08-10 07:01:48 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5277107245548429722, userId=7774600558208531634, text=suscipit consectetur magna magna euismod amet, consectetur Kafka placerat. Nam nisl euismod placerat., createdAt=2021-08-04T06:47:39))
2021-08-10 07:01:48 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1382708307348229949, userId=3294765967706282295, text=Lorem Vivamus velit magna vitae amet, amet, Kafka rutrum Nam sit fringilla sit, createdAt=2021-08-04T06:47:19))
2021-08-10 07:01:49 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8772138662169563193, userId=8632285521212904121, text=sit consectetur suscipit Nam velit tempus Vivamus Kafka suscipit dolor velit amet, adipiscing, createdAt=2021-08-04T07:14:40))
2021-08-10 07:01:49 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3097113584414231143, userId=6362490519155730531, text=fringilla consectetur consectetur placerat. ipsum Lorem sit Kafka Vivamus amet, consectetur nisl dolor, createdAt=2021-08-04T08:29:31))
2021-08-10 07:01:50 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2493530528978079846, userId=6524063844975148006, text=tempus euismod nisl nec Vivamus fringilla amet, Kafka sit velit elit. consectetur rutrum, createdAt=2021-08-04T08:51:27))
2021-08-10 07:01:50 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=947792681693311770, userId=7218511427076657351, text=vitae Nam consectetur elit. Nam elit. tempus Kafka Nam ipsum elit. placerat. placerat., createdAt=2021-08-04T09:36:32))
2021-08-10 07:01:51 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1888229245363776821, userId=8978431148498279417, text=fringilla elit. rutrum tempus Vivamus tempus suscipit Kafka amet, suscipit placerat. elit. euismod, createdAt=2021-08-04T10:00:13))
2021-08-10 07:01:51 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=130294687360891454, userId=1887800662415877691, text=adipiscing rutrum adipiscing dolor nisl magna Nam Kafka sit nisl elit. adipiscing nec, createdAt=2021-08-04T10:31:03))
2021-08-10 07:01:52 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4324083569484568691, userId=7255199268093909596, text=fringilla euismod euismod tempus amet, Vivamus Lorem Kafka tempus sit euismod ipsum dolor, createdAt=2021-08-04T10:58:24))
2021-08-10 07:01:52 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3803947532717647123, userId=3461584203091923648, text=amet, fringilla velit nisl Nam Vivamus consectetur Kafka rutrum vitae sit dolor sit, createdAt=2021-08-04T11:41:08))
2021-08-10 07:01:53 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3080750964840614065, userId=756330517978381964, text=dolor dolor sit sit adipiscing ipsum tempus Kafka fringilla fringilla dolor nisl consectetur, createdAt=2021-08-04T11:46:28))
2021-08-10 07:01:53 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7609040526279028830, userId=2550251152031359619, text=vitae nec fringilla Lorem placerat. Lorem euismod Kafka vitae sit suscipit dolor velit, createdAt=2021-08-04T11:56:28))
2021-08-10 07:01:54 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8879137437156513048, userId=1309586536993814895, text=velit tempus Vivamus placerat. vitae amet, dolor Kafka ipsum consectetur fringilla tempus Nam, createdAt=2021-08-04T12:08:18))
2021-08-10 07:01:54 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5177886413996705220, userId=8045814192049470227, text=vitae fringilla tempus vitae sit Nam nisl Kafka amet, sit placerat. euismod euismod, createdAt=2021-08-04T12:34:49))
2021-08-10 07:01:55 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7810838682598122262, userId=7565566450480074849, text=Nam vitae amet, dolor elit. fringilla vitae Kafka euismod rutrum velit nec magna, createdAt=2021-08-04T13:10:49))
2021-08-10 07:01:55 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4786421946428527254, userId=5314854629192360409, text=nisl ipsum magna tempus rutrum ipsum Vivamus Kafka elit. elit. placerat. nisl vitae, createdAt=2021-08-04T14:05:50))
2021-08-10 07:01:56 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5415090113215226755, userId=4176488345793075770, text=Vivamus suscipit suscipit Vivamus fringilla rutrum amet, Kafka dolor suscipit suscipit rutrum dolor, createdAt=2021-08-04T14:17:20))
2021-08-10 07:01:56 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8026003053675996588, userId=1091314757566666669, text=consectetur rutrum vitae amet, amet, elit. Vivamus Kafka amet, Lorem dolor ipsum magna, createdAt=2021-08-09T10:33:34))
2021-08-10 07:01:57 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6277259807341559528, userId=4063632010088443476, text=magna Nam placerat. consectetur velit nisl Nam Kafka consectetur suscipit tempus nisl rutrum, createdAt=2021-08-09T10:58:44))
2021-08-10 07:01:57 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5184836274409854085, userId=8472159854320632646, text=placerat. amet, dolor magna consectetur fringilla magna Kafka consectetur euismod tempus rutrum nisl, createdAt=2021-08-09T11:18:35))
2021-08-10 07:01:58 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7707466221789551669, userId=5409389344483838650, text=magna dolor dolor magna suscipit ipsum elit. Kafka tempus suscipit suscipit magna velit, createdAt=2021-08-09T12:17:36))
2021-08-10 07:01:58 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4966600705576639484, userId=1902759714230157446, text=adipiscing Vivamus euismod consectetur adipiscing tempus sit Kafka nisl nec Vivamus placerat. fringilla, createdAt=2021-08-09T13:17:37))
2021-08-10 07:01:59 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6413655698895639610, userId=5781388819434530114, text=tempus Lorem placerat. fringilla tempus placerat. nisl Kafka Vivamus velit sit vitae suscipit consectetur, createdAt=2021-08-03T16:14:42))
2021-08-10 07:01:59 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:01:59 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8944709316657031860, userId=5662026180103545712, text=nisl Vivamus consectetur ipsum tempus tempus vitae Kafka Lorem adipiscing nisl dolor nec suscipit, createdAt=2021-08-03T16:01:12))
2021-08-10 07:02:00 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5182472900269806009, userId=4504395720425102784, text=elit. amet, Nam consectetur adipiscing sit rutrum Kafka placerat. amet, placerat. Lorem adipiscing nisl, createdAt=2021-08-03T16:09:52))
2021-08-10 07:02:00 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1868788982412792635, userId=7534783668988609936, text=Lorem dolor amet, nisl Lorem amet, rutrum Kafka ipsum Lorem sit tempus euismod dolor, createdAt=2021-08-03T16:19:52))
2021-08-10 07:02:01 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1221255759876709631, userId=378512557355438948, text=rutrum tempus placerat. euismod consectetur placerat. dolor Kafka suscipit Nam ipsum Lorem velit euismod, createdAt=2021-08-03T16:44:23))
2021-08-10 07:02:01 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3360725730107527233, userId=5123199445905818126, text=fringilla Vivamus nec vitae nisl magna Nam Kafka Nam dolor consectetur Lorem Vivamus sit, createdAt=2021-08-03T17:07:23))
2021-08-10 07:02:02 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3452698048340732138, userId=8353189040979636633, text=rutrum dolor vitae consectetur rutrum nisl tempus Kafka nisl sit tempus nec euismod dolor, createdAt=2021-08-03T17:17:03))
2021-08-10 07:02:02 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7580944482349156244, userId=3436302754593102491, text=velit magna rutrum dolor placerat. dolor rutrum Kafka elit. tempus elit. elit. elit. rutrum, createdAt=2021-08-03T17:26:33))
2021-08-10 07:02:03 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6614433800283398345, userId=3891734970707864575, text=rutrum Vivamus sit sit elit. Nam dolor Kafka vitae tempus rutrum sit magna elit., createdAt=2021-08-03T18:28:14))
2021-08-10 07:02:03 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8853546060734600932, userId=4202047604220344424, text=consectetur fringilla Lorem consectetur Vivamus placerat. fringilla Kafka ipsum dolor adipiscing adipiscing placerat. tempus, createdAt=2021-08-03T18:54:34))
2021-08-10 07:02:04 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2474638218460610640, userId=5541740687605815788, text=magna placerat. dolor tempus consectetur vitae elit. Kafka nec dolor consectetur nisl Lorem sit, createdAt=2021-08-03T19:12:05))
2021-08-10 07:02:04 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2695798178764895422, userId=964553417764778371, text=fringilla nisl rutrum consectetur adipiscing placerat. placerat. Kafka Vivamus euismod fringilla vitae nec nec, createdAt=2021-08-03T19:24:35))
2021-08-10 07:02:05 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=957142205381637767, userId=3598119147721286081, text=velit nec tempus magna dolor nec placerat. Kafka consectetur Nam placerat. rutrum fringilla consectetur, createdAt=2021-08-03T19:42:15))
2021-08-10 07:02:05 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1178825655441359965, userId=3236614547801266822, text=nisl ipsum nec suscipit tempus vitae nec Kafka sit suscipit consectetur suscipit vitae Vivamus, createdAt=2021-08-03T19:51:35))
2021-08-10 07:02:06 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3039833226744745058, userId=8096075487668566185, text=nisl euismod velit adipiscing vitae placerat. nec Kafka rutrum magna fringilla euismod tempus amet,, createdAt=2021-08-03T20:03:05))
2021-08-10 07:02:06 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=949520785442948312, userId=3134662274135380768, text=magna amet, tempus vitae adipiscing amet, elit. Kafka tempus vitae Nam ipsum fringilla ipsum, createdAt=2021-08-04T04:58:25))
2021-08-10 07:02:07 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4071846815509134605, userId=1085022936253818834, text=fringilla Vivamus Nam fringilla dolor adipiscing rutrum Kafka Vivamus consectetur vitae vitae dolor Lorem, createdAt=2021-08-04T05:10:35))
2021-08-10 07:02:07 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5470510671136455220, userId=1712022883808844347, text=Vivamus magna ipsum sit Nam nisl consectetur Kafka nec fringilla magna fringilla Vivamus consectetur, createdAt=2021-08-04T05:33:46))
2021-08-10 07:02:08 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1389972140710744096, userId=2504904900931225571, text=Nam amet, fringilla magna magna nisl vitae Kafka suscipit nec nec euismod Nam placerat., createdAt=2021-08-04T05:49:56))
2021-08-10 07:02:08 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=976746596244602457, userId=5317264417117454531, text=adipiscing adipiscing sit adipiscing velit Vivamus fringilla Kafka nisl euismod elit. nec Nam nec, createdAt=2021-08-04T07:36:10))
2021-08-10 07:02:09 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8070575452984580515, userId=124959642724678044, text=velit velit dolor consectetur Lorem adipiscing dolor Kafka magna consectetur Lorem consectetur velit adipiscing, createdAt=2021-08-04T08:24:21))
2021-08-10 07:02:09 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9043595226052161957, userId=1762811534884436668, text=Vivamus magna amet, rutrum rutrum Vivamus Lorem Kafka euismod Nam dolor ipsum magna elit., createdAt=2021-08-04T08:27:51))
2021-08-10 07:02:10 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4043395506849545200, userId=2906345010514741568, text=suscipit Vivamus placerat. Lorem rutrum ipsum euismod Kafka rutrum dolor Vivamus suscipit fringilla Vivamus, createdAt=2021-08-04T08:30:11))
2021-08-10 07:02:10 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3942253399419078414, userId=6646867303505495334, text=elit. dolor ipsum sit nisl consectetur euismod Kafka rutrum rutrum fringilla suscipit adipiscing suscipit, createdAt=2021-08-04T09:12:58))
2021-08-10 07:02:11 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1182261625542672215, userId=8720341259647518967, text=Vivamus amet, magna velit amet, consectetur Nam Kafka euismod suscipit ipsum ipsum magna Nam, createdAt=2021-08-04T09:13:58))
2021-08-10 07:02:11 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:02:11 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7040991148565045223, userId=2772618038879948371, text=suscipit velit suscipit euismod rutrum sit nisl Kafka Lorem placerat. amet, adipiscing elit. nisl, createdAt=2021-08-04T09:20:08))
2021-08-10 07:02:12 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3983384988109615939, userId=4669132851310915736, text=nec adipiscing ipsum amet, consectetur suscipit dolor Kafka consectetur fringilla vitae velit Lorem elit., createdAt=2021-08-04T09:38:12))
2021-08-10 07:02:12 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2171234817825708632, userId=118159315818592262, text=fringilla fringilla Lorem fringilla tempus Nam adipiscing Kafka Vivamus Lorem velit euismod nec sit, createdAt=2021-08-04T09:41:02))
2021-08-10 07:02:13 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2403301894053790867, userId=3568405333303740212, text=Lorem Lorem ipsum sit suscipit vitae euismod Kafka vitae dolor sit ipsum elit. rutrum, createdAt=2021-08-04T10:07:43))
2021-08-10 07:02:13 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4030860970047328743, userId=6897810483041207373, text=elit. elit. velit dolor Vivamus vitae vitae Kafka amet, nisl euismod suscipit consectetur placerat., createdAt=2021-08-04T10:16:23))
2021-08-10 07:02:14 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5221460829447723340, userId=5889235712037292394, text=Nam elit. vitae Nam nec elit. consectetur Kafka elit. euismod vitae suscipit Nam elit., createdAt=2021-08-04T10:34:23))
2021-08-10 07:02:14 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2443095618548993730, userId=7960904946728575563, text=Lorem magna ipsum velit Nam ipsum vitae Kafka euismod elit. placerat. Vivamus nisl amet,, createdAt=2021-08-04T11:06:04))
2021-08-10 07:02:15 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5621216726403760984, userId=5978039546656906818, text=suscipit rutrum amet, suscipit magna fringilla Nam Kafka ipsum placerat. placerat. magna sit elit., createdAt=2021-08-04T11:15:44))
2021-08-10 07:02:15 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5961605488103131863, userId=8300844167697990166, text=tempus velit tempus consectetur rutrum fringilla euismod Kafka nec rutrum sit placerat. Lorem Lorem, createdAt=2021-08-04T11:17:54))
2021-08-10 07:02:16 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5248166284253059836, userId=7532384998204319473, text=magna amet, consectetur amet, elit. euismod Nam Kafka elit. rutrum elit. Lorem magna amet,, createdAt=2021-08-04T11:18:44))
2021-08-10 07:02:16 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4340646257308822454, userId=3624368037374296556, text=nisl dolor consectetur vitae tempus tempus magna Kafka dolor ipsum sit fringilla tempus rutrum, createdAt=2021-08-04T11:20:44))
2021-08-10 07:02:17 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2400245280763376765, userId=2004017488577427594, text=adipiscing Lorem Nam suscipit Vivamus suscipit elit. Kafka vitae euismod elit. elit. velit placerat., createdAt=2021-08-04T11:48:28))
2021-08-10 07:02:17 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8238339303347519512, userId=5508442775461752545, text=ipsum velit fringilla consectetur tempus vitae fringilla Kafka nec rutrum rutrum suscipit fringilla consectetur, createdAt=2021-08-04T12:00:18))
2021-08-10 07:02:18 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3742408086901207662, userId=9133663228321152481, text=nisl tempus Lorem rutrum tempus elit. vitae Kafka tempus placerat. dolor velit rutrum Nam, createdAt=2021-08-04T12:07:18))
2021-08-10 07:02:18 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6094599809214286347, userId=5684845723335745334, text=amet, rutrum Nam nisl elit. euismod adipiscing Kafka amet, sit nec Lorem Lorem euismod, createdAt=2021-08-04T12:23:59))
2021-08-10 07:02:19 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6455337767789585992, userId=9035560920366730704, text=fringilla Lorem dolor adipiscing adipiscing rutrum Lorem Kafka fringilla sit Vivamus sit amet, amet,, createdAt=2021-08-04T12:40:19))
2021-08-10 07:02:19 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8495428403423912452, userId=350491016502826868, text=consectetur magna velit consectetur magna vitae velit Kafka vitae velit vitae sit rutrum suscipit, createdAt=2021-08-04T13:06:29))
2021-08-10 07:02:20 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2625578930650762545, userId=6040976464294080476, text=velit Vivamus sit tempus Vivamus placerat. amet, Kafka nec velit elit. suscipit magna Nam, createdAt=2021-08-04T13:27:30))
2021-08-10 07:02:20 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3765262442080117411, userId=9073983769635203734, text=Nam suscipit magna elit. vitae placerat. suscipit Kafka placerat. ipsum vitae amet, nec suscipit, createdAt=2021-08-04T13:33:30))
2021-08-10 07:02:21 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1689815520894555364, userId=5483923077018860882, text=amet, ipsum euismod adipiscing euismod vitae vitae Kafka Vivamus velit ipsum velit vitae Lorem, createdAt=2021-08-04T13:51))
2021-08-10 07:02:21 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8162099179599319534, userId=6846263854292603690, text=velit Nam rutrum amet, euismod adipiscing consectetur Kafka consectetur tempus adipiscing suscipit sit consectetur, createdAt=2021-08-09T09:53:13))
2021-08-10 07:02:22 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1691515720953126067, userId=748876416417211912, text=fringilla euismod velit adipiscing vitae nisl nisl Kafka sit tempus velit ipsum Vivamus elit., createdAt=2021-08-09T10:05:53))
2021-08-10 07:02:22 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=745924670145983703, userId=8479684928866891133, text=adipiscing euismod sit sit Nam Vivamus fringilla Kafka rutrum Vivamus tempus nisl elit. Vivamus, createdAt=2021-08-09T10:08:24))
2021-08-10 07:02:23 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6776598975004037125, userId=111053023180549304, text=amet, nisl elit. tempus euismod Nam sit Kafka nec elit. suscipit euismod Lorem amet,, createdAt=2021-08-09T10:07:53))
2021-08-10 07:02:23 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:02:23 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2139413281707088780, userId=6260935655931167607, text=Lorem sit ipsum velit adipiscing ipsum euismod Kafka Vivamus Vivamus tempus Vivamus fringilla nec, createdAt=2021-08-09T10:13:54))
2021-08-10 07:02:24 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5741876635566402983, userId=5992706323314684404, text=velit velit Lorem nec dolor ipsum suscipit Kafka Nam adipiscing consectetur ipsum tempus suscipit, createdAt=2021-08-09T10:47:14))
2021-08-10 07:02:24 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5209660743355036564, userId=3950413856142178237, text=fringilla Vivamus nec Vivamus vitae suscipit rutrum Kafka vitae velit dolor consectetur adipiscing Nam, createdAt=2021-08-09T10:57:14))
2021-08-10 07:02:25 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8225548229698903237, userId=6059833850154853279, text=placerat. Lorem tempus tempus velit suscipit sit Kafka Lorem ipsum velit magna tempus Vivamus, createdAt=2021-08-09T11:20:25))
2021-08-10 07:02:25 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6296369021835800855, userId=5810371354042970361, text=magna Lorem fringilla rutrum nec Lorem Vivamus Kafka suscipit sit consectetur adipiscing nec rutrum, createdAt=2021-08-09T11:29:35))
2021-08-10 07:02:26 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6887612968554477183, userId=8875172512050343828, text=Vivamus tempus ipsum sit nisl sit ipsum Kafka nisl amet, Nam Nam euismod rutrum, createdAt=2021-08-09T11:29:15))
2021-08-10 07:02:26 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6737272956101331830, userId=221475431444426578, text=suscipit suscipit velit amet, euismod fringilla elit. Kafka dolor nisl elit. nisl nec sit, createdAt=2021-08-09T11:35:05))
2021-08-10 07:02:27 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5556495836886166686, userId=7890897179172733689, text=consectetur dolor ipsum consectetur amet, Nam velit Kafka sit suscipit consectetur ipsum dolor consectetur, createdAt=2021-08-09T11:41:45))
2021-08-10 07:02:27 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=239348678884325754, userId=4505677597389976865, text=nec elit. elit. ipsum suscipit elit. ipsum Kafka ipsum placerat. rutrum magna rutrum sit, createdAt=2021-08-09T12:49:26))
2021-08-10 07:02:28 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=765601050088665618, userId=3214229696730183049, text=vitae Lorem Lorem vitae magna nisl consectetur Kafka vitae nec velit velit nec sit, createdAt=2021-08-09T12:49:06))
2021-08-10 07:02:28 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3845683805443352213, userId=5955336217594323806, text=euismod consectetur Vivamus magna elit. adipiscing Nam Kafka elit. Vivamus ipsum dolor suscipit ipsum, createdAt=2021-08-09T12:58:07))
2021-08-10 07:02:29 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3838460560640540613, userId=7778972995768099500, text=Nam placerat. Lorem magna ipsum adipiscing tempus Kafka Lorem sit velit rutrum magna tempus, createdAt=2021-08-09T13:04:07))
2021-08-10 07:02:29 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7648707545436420261, userId=6022965576687691452, text=Nam velit suscipit velit vitae elit. consectetur Kafka ipsum rutrum Lorem rutrum sit fringilla, createdAt=2021-08-09T13:13:27))
2021-08-10 07:02:30 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2995748183556525249, userId=6964641561269339926, text=Nam nisl magna Lorem dolor velit velit Kafka rutrum Vivamus dolor elit. vitae dolor, createdAt=2021-08-09T13:13:07))
2021-08-10 07:02:30 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5148176693921033004, userId=1499945420043629364, text=vitae dolor consectetur rutrum ipsum nisl rutrum Kafka amet, adipiscing consectetur rutrum vitae amet,, createdAt=2021-08-09T13:26:17))
2021-08-10 07:02:31 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6717745164874505248, userId=1381109707878334361, text=vitae tempus placerat. Lorem rutrum adipiscing Vivamus Kafka magna nisl magna elit. Nam fringilla, createdAt=2021-08-09T13:43:17))
2021-08-10 07:02:31 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2693532624091702222, userId=3622085344703058244, text=placerat. adipiscing fringilla euismod velit placerat. Lorem Kafka magna ipsum amet, euismod magna ipsum, createdAt=2021-08-09T13:48:47))
2021-08-10 07:02:32 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4469125295004059134, userId=1942652046184650540, text=Lorem adipiscing suscipit dolor magna tempus euismod Kafka nec Nam amet, euismod sit Vivamus, createdAt=2021-08-09T13:52:07))
2021-08-10 07:02:33 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2686942557677431594, userId=3400100990714945522, text=velit Lorem elit. nisl magna dolor euismod Kafka Lorem fringilla sit fringilla tempus ipsum, createdAt=2021-08-09T13:52:27))
2021-08-10 07:02:33 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4678016543222884372, userId=6452356152979628976, text=tempus dolor suscipit fringilla magna amet, Nam Kafka sit Vivamus Nam vitae nisl fringilla, createdAt=2021-08-09T13:55:07))
2021-08-10 07:02:34 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=598244069387045338, userId=3472228000743918880, text=vitae Nam ipsum tempus suscipit consectetur tempus Kafka euismod dolor suscipit vitae vitae nisl, createdAt=2021-08-03T14:58:31))
2021-08-10 07:02:34 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6095190113308095147, userId=8949657700513153218, text=nisl dolor tempus rutrum tempus sit Lorem Kafka vitae Vivamus Nam magna consectetur velit, createdAt=2021-08-03T15:19:02))
2021-08-10 07:02:35 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5382298856297679035, userId=7042965642981201247, text=elit. elit. amet, sit suscipit Lorem elit. Kafka consectetur velit vitae adipiscing euismod fringilla, createdAt=2021-08-03T16:08:22))
2021-08-10 07:02:35 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2800503775913740787, userId=7964005236506481197, text=vitae dolor adipiscing nisl dolor suscipit Nam Kafka nisl sit adipiscing dolor ipsum Vivamus, createdAt=2021-08-03T16:16:52))
2021-08-10 07:02:35 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:02:36 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3353857097843301709, userId=8828076504713180357, text=euismod consectetur consectetur magna dolor dolor Lorem Kafka nisl Vivamus euismod velit Nam consectetur, createdAt=2021-08-03T16:25:02))
2021-08-10 07:02:36 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1604379138996194101, userId=8283227933307948397, text=ipsum elit. elit. rutrum consectetur rutrum sit Kafka rutrum fringilla elit. dolor consectetur dolor, createdAt=2021-08-03T16:49:23))
2021-08-10 07:02:37 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8857178419142318867, userId=2250058689128125435, text=vitae amet, magna placerat. euismod velit velit Kafka rutrum Nam Lorem Vivamus magna sit, createdAt=2021-08-03T17:24:43))
2021-08-10 07:02:37 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=960710973721816242, userId=5293809742382825506, text=rutrum Vivamus adipiscing dolor Vivamus consectetur Lorem Kafka tempus nisl euismod tempus nisl velit, createdAt=2021-08-03T17:27:53))
2021-08-10 07:02:38 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1716690323923222743, userId=9150723564506355034, text=vitae Lorem fringilla sit placerat. magna Vivamus Kafka Vivamus fringilla velit tempus elit. velit, createdAt=2021-08-03T17:43:03))
2021-08-10 07:02:38 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9116297412526514268, userId=7759953121283329975, text=Vivamus Nam ipsum rutrum fringilla velit velit Kafka amet, fringilla amet, vitae fringilla Vivamus, createdAt=2021-08-03T17:45:13))
2021-08-10 07:02:39 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2934901461988205690, userId=2821050617971978586, text=magna dolor amet, nec dolor Nam nec Kafka Lorem elit. sit Nam nisl Nam, createdAt=2021-08-03T17:46:23))
2021-08-10 07:02:39 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8530658347070497300, userId=906843711803980591, text=consectetur vitae vitae rutrum Nam nec Lorem Kafka sit fringilla euismod nisl Lorem tempus, createdAt=2021-08-03T18:00:44))
2021-08-10 07:02:40 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3665318063782367939, userId=5996877087629571318, text=fringilla fringilla adipiscing nec tempus consectetur elit. Kafka Lorem Lorem nisl magna nisl dolor, createdAt=2021-08-03T18:08:24))
2021-08-10 07:02:40 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3714155436170773606, userId=8370694901029349365, text=Lorem tempus Vivamus adipiscing Nam suscipit ipsum Kafka tempus elit. Nam amet, Vivamus sit, createdAt=2021-08-03T18:26:24))
2021-08-10 07:02:41 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6722111685195432112, userId=7036435468344891446, text=Nam fringilla magna Nam consectetur Lorem sit Kafka velit consectetur fringilla Vivamus suscipit dolor, createdAt=2021-08-03T19:07:35))
2021-08-10 07:02:41 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6994964876839647530, userId=2669995839380286408, text=Lorem consectetur ipsum dolor ipsum placerat. vitae Kafka vitae suscipit ipsum elit. euismod ipsum, createdAt=2021-08-03T19:50:05))
2021-08-10 07:02:42 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4921191109816593565, userId=1713515994507983087, text=Nam ipsum elit. ipsum magna ipsum velit Kafka dolor fringilla elit. dolor magna adipiscing, createdAt=2021-08-03T20:05:05))
2021-08-10 07:02:42 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1052083390864809345, userId=8267716162377591096, text=velit dolor euismod Nam sit ipsum Lorem Kafka velit placerat. nisl amet, amet, consectetur, createdAt=2021-08-04T05:11:55))
2021-08-10 07:02:43 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6889448185710998090, userId=122262310880835431, text=rutrum velit magna vitae dolor dolor ipsum Kafka Nam euismod nisl elit. magna euismod, createdAt=2021-08-04T05:12:25))
2021-08-10 07:02:43 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4637740062608529111, userId=8607369042816518673, text=Nam consectetur adipiscing velit consectetur amet, nisl Kafka tempus nisl Lorem Lorem tempus sit, createdAt=2021-08-04T05:35:36))
2021-08-10 07:02:44 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8115401025938171196, userId=5310090666111955999, text=suscipit magna sit placerat. euismod adipiscing magna Kafka suscipit magna velit tempus velit vitae, createdAt=2021-08-04T05:44:56))
2021-08-10 07:02:44 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=743397990907676338, userId=4601866865879378025, text=adipiscing Nam euismod Lorem placerat. suscipit Vivamus Kafka elit. velit dolor adipiscing vitae Lorem, createdAt=2021-08-04T06:50:09))
2021-08-10 07:02:45 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9208632635768418876, userId=8659379006473038502, text=rutrum sit vitae adipiscing fringilla amet, ipsum Kafka magna euismod Vivamus vitae Lorem suscipit, createdAt=2021-08-04T06:52:39))
2021-08-10 07:02:45 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5251577347515837666, userId=4802118601280921691, text=velit magna vitae Lorem Vivamus elit. Vivamus Kafka sit sit amet, consectetur consectetur Vivamus, createdAt=2021-08-04T06:56:39))
2021-08-10 07:02:46 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2961690187079164753, userId=4073604229756852091, text=ipsum dolor ipsum nisl Lorem vitae consectetur Kafka placerat. magna adipiscing euismod rutrum consectetur, createdAt=2021-08-04T06:59:09))
2021-08-10 07:02:46 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6977092410073102293, userId=4563015231809234979, text=elit. ipsum tempus amet, ipsum euismod rutrum Kafka euismod vitae rutrum elit. sit ipsum, createdAt=2021-08-04T07:17:20))
2021-08-10 07:02:47 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1615224678170912066, userId=7438602190898832869, text=consectetur vitae velit consectetur adipiscing suscipit suscipit Kafka adipiscing fringilla placerat. Nam Vivamus ipsum, createdAt=2021-08-04T07:26:40))
2021-08-10 07:02:47 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7934990752050709125, userId=348182203402437504, text=dolor Nam nec Lorem magna magna suscipit Kafka elit. adipiscing rutrum magna elit. elit., createdAt=2021-08-04T07:41:10))
2021-08-10 07:02:47 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:02:48 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5504334508634925463, userId=8076123631414882650, text=Lorem ipsum rutrum ipsum tempus vitae consectetur Kafka adipiscing Lorem Vivamus Lorem velit elit., createdAt=2021-08-04T07:45))
2021-08-10 07:02:48 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=761056253266411554, userId=613476726947729862, text=amet, elit. tempus sit vitae consectetur fringilla Kafka vitae suscipit nisl nisl ipsum nisl, createdAt=2021-08-04T08:32:21))
2021-08-10 07:02:49 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5166836934018532096, userId=3718760665291109299, text=rutrum Nam elit. dolor vitae nec adipiscing Kafka tempus rutrum euismod consectetur suscipit placerat., createdAt=2021-08-04T08:59:27))
2021-08-10 07:02:49 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4705273234585575367, userId=5363972251641023620, text=fringilla velit consectetur sit nec nec rutrum Kafka sit amet, sit ipsum nisl elit., createdAt=2021-08-04T09:00:17))
2021-08-10 07:02:50 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7993025721671798024, userId=7351562595013403139, text=consectetur fringilla amet, amet, adipiscing suscipit vitae Kafka Lorem dolor nec dolor placerat. adipiscing, createdAt=2021-08-04T09:12:38))
2021-08-10 07:02:50 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2899693835094645697, userId=3569104777264655661, text=euismod suscipit Lorem magna adipiscing tempus Lorem Kafka nisl fringilla Nam velit Nam velit, createdAt=2021-08-04T09:29:38))
2021-08-10 07:02:51 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6065919425178185205, userId=831944293225710897, text=fringilla suscipit nec euismod euismod tempus fringilla Kafka vitae Lorem nisl suscipit suscipit placerat., createdAt=2021-08-04T09:51:23))
2021-08-10 07:02:51 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=696689680913881673, userId=4337472934299035664, text=adipiscing rutrum Vivamus dolor Nam Vivamus placerat. Kafka sit Nam placerat. Lorem nisl ipsum, createdAt=2021-08-04T09:56:43))
2021-08-10 07:02:52 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7074881173898465358, userId=8565589915827224341, text=vitae nec Vivamus euismod vitae Lorem nec Kafka magna Lorem tempus sit nec euismod, createdAt=2021-08-04T10:29:03))
2021-08-10 07:02:52 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4701761791836729784, userId=7706544751751717804, text=adipiscing dolor elit. fringilla Nam ipsum Nam Kafka consectetur euismod amet, sit nisl adipiscing, createdAt=2021-08-04T10:55:44))
2021-08-10 07:02:53 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6431089676115235219, userId=4602251798820900051, text=nec Nam velit fringilla suscipit sit fringilla Kafka suscipit suscipit vitae euismod adipiscing Lorem, createdAt=2021-08-04T10:58:44))
2021-08-10 07:02:53 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2333914061120516200, userId=7719051395805555356, text=suscipit nec velit magna nec tempus adipiscing Kafka nec vitae dolor Lorem euismod fringilla, createdAt=2021-08-04T11:10:04))
2021-08-10 07:02:54 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1668173298823415175, userId=1097956870192445251, text=adipiscing magna velit Nam suscipit elit. fringilla Kafka tempus nisl adipiscing sit nec Vivamus, createdAt=2021-08-04T12:11:08))
2021-08-10 07:02:54 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5747988817210492444, userId=268699992910776146, text=euismod nisl magna rutrum nec vitae Lorem Kafka tempus ipsum adipiscing rutrum fringilla elit., createdAt=2021-08-04T12:13:28))
2021-08-10 07:02:55 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2669176156956875985, userId=7766507245646731351, text=Nam Lorem nec elit. nisl magna magna Kafka ipsum sit velit ipsum nec elit., createdAt=2021-08-04T12:23:09))
2021-08-10 07:02:55 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2643671467301055233, userId=4775122396210201395, text=tempus euismod dolor amet, Vivamus nec Nam Kafka amet, adipiscing suscipit amet, Vivamus vitae, createdAt=2021-08-04T12:58:39))
2021-08-10 07:02:56 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5005625674609497262, userId=9137446060118481507, text=Nam consectetur suscipit adipiscing tempus sit magna Kafka ipsum vitae magna elit. Vivamus Vivamus, createdAt=2021-08-04T13:05:19))
2021-08-10 07:02:56 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1579735410357821255, userId=6309761758693629687, text=velit adipiscing suscipit elit. rutrum elit. placerat. Kafka sit vitae suscipit adipiscing Nam Nam, createdAt=2021-08-04T13:17:49))
2021-08-10 07:02:57 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=802606543207969840, userId=1151206027917315483, text=elit. elit. euismod ipsum placerat. Vivamus tempus Kafka rutrum consectetur amet, euismod rutrum Vivamus, createdAt=2021-08-04T14:14:10))
2021-08-10 07:02:57 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6296020079675008391, userId=7567594919556246426, text=magna vitae Vivamus placerat. sit suscipit tempus Kafka elit. sit consectetur fringilla fringilla nisl, createdAt=2021-08-04T14:16:40))
2021-08-10 07:02:58 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8615115445734999522, userId=7515470964291007906, text=velit rutrum nisl amet, velit suscipit ipsum Kafka dolor euismod adipiscing suscipit velit sit, createdAt=2021-08-04T14:23:20))
2021-08-10 07:02:58 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3495691668855159715, userId=9018172624293162315, text=adipiscing placerat. velit nec rutrum rutrum ipsum Kafka fringilla euismod elit. rutrum Vivamus fringilla, createdAt=2021-08-09T10:02:03))
2021-08-10 07:02:59 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6568863686172222711, userId=6628543829868940642, text=magna rutrum dolor amet, Vivamus dolor consectetur Kafka rutrum suscipit vitae ipsum placerat. adipiscing, createdAt=2021-08-09T10:04:43))
2021-08-10 07:02:59 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4792998205372256046, userId=2347761372198716702, text=suscipit suscipit elit. dolor consectetur placerat. adipiscing Kafka Vivamus vitae sit tempus suscipit vitae, createdAt=2021-08-09T10:06:33))
2021-08-10 07:02:59 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:03:00 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4947272165785871357, userId=6175395565250128741, text=nisl nisl tempus magna suscipit euismod dolor Kafka velit suscipit tempus adipiscing nisl ipsum, createdAt=2021-08-09T10:16:44))
2021-08-10 07:03:00 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1958568519054891004, userId=734662832535988882, text=elit. tempus vitae suscipit Lorem dolor ipsum Kafka nisl amet, elit. euismod velit placerat., createdAt=2021-08-09T10:21:34))
2021-08-10 07:03:01 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2008430944981080946, userId=4400952516252355293, text=suscipit fringilla magna Lorem placerat. rutrum vitae Kafka amet, amet, Vivamus Nam rutrum euismod, createdAt=2021-08-09T10:55:14))
2021-08-10 07:03:01 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5058776321402739331, userId=2906475740409542870, text=rutrum ipsum tempus nec velit amet, nec Kafka consectetur consectetur amet, nec nisl nisl, createdAt=2021-08-09T11:10:44))
2021-08-10 07:03:02 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2529116156641742042, userId=1084756974789765736, text=amet, Vivamus magna euismod adipiscing tempus ipsum Kafka velit nec magna sit ipsum vitae, createdAt=2021-08-09T11:13:34))
2021-08-10 07:03:02 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6759041029613177569, userId=5700500141474454236, text=nec Vivamus fringilla consectetur elit. tempus tempus Kafka sit placerat. ipsum nisl fringilla suscipit, createdAt=2021-08-09T11:39:25))
2021-08-10 07:03:03 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4557366010301835591, userId=5889367695568044005, text=velit euismod euismod Vivamus dolor nisl velit Kafka nisl consectetur ipsum suscipit velit magna, createdAt=2021-08-09T11:50:05))
2021-08-10 07:03:03 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7161465128430741822, userId=4716772408464360700, text=consectetur adipiscing suscipit suscipit euismod rutrum nisl Kafka nec nec sit dolor placerat. nec, createdAt=2021-08-09T12:05:36))
2021-08-10 07:03:04 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5516570885841720245, userId=3528402021546277590, text=amet, Lorem rutrum rutrum vitae consectetur nisl Kafka dolor suscipit vitae magna sit elit., createdAt=2021-08-09T12:17:46))
2021-08-10 07:03:04 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2604330365043707625, userId=4287823756718243538, text=fringilla magna rutrum Lorem nisl rutrum tempus Kafka Nam placerat. vitae consectetur Vivamus elit., createdAt=2021-08-09T12:20:36))
2021-08-10 07:03:05 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1138587960052856547, userId=5730819643825749508, text=dolor sit sit fringilla adipiscing Nam sit Kafka euismod consectetur nec fringilla dolor adipiscing, createdAt=2021-08-09T12:22:56))
2021-08-10 07:03:05 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8733455527698503804, userId=2226023490151105002, text=suscipit amet, elit. ipsum consectetur tempus placerat. Kafka adipiscing tempus Vivamus consectetur dolor Vivamus, createdAt=2021-08-09T12:38:16))
2021-08-10 07:03:06 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=347516401228634858, userId=1366703463160259496, text=nisl Lorem magna nec tempus vitae nec Kafka euismod dolor consectetur velit sit Nam, createdAt=2021-08-09T12:40:56))
2021-08-10 07:03:06 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7365410764464398979, userId=5329785812641081407, text=sit vitae fringilla vitae adipiscing Vivamus placerat. suscipit Kafka sit suscipit fringilla nec suscipit elit., createdAt=2021-08-03T15:55:12))
2021-08-10 07:03:07 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2329927646306818447, userId=6931274979559950867, text=dolor Vivamus sit consectetur amet, ipsum rutrum tempus Kafka suscipit tempus Nam amet, euismod dolor, createdAt=2021-08-03T16:06:32))
2021-08-10 07:03:07 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3004297038316791518, userId=5900917104663464501, text=suscipit rutrum sit nisl placerat. euismod suscipit elit. Kafka euismod Vivamus dolor adipiscing Nam Vivamus, createdAt=2021-08-03T14:33:14))
2021-08-10 07:03:08 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=37409703285251949, userId=4005929839137209505, text=rutrum velit dolor tempus dolor tempus Nam amet, Kafka fringilla rutrum tempus velit Vivamus dolor, createdAt=2021-08-03T15:26:42))
2021-08-10 07:03:08 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4255136471138534950, userId=8209745824063000961, text=placerat. velit Lorem Lorem sit vitae elit. Nam Kafka suscipit consectetur fringilla Nam amet, elit., createdAt=2021-08-03T15:28:42))
2021-08-10 07:03:09 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8576719238953864666, userId=7343919904531454037, text=nec rutrum nec velit ipsum euismod adipiscing nec Kafka adipiscing sit ipsum magna Vivamus adipiscing, createdAt=2021-08-03T15:28:52))
2021-08-10 07:03:09 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8513028878918409455, userId=1357050056507222040, text=ipsum elit. sit vitae tempus consectetur placerat. adipiscing Kafka magna nisl nec fringilla magna elit., createdAt=2021-08-03T15:43:52))
2021-08-10 07:03:10 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7452044954513849834, userId=8257152008468513705, text=Nam sit nec ipsum adipiscing vitae Lorem ipsum Kafka Vivamus magna adipiscing vitae Nam nec, createdAt=2021-08-03T15:49:52))
2021-08-10 07:03:10 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3798483545373720191, userId=5446841765743561683, text=vitae consectetur amet, Nam sit dolor elit. euismod Kafka ipsum fringilla ipsum nisl ipsum ipsum, createdAt=2021-08-03T16:15:12))
2021-08-10 07:03:11 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3085779084704866909, userId=926019547233199575, text=nisl amet, placerat. rutrum nisl nisl elit. sit Kafka fringilla nisl tempus fringilla dolor elit., createdAt=2021-08-03T16:23:42))
2021-08-10 07:03:11 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1914203647047664914, userId=3136481566201930978, text=Lorem suscipit elit. Vivamus elit. magna Vivamus sit Kafka dolor vitae Vivamus vitae Nam nec, createdAt=2021-08-03T16:26:32))
2021-08-10 07:03:11 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:03:12 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2181024512867427816, userId=7667057399401375486, text=nec sit sit euismod suscipit euismod dolor fringilla Kafka tempus rutrum Nam nec dolor ipsum, createdAt=2021-08-03T16:33:53))
2021-08-10 07:03:12 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6271283934175730823, userId=135874376136845146, text=magna adipiscing nec suscipit Nam ipsum ipsum amet, Kafka fringilla tempus suscipit elit. tempus dolor, createdAt=2021-08-03T16:56:33))
2021-08-10 07:03:13 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6331448438029595034, userId=1285058751148849151, text=Lorem amet, magna tempus placerat. tempus rutrum dolor Kafka tempus sit adipiscing elit. elit. fringilla, createdAt=2021-08-03T16:59:23))
2021-08-10 07:03:13 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6274460099373804854, userId=1709734872700488438, text=consectetur fringilla consectetur suscipit Vivamus suscipit velit euismod Kafka magna rutrum dolor Vivamus sit tempus, createdAt=2021-08-03T17:11:23))
2021-08-10 07:03:14 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5752406351091267137, userId=2230368675560226154, text=Lorem velit sit sit elit. nisl ipsum Lorem Kafka adipiscing elit. euismod ipsum vitae suscipit, createdAt=2021-08-03T17:50:44))
2021-08-10 07:03:14 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9094187724500171772, userId=6395616764182157171, text=elit. consectetur Nam tempus dolor suscipit rutrum tempus Kafka Lorem Vivamus Vivamus fringilla nec euismod, createdAt=2021-08-03T18:07:04))
2021-08-10 07:03:15 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7299158651591804502, userId=6680204704571600571, text=Nam tempus tempus nec placerat. fringilla velit nisl Kafka consectetur adipiscing adipiscing sit amet, Lorem, createdAt=2021-08-03T18:16:04))
2021-08-10 07:03:15 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4896335744352107423, userId=6432970667866373353, text=amet, tempus magna vitae dolor sit nisl Lorem Kafka sit elit. magna magna placerat. ipsum, createdAt=2021-08-03T18:58:44))
2021-08-10 07:03:16 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7421691553373175159, userId=8965112004528402876, text=nisl adipiscing tempus ipsum Vivamus suscipit euismod euismod Kafka magna adipiscing velit magna nec sit, createdAt=2021-08-03T19:12:25))
2021-08-10 07:03:16 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=678417731885893524, userId=238538771253848899, text=consectetur fringilla Nam dolor elit. nec Lorem ipsum Kafka fringilla magna euismod rutrum Nam dolor, createdAt=2021-08-03T19:34:05))
2021-08-10 07:03:17 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4802854938383175581, userId=2571672315984856045, text=placerat. velit rutrum nisl ipsum magna nisl amet, Kafka rutrum vitae fringilla velit nisl tempus, createdAt=2021-08-03T19:48:45))
2021-08-10 07:03:17 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8601916885462385272, userId=3583762048737845698, text=rutrum adipiscing Vivamus Vivamus tempus placerat. velit magna Kafka Nam euismod magna vitae nisl placerat., createdAt=2021-08-03T20:15:56))
2021-08-10 07:03:18 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6755975377914309597, userId=9212471895606161209, text=dolor Vivamus Vivamus suscipit ipsum suscipit velit magna Kafka dolor euismod elit. suscipit sit fringilla, createdAt=2021-08-03T20:22:26))
2021-08-10 07:03:18 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7464164474713987166, userId=1613910247500608585, text=dolor fringilla nisl ipsum velit vitae elit. vitae Kafka tempus ipsum Lorem dolor Vivamus nec, createdAt=2021-08-03T20:22:46))
2021-08-10 07:03:19 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=712038025875294358, userId=6092780610091857475, text=Vivamus nec amet, magna Nam amet, ipsum vitae Kafka rutrum Lorem euismod nisl nisl vitae, createdAt=2021-08-04T05:04:15))
2021-08-10 07:03:19 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6875253620076451845, userId=1199586613161866671, text=nisl dolor vitae Nam elit. fringilla adipiscing rutrum Kafka Nam sit vitae euismod adipiscing fringilla, createdAt=2021-08-04T05:43:26))
2021-08-10 07:03:20 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5040960749368457459, userId=4852227462941067001, text=euismod velit tempus rutrum magna nec consectetur sit Kafka rutrum dolor nec magna tempus ipsum, createdAt=2021-08-04T06:01:46))
2021-08-10 07:03:20 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5465254785329224671, userId=8207082297111406597, text=ipsum dolor elit. dolor tempus adipiscing dolor elit. Kafka ipsum Nam magna Lorem nec vitae, createdAt=2021-08-04T07:16:20))
2021-08-10 07:03:21 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=786745880809523084, userId=7401738071721527842, text=Lorem elit. suscipit dolor Lorem nisl elit. sit Kafka elit. nisl elit. Lorem nec Lorem, createdAt=2021-08-04T07:22:10))
2021-08-10 07:03:21 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4632981173220549518, userId=8004708684602089778, text=nec sit nisl consectetur fringilla ipsum nec ipsum Kafka Nam Vivamus nec magna sit elit., createdAt=2021-08-04T07:49:31))
2021-08-10 07:03:22 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5968455682208949768, userId=8576338616414798518, text=Vivamus tempus amet, placerat. magna suscipit tempus suscipit Kafka amet, dolor dolor euismod fringilla Nam, createdAt=2021-08-04T07:52:11))
2021-08-10 07:03:22 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2897240379928656817, userId=8809272926998809390, text=fringilla Lorem tempus Vivamus rutrum Nam tempus Lorem Kafka suscipit dolor fringilla placerat. velit fringilla, createdAt=2021-08-04T08:06:41))
2021-08-10 07:03:23 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8266305457644850222, userId=3583318847180061090, text=suscipit ipsum sit adipiscing amet, nisl magna nisl Kafka magna tempus Nam sit Nam adipiscing, createdAt=2021-08-04T08:55:07))
2021-08-10 07:03:23 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1961268687039600050, userId=6129339800303324732, text=adipiscing magna tempus dolor elit. placerat. vitae magna Kafka ipsum fringilla Nam amet, nec ipsum, createdAt=2021-08-04T08:57:57))
2021-08-10 07:03:23 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:03:24 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2311622980606944605, userId=8925613368087865627, text=vitae ipsum magna consectetur amet, rutrum tempus sit Kafka adipiscing placerat. vitae rutrum elit. Vivamus, createdAt=2021-08-04T09:13:28))
2021-08-10 07:03:24 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1131510968835880933, userId=8919166264434971449, text=nisl vitae vitae fringilla magna consectetur elit. elit. Kafka Lorem vitae Lorem vitae consectetur suscipit, createdAt=2021-08-04T09:23:18))
2021-08-10 07:03:25 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=888463759329511938, userId=5265440988687146555, text=dolor fringilla euismod dolor consectetur Vivamus tempus velit Kafka nec elit. suscipit magna sit elit., createdAt=2021-08-04T10:30:43))
2021-08-10 07:03:25 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2465150300662280149, userId=2913453844275989597, text=suscipit Vivamus Nam dolor tempus elit. nec Vivamus Kafka euismod Vivamus fringilla suscipit euismod nisl, createdAt=2021-08-04T10:39:13))
2021-08-10 07:03:26 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3468682308506197163, userId=5363047802103096495, text=magna magna vitae suscipit elit. rutrum nisl Nam Kafka vitae magna Nam placerat. ipsum amet,, createdAt=2021-08-04T10:51:34))
2021-08-10 07:03:26 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8128231120490714406, userId=8634663598950299799, text=nec Lorem amet, rutrum nec consectetur vitae ipsum Kafka elit. sit fringilla sit Vivamus fringilla, createdAt=2021-08-04T11:03:24))
2021-08-10 07:03:27 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6224634987360208569, userId=5444265111932390538, text=placerat. adipiscing magna Lorem fringilla rutrum consectetur fringilla Kafka dolor Lorem velit adipiscing adipiscing rutrum, createdAt=2021-08-04T11:08:54))
2021-08-10 07:03:27 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1257293085499156155, userId=8219439789232951122, text=velit placerat. euismod Lorem vitae magna nisl consectetur Kafka rutrum suscipit tempus fringilla placerat. dolor, createdAt=2021-08-04T11:11:24))
2021-08-10 07:03:28 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5644600506548870606, userId=4194312033804565965, text=amet, Vivamus rutrum sit tempus vitae fringilla Nam Kafka sit sit suscipit ipsum placerat. nisl, createdAt=2021-08-04T11:37:38))
2021-08-10 07:03:28 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9131589693745010073, userId=8242799848119884498, text=ipsum elit. rutrum sit nisl velit suscipit suscipit Kafka consectetur tempus tempus placerat. nec adipiscing, createdAt=2021-08-04T11:46:18))
2021-08-10 07:03:29 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5463727238859729298, userId=8700512013505964076, text=nisl Lorem ipsum magna nec amet, placerat. vitae Kafka consectetur elit. tempus amet, vitae nec, createdAt=2021-08-04T11:50:58))
2021-08-10 07:03:29 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9199907321037447197, userId=2523238505459026368, text=vitae consectetur amet, dolor fringilla tempus Lorem ipsum Kafka ipsum placerat. rutrum vitae elit. placerat., createdAt=2021-08-04T12:00:08))
2021-08-10 07:03:30 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3088775546858531827, userId=3989310695175285328, text=consectetur euismod consectetur amet, sit fringilla dolor fringilla Kafka ipsum Vivamus nec Nam placerat. euismod, createdAt=2021-08-04T13:06:39))
2021-08-10 07:03:30 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8731117576429353019, userId=2346573110362196134, text=sit vitae dolor adipiscing suscipit ipsum fringilla nisl Kafka suscipit suscipit Lorem Vivamus elit. tempus, createdAt=2021-08-04T13:16:19))
2021-08-10 07:03:31 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=651567535597773595, userId=1134725388518310326, text=ipsum nec tempus elit. ipsum vitae adipiscing euismod Kafka elit. tempus nisl Vivamus Nam amet,, createdAt=2021-08-04T13:15:29))
2021-08-10 07:03:31 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1165731124061478117, userId=7452700693346563776, text=nisl Nam velit consectetur Vivamus nisl fringilla vitae Kafka euismod dolor adipiscing consectetur velit Lorem, createdAt=2021-08-04T13:58:10))
2021-08-10 07:03:32 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3267709512658507456, userId=8739786049340960846, text=elit. adipiscing ipsum suscipit dolor elit. elit. magna Kafka adipiscing ipsum nec rutrum nisl dolor, createdAt=2021-08-04T14:21:30))
2021-08-10 07:03:32 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6007355924846312440, userId=5104154490880865664, text=nec fringilla magna rutrum adipiscing elit. amet, ipsum Kafka Vivamus Vivamus elit. velit sit euismod, createdAt=2021-08-09T10:27:04))
2021-08-10 07:03:33 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2853778342008772280, userId=5870373678666608828, text=nisl placerat. vitae adipiscing ipsum Lorem placerat. euismod Kafka Lorem amet, velit magna tempus sit, createdAt=2021-08-09T11:11:24))
2021-08-10 07:03:33 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=479837214702303667, userId=7876451221091820023, text=sit nisl Lorem placerat. dolor sit Nam suscipit Kafka placerat. Nam consectetur Nam Vivamus dolor, createdAt=2021-08-09T11:11:54))
2021-08-10 07:03:34 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2885767623853391263, userId=676944463187135246, text=dolor nec velit sit magna nisl nisl adipiscing Kafka velit nec Nam Vivamus fringilla velit, createdAt=2021-08-09T11:12:04))
2021-08-10 07:03:34 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8657114369621757163, userId=6234057273851385314, text=Lorem tempus tempus consectetur dolor ipsum vitae velit Kafka ipsum Vivamus amet, ipsum Vivamus suscipit, createdAt=2021-08-09T11:18:15))
2021-08-10 07:03:35 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=186648416425368847, userId=6716058756133412463, text=suscipit nisl nec ipsum adipiscing euismod vitae euismod Kafka nisl vitae nisl vitae suscipit rutrum, createdAt=2021-08-09T11:20:45))
2021-08-10 07:03:35 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9091815512224747804, userId=365519035853115264, text=ipsum amet, Vivamus nec Vivamus adipiscing dolor consectetur Kafka amet, Vivamus suscipit dolor suscipit elit., createdAt=2021-08-09T12:48:26))
2021-08-10 07:03:35 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:03:36 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4635691246779721566, userId=7194530961679106369, text=nec placerat. Lorem nisl Vivamus Nam vitae rutrum Kafka magna suscipit Vivamus rutrum euismod fringilla, createdAt=2021-08-09T13:26:27))
2021-08-10 07:03:36 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7666270886122665254, userId=1473779325679845397, text=amet, dolor magna elit. fringilla elit. dolor Lorem Kafka tempus fringilla ipsum nec placerat. nisl, createdAt=2021-08-09T13:54:27))
2021-08-10 07:03:37 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=776433066925419160, userId=2048012817170125640, text=tempus tempus amet, nisl velit consectetur sit Lorem Kafka ipsum Nam sit rutrum velit rutrum, createdAt=2021-08-03T14:42:40))
2021-08-10 07:03:37 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5427831207604606620, userId=3574821011171577216, text=euismod Vivamus elit. dolor fringilla magna vitae Lorem Kafka nisl Vivamus velit rutrum Lorem nisl, createdAt=2021-08-03T14:59:41))
2021-08-10 07:03:38 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7526392721052649185, userId=1636773431696862898, text=consectetur nisl magna Vivamus amet, nec vitae velit Kafka fringilla elit. ipsum consectetur rutrum nec, createdAt=2021-08-03T15:18:52))
2021-08-10 07:03:38 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7122921907051179671, userId=1695900827494990376, text=sit ipsum nec amet, vitae nec rutrum Nam Kafka suscipit magna suscipit nisl Vivamus elit., createdAt=2021-08-03T15:23:52))
2021-08-10 07:03:39 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8168969778451150719, userId=316274367014768815, text=consectetur Vivamus magna elit. consectetur amet, fringilla consectetur Kafka Vivamus magna tempus magna magna elit., createdAt=2021-08-03T15:30:22))
2021-08-10 07:03:39 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6188070270392989398, userId=2932982696123466860, text=dolor rutrum amet, sit dolor elit. Nam magna Kafka fringilla placerat. nisl nisl consectetur placerat., createdAt=2021-08-03T15:40:22))
2021-08-10 07:03:40 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7039260770289400077, userId=6915294077975336417, text=tempus Lorem placerat. nec vitae magna fringilla vitae Kafka velit magna suscipit Nam magna vitae, createdAt=2021-08-03T15:39:32))
2021-08-10 07:03:40 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3264969356078033905, userId=8667087197630810924, text=Nam magna Nam placerat. euismod elit. consectetur amet, Kafka nisl Lorem suscipit nec tempus vitae, createdAt=2021-08-03T15:42:22))
2021-08-10 07:03:41 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7215741557639691481, userId=7547855915853519714, text=elit. dolor amet, elit. sit sit vitae elit. Kafka rutrum fringilla vitae amet, magna consectetur, createdAt=2021-08-03T16:24:52))
2021-08-10 07:03:41 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3940968560568555752, userId=3405082272122508000, text=Vivamus amet, Lorem elit. Vivamus dolor magna suscipit Kafka vitae fringilla nisl magna Nam nec, createdAt=2021-08-03T17:07:33))
2021-08-10 07:03:42 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3548413519920210418, userId=4650566775768277588, text=elit. Vivamus tempus fringilla ipsum ipsum amet, amet, Kafka magna nec dolor dolor rutrum nec, createdAt=2021-08-03T17:39:53))
2021-08-10 07:03:42 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=760103361915720605, userId=6037196738050007605, text=consectetur amet, velit placerat. amet, nec amet, elit. Kafka dolor nec suscipit sit suscipit consectetur, createdAt=2021-08-03T18:16:34))
2021-08-10 07:03:43 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9133413221177077844, userId=1297288912361026084, text=vitae rutrum tempus tempus nisl velit elit. elit. Kafka consectetur euismod amet, sit sit sit, createdAt=2021-08-03T18:26:04))
2021-08-10 07:03:43 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=218179573984031333, userId=5869566380896901155, text=Nam vitae magna nisl amet, Nam amet, ipsum Kafka velit suscipit dolor velit rutrum suscipit, createdAt=2021-08-03T18:47:44))
2021-08-10 07:03:44 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5072495337360473264, userId=8139669426940191030, text=elit. fringilla vitae vitae suscipit amet, fringilla suscipit Kafka Nam suscipit adipiscing amet, Vivamus Nam, createdAt=2021-08-03T19:10:45))
2021-08-10 07:03:44 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4958910352946067077, userId=2244142802200906729, text=magna rutrum consectetur euismod placerat. velit nec Nam Kafka Lorem nec Lorem elit. euismod sit, createdAt=2021-08-03T19:58:55))
2021-08-10 07:03:45 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=472422202719508398, userId=6302933380493512940, text=consectetur placerat. tempus Lorem sit Nam placerat. adipiscing Kafka rutrum Nam amet, Nam amet, Nam, createdAt=2021-08-04T05:14:25))
2021-08-10 07:03:45 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2191153211857900067, userId=2112974149030109541, text=placerat. ipsum euismod velit vitae rutrum vitae Vivamus Kafka velit tempus nisl sit velit Vivamus, createdAt=2021-08-04T05:20:25))
2021-08-10 07:03:46 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7360758316625844589, userId=1633487037456555901, text=velit nisl dolor suscipit placerat. ipsum suscipit nisl Kafka dolor velit ipsum suscipit euismod nec, createdAt=2021-08-04T06:31:09))
2021-08-10 07:03:46 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4295885092055713445, userId=909435275456860754, text=fringilla fringilla rutrum adipiscing elit. fringilla adipiscing ipsum Kafka elit. rutrum fringilla magna vitae tempus, createdAt=2021-08-04T06:50:29))
2021-08-10 07:03:47 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3936717451689939544, userId=3851423924700291073, text=suscipit nec Lorem suscipit magna sit nec euismod Kafka velit euismod fringilla adipiscing placerat. adipiscing, createdAt=2021-08-04T07:19:40))
2021-08-10 07:03:47 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3612648861612174329, userId=4444284578895342860, text=elit. Vivamus magna amet, velit fringilla vitae Vivamus Kafka consectetur Nam Nam Vivamus sit Vivamus, createdAt=2021-08-04T07:44))
2021-08-10 07:03:47 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:03:48 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5962786189598216089, userId=2314801805571895876, text=Lorem nec ipsum sit Nam rutrum Lorem dolor Kafka adipiscing ipsum magna velit sit tempus, createdAt=2021-08-04T07:48:01))
2021-08-10 07:03:48 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6973972417310875903, userId=6331573268361324822, text=tempus Lorem ipsum amet, consectetur vitae fringilla consectetur Kafka tempus sit ipsum suscipit dolor sit, createdAt=2021-08-04T07:50:31))
2021-08-10 07:03:49 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8115274171873568527, userId=4643902732513820950, text=elit. euismod rutrum amet, magna consectetur fringilla nisl Kafka nisl rutrum velit adipiscing Lorem amet,, createdAt=2021-08-04T07:53:41))
2021-08-10 07:03:49 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3734082036751360500, userId=5622847844865944419, text=Vivamus suscipit elit. rutrum suscipit nec Lorem placerat. Kafka Nam magna Lorem placerat. adipiscing euismod, createdAt=2021-08-04T08:04:31))
2021-08-10 07:03:50 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8148977675154758384, userId=4881615491396725436, text=Lorem tempus adipiscing Lorem adipiscing nec sit fringilla Kafka Vivamus velit Lorem magna velit adipiscing, createdAt=2021-08-04T08:05:21))
2021-08-10 07:03:50 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1348863723355156135, userId=8360992732210962914, text=nisl sit Lorem euismod euismod fringilla rutrum adipiscing Kafka Lorem adipiscing velit Nam velit amet,, createdAt=2021-08-04T08:06:01))
2021-08-10 07:03:51 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2962847108509594317, userId=7903838470527425980, text=magna rutrum dolor rutrum tempus consectetur velit vitae Kafka vitae consectetur ipsum suscipit ipsum velit, createdAt=2021-08-04T08:51:47))
2021-08-10 07:03:51 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1222850106465159401, userId=7177087711290223022, text=amet, placerat. rutrum rutrum euismod Nam nec velit Kafka nisl euismod vitae euismod sit ipsum, createdAt=2021-08-04T09:02:58))
2021-08-10 07:03:52 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6476647041508507487, userId=4074522404775544992, text=fringilla dolor suscipit suscipit suscipit Lorem fringilla consectetur Kafka nec fringilla Nam suscipit suscipit nec, createdAt=2021-08-04T09:09:18))
2021-08-10 07:03:52 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7316265053260608386, userId=5563724521806286393, text=sit magna ipsum magna magna Vivamus velit magna Kafka tempus ipsum nisl consectetur nisl elit., createdAt=2021-08-04T09:17:38))
2021-08-10 07:03:53 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=450621339430751617, userId=5296721390390903513, text=Vivamus magna tempus sit sit nec velit sit Kafka magna vitae fringilla suscipit nisl magna, createdAt=2021-08-04T09:35:52))
2021-08-10 07:03:53 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=697191749980239515, userId=8183683732718858504, text=fringilla sit sit tempus consectetur vitae fringilla vitae Kafka Lorem velit fringilla velit Vivamus magna, createdAt=2021-08-04T10:20:53))
2021-08-10 07:03:54 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7762174985607741315, userId=7725384675434911023, text=elit. ipsum magna nec placerat. tempus sit euismod Kafka euismod velit adipiscing fringilla vitae nisl, createdAt=2021-08-04T10:43:53))
2021-08-10 07:03:54 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8612721063066512790, userId=7606621912013038503, text=elit. suscipit sit dolor suscipit rutrum adipiscing vitae Kafka amet, nec suscipit suscipit Vivamus placerat., createdAt=2021-08-04T10:56:04))
2021-08-10 07:03:55 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4398419716516879171, userId=4445046055255387420, text=nisl magna magna vitae Vivamus suscipit suscipit adipiscing Kafka fringilla adipiscing Lorem rutrum sit consectetur, createdAt=2021-08-04T11:47:08))
2021-08-10 07:03:55 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3126393868850954596, userId=6718548395289784494, text=Nam elit. magna suscipit suscipit euismod Nam ipsum Kafka Lorem magna elit. magna dolor Lorem, createdAt=2021-08-04T12:22:29))
2021-08-10 07:03:56 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9035603873556723754, userId=5115622524816317160, text=Nam consectetur euismod tempus nisl velit velit rutrum Kafka euismod velit sit vitae Nam tempus, createdAt=2021-08-04T12:26:39))
2021-08-10 07:03:56 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1252468319198571654, userId=7198421336509976961, text=magna magna velit elit. suscipit Vivamus Nam consectetur Kafka fringilla fringilla ipsum velit adipiscing Lorem, createdAt=2021-08-04T12:29:49))
2021-08-10 07:03:57 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5197277057538270908, userId=1804763867750080541, text=Vivamus ipsum vitae vitae ipsum dolor Nam euismod Kafka nec rutrum nisl Nam sit Nam, createdAt=2021-08-04T12:43:39))
2021-08-10 07:03:57 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5059649659458765968, userId=5979727719042968272, text=dolor Nam adipiscing nec ipsum consectetur amet, fringilla Kafka nec suscipit dolor Nam Vivamus Lorem, createdAt=2021-08-04T12:47:29))
2021-08-10 07:03:58 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2552278717977090407, userId=8759807982315590724, text=suscipit magna magna tempus nisl consectetur nec consectetur Kafka fringilla nisl suscipit nec fringilla magna, createdAt=2021-08-04T12:52:39))
2021-08-10 07:03:58 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3873221492206457080, userId=8552232005019317091, text=dolor nec placerat. Nam vitae sit amet, nisl Kafka vitae suscipit placerat. vitae adipiscing elit., createdAt=2021-08-04T12:53:49))
2021-08-10 07:03:59 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3534611730583443826, userId=1741328601145782271, text=vitae tempus amet, euismod ipsum magna rutrum Vivamus Kafka elit. elit. amet, dolor elit. elit., createdAt=2021-08-04T13:20:29))
2021-08-10 07:03:59 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3929115480743922430, userId=4977368868429963363, text=adipiscing Nam velit ipsum magna fringilla amet, amet, Kafka amet, suscipit placerat. elit. sit fringilla, createdAt=2021-08-04T13:32:40))
2021-08-10 07:03:59 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:04:00 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8902025680397595486, userId=2485803847755877690, text=amet, magna nisl suscipit vitae dolor magna amet, Kafka Vivamus elit. vitae vitae tempus vitae, createdAt=2021-08-04T13:59:10))
2021-08-10 07:04:00 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4397733594961375517, userId=4395340715790211706, text=Vivamus amet, fringilla adipiscing vitae fringilla adipiscing rutrum Kafka placerat. sit tempus Nam Nam nisl, createdAt=2021-08-04T14:08:20))
2021-08-10 07:04:01 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5176939705485687204, userId=7834437884776632508, text=nec ipsum rutrum ipsum ipsum elit. elit. consectetur Kafka Lorem sit euismod Vivamus velit adipiscing, createdAt=2021-08-09T09:59:33))
2021-08-10 07:04:01 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5129340820758609765, userId=3080850837603378522, text=sit consectetur vitae dolor nisl nec consectetur suscipit Kafka nec dolor tempus euismod euismod elit., createdAt=2021-08-09T10:04:33))
2021-08-10 07:04:02 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3741727420508393433, userId=5403236795546038882, text=fringilla nisl elit. dolor magna euismod magna adipiscing Kafka nisl placerat. tempus Lorem vitae rutrum, createdAt=2021-08-09T10:09:24))
2021-08-10 07:04:02 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4974383516040381797, userId=2413500206116090793, text=fringilla velit consectetur amet, dolor suscipit Lorem magna Kafka fringilla Lorem rutrum fringilla Vivamus magna, createdAt=2021-08-09T10:24:54))
2021-08-10 07:04:03 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1412884370899567783, userId=6004267344202399473, text=velit rutrum sit magna Nam amet, Vivamus magna Kafka sit euismod Vivamus adipiscing tempus adipiscing, createdAt=2021-08-09T10:39:54))
2021-08-10 07:04:03 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6180744463842178443, userId=3814525169614886760, text=Nam placerat. amet, euismod Lorem consectetur suscipit nisl Kafka suscipit Lorem suscipit magna magna fringilla, createdAt=2021-08-09T10:54:54))
2021-08-10 07:04:04 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1339333104712067969, userId=1674155132793877587, text=fringilla sit euismod adipiscing ipsum nec dolor magna Kafka vitae elit. dolor sit tempus ipsum, createdAt=2021-08-09T11:46:25))
2021-08-10 07:04:04 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3034089432260438866, userId=6303019023889786504, text=rutrum Lorem Nam dolor sit euismod vitae nisl Kafka amet, nec Nam tempus adipiscing fringilla, createdAt=2021-08-09T12:02:15))
2021-08-10 07:04:05 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7862551908889438402, userId=3365980750711215950, text=dolor velit adipiscing Lorem dolor suscipit magna Vivamus Kafka ipsum consectetur nec nec suscipit amet,, createdAt=2021-08-09T12:05:26))
2021-08-10 07:04:05 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3732598984138550989, userId=4489798270173785860, text=magna fringilla elit. consectetur nisl elit. sit Lorem Kafka ipsum velit Nam vitae dolor elit., createdAt=2021-08-09T12:08:36))
2021-08-10 07:04:06 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=748092774612363084, userId=1909760269298160903, text=Lorem nisl velit consectetur vitae elit. nisl suscipit Kafka magna Vivamus placerat. Vivamus euismod rutrum, createdAt=2021-08-09T12:32:46))
2021-08-10 07:04:06 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3275845664006127423, userId=6157456879281573823, text=magna euismod euismod adipiscing nisl nisl Nam placerat. Kafka euismod ipsum sit elit. Lorem Lorem, createdAt=2021-08-09T13:17:07))
2021-08-10 07:04:07 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5000118431961450143, userId=9014685868027242791, text=vitae amet, tempus tempus nisl amet, placerat. velit Kafka ipsum Nam sit adipiscing euismod amet,, createdAt=2021-08-09T13:24:57))
2021-08-10 07:04:07 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2173974716473499583, userId=7886027756852739566, text=vitae placerat. placerat. velit ipsum velit euismod dolor Kafka adipiscing vitae consectetur adipiscing elit. placerat., createdAt=2021-08-09T13:50:57))
2021-08-10 07:04:08 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7424319550751254083, userId=6097367131419049899, text=Lorem placerat. sit elit. tempus fringilla consectetur nisl Kafka Vivamus consectetur rutrum adipiscing vitae elit. euismod, createdAt=2021-08-03T15:59:02))
2021-08-10 07:04:08 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8100141174736628511, userId=8106137393842284845, text=elit. ipsum amet, Lorem elit. sit nisl sit Kafka nec amet, fringilla consectetur placerat. euismod nec, createdAt=2021-08-03T16:22:42))
2021-08-10 07:04:09 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7099825403741556547, userId=1393212166869082585, text=Lorem velit adipiscing ipsum ipsum nisl magna suscipit Kafka Vivamus tempus nec amet, suscipit euismod rutrum, createdAt=2021-08-03T16:02:12))
2021-08-10 07:04:09 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2576296253493786833, userId=8537127395310709797, text=elit. ipsum vitae velit sit Vivamus nec vitae Kafka amet, rutrum vitae fringilla amet, adipiscing sit, createdAt=2021-08-03T16:03:02))
2021-08-10 07:04:10 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=9167549623957094321, userId=2561424657877108908, text=placerat. Vivamus Vivamus adipiscing placerat. sit sit Lorem Kafka ipsum nec Lorem ipsum elit. suscipit Vivamus, createdAt=2021-08-03T15:17:12))
2021-08-10 07:04:10 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6554621367529178375, userId=1532794445443497035, text=magna amet, nisl velit vitae Nam magna euismod Kafka amet, placerat. Nam rutrum velit amet, Vivamus, createdAt=2021-08-03T15:16:52))
2021-08-10 07:04:11 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5648278238565688523, userId=6407786487233804900, text=sit euismod tempus velit euismod sit nec elit. Kafka nec velit fringilla Vivamus suscipit nisl velit, createdAt=2021-08-03T15:44:02))
2021-08-10 07:04:11 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=359417336113519114, userId=3430804425249553691, text=ipsum elit. elit. Vivamus ipsum nec nec Vivamus Kafka rutrum velit Lorem fringilla velit tempus amet,, createdAt=2021-08-03T16:09:42))
2021-08-10 07:04:11 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:04:12 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2993217105827240554, userId=4786931207863443735, text=suscipit fringilla euismod Nam nisl ipsum Lorem placerat. Kafka sit dolor placerat. elit. placerat. adipiscing amet,, createdAt=2021-08-03T16:12:22))
2021-08-10 07:04:12 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=566949383704940062, userId=5145406419319524977, text=Vivamus Lorem magna suscipit placerat. vitae Lorem dolor Kafka elit. ipsum nisl Lorem nisl rutrum elit., createdAt=2021-08-03T16:19:22))
2021-08-10 07:04:13 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7896639188733955171, userId=6968975122245746341, text=nisl nec Nam rutrum nec adipiscing consectetur Vivamus Kafka amet, nec tempus dolor fringilla magna dolor, createdAt=2021-08-03T16:29:33))
2021-08-10 07:04:13 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5059434564324699704, userId=8421080251783791278, text=dolor adipiscing velit Vivamus magna nec rutrum Nam Kafka Nam dolor sit fringilla euismod Lorem dolor, createdAt=2021-08-03T16:47:43))
2021-08-10 07:04:14 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2744080294132934507, userId=2747721328045310737, text=amet, rutrum magna Lorem placerat. magna velit tempus Kafka consectetur magna suscipit Nam Lorem adipiscing tempus, createdAt=2021-08-03T16:56:13))
2021-08-10 07:04:14 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4647726670350076532, userId=4849350874281709433, text=velit placerat. amet, tempus adipiscing ipsum nec consectetur Kafka rutrum magna vitae dolor placerat. suscipit adipiscing, createdAt=2021-08-03T16:59:43))
2021-08-10 07:04:15 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7507507905303609225, userId=3230289562446595091, text=nec sit magna elit. adipiscing velit amet, fringilla Kafka nisl fringilla euismod nisl nisl nec fringilla, createdAt=2021-08-03T17:07:13))
2021-08-10 07:04:15 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3717705657767471456, userId=6072102788905356785, text=vitae Vivamus Vivamus euismod nisl velit sit fringilla Kafka consectetur adipiscing nec rutrum tempus fringilla consectetur, createdAt=2021-08-03T17:30:03))
2021-08-10 07:04:16 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2839871766830416778, userId=1653175540238334314, text=placerat. rutrum velit ipsum elit. amet, sit Nam Kafka nisl consectetur velit Lorem tempus sit consectetur, createdAt=2021-08-03T18:07:24))
2021-08-10 07:04:16 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1619338112556481970, userId=6863925751064651745, text=tempus ipsum nec vitae dolor sit placerat. dolor Kafka nisl Nam amet, Vivamus consectetur vitae sit, createdAt=2021-08-03T18:24:54))
2021-08-10 07:04:17 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1918998162477072003, userId=4027776437187964658, text=ipsum Nam Lorem suscipit sit euismod sit nisl Kafka Nam magna nisl nec placerat. nec magna, createdAt=2021-08-03T18:51:54))
2021-08-10 07:04:17 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7337911658907104390, userId=8996165895242486938, text=consectetur suscipit rutrum ipsum elit. ipsum Vivamus Nam Kafka suscipit consectetur placerat. magna suscipit tempus sit, createdAt=2021-08-03T18:59:54))
2021-08-10 07:04:18 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8975850915585150746, userId=6109210045990794907, text=elit. velit ipsum amet, Vivamus magna Vivamus elit. Kafka nec velit Nam placerat. velit placerat. elit., createdAt=2021-08-03T20:25:36))
2021-08-10 07:04:18 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7634466398086860709, userId=4525036587198663312, text=Lorem Vivamus consectetur rutrum Lorem fringilla velit fringilla Kafka magna ipsum magna Nam suscipit vitae adipiscing, createdAt=2021-08-04T04:57:45))
2021-08-10 07:04:19 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4864414410873757576, userId=2089733644217203940, text=Vivamus dolor suscipit tempus consectetur vitae ipsum Nam Kafka elit. tempus consectetur Vivamus fringilla velit ipsum, createdAt=2021-08-04T05:40:26))
2021-08-10 07:04:19 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8926759675528900032, userId=9014199113584696150, text=elit. vitae tempus tempus amet, sit rutrum dolor Kafka euismod rutrum suscipit elit. Vivamus nec nisl, createdAt=2021-08-04T05:43:46))
2021-08-10 07:04:20 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5565018692609334326, userId=8113449441558984816, text=suscipit sit vitae adipiscing Nam Vivamus Vivamus Lorem Kafka sit adipiscing fringilla magna amet, ipsum nisl, createdAt=2021-08-04T05:48:56))
2021-08-10 07:04:20 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6151953591061941769, userId=184134998056669574, text=nec velit dolor elit. placerat. magna tempus euismod Kafka rutrum velit suscipit velit suscipit placerat. magna, createdAt=2021-08-04T05:52:56))
2021-08-10 07:04:21 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7288204431516028499, userId=6878395605440220393, text=magna nisl euismod consectetur magna magna suscipit sit Kafka adipiscing tempus nisl Lorem fringilla magna velit, createdAt=2021-08-04T06:34:29))
2021-08-10 07:04:21 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5183490357871564006, userId=2572308665612934567, text=nisl consectetur Lorem elit. vitae dolor amet, placerat. Kafka Lorem suscipit sit adipiscing nec ipsum Vivamus, createdAt=2021-08-04T06:48:59))
2021-08-10 07:04:22 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4413960233950447008, userId=7476458823164323248, text=placerat. magna nec velit magna magna vitae adipiscing Kafka consectetur suscipit nisl adipiscing consectetur amet, velit, createdAt=2021-08-04T07:09:40))
2021-08-10 07:04:22 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5760485185582120849, userId=4160947878244733402, text=tempus Vivamus nec Lorem vitae Lorem rutrum dolor Kafka Vivamus consectetur ipsum nec nec Nam fringilla, createdAt=2021-08-04T07:19:10))
2021-08-10 07:04:23 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=37593206801881143, userId=4848149635103667765, text=fringilla adipiscing velit Lorem nisl amet, elit. adipiscing Kafka magna Vivamus rutrum tempus dolor velit amet,, createdAt=2021-08-04T07:36:40))
2021-08-10 07:04:23 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5834736236246527230, userId=7839464596090975313, text=tempus rutrum Lorem vitae nisl Nam magna consectetur Kafka amet, magna sit rutrum Vivamus elit. velit, createdAt=2021-08-04T07:39:20))
2021-08-10 07:04:23 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:04:24 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=983817681712458599, userId=6049058337228671842, text=elit. euismod dolor fringilla tempus nec euismod fringilla Kafka sit consectetur amet, tempus euismod elit. consectetur, createdAt=2021-08-04T08:18:21))
2021-08-10 07:04:24 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4502389235578684389, userId=2136865983674364903, text=vitae fringilla fringilla dolor magna Vivamus Vivamus consectetur Kafka euismod elit. magna fringilla rutrum magna tempus, createdAt=2021-08-04T09:01:07))
2021-08-10 07:04:25 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=898948694724900771, userId=4741622737332289032, text=Nam magna Lorem Lorem ipsum dolor velit Vivamus Kafka fringilla nec dolor adipiscing magna euismod Vivamus, createdAt=2021-08-04T09:10:08))
2021-08-10 07:04:25 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2200328634988911241, userId=4765265430238062097, text=Lorem adipiscing nec velit elit. vitae ipsum elit. Kafka dolor magna consectetur velit rutrum suscipit euismod, createdAt=2021-08-04T10:04:23))
2021-08-10 07:04:26 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5408439217897484202, userId=1417910659755449190, text=tempus nisl ipsum euismod dolor sit rutrum nec Kafka tempus nec nisl ipsum sit elit. Lorem, createdAt=2021-08-04T10:05:03))
2021-08-10 07:04:26 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6159746597736080876, userId=4166666743835620602, text=Nam fringilla ipsum elit. elit. amet, placerat. nisl Kafka placerat. Lorem placerat. tempus nec Nam elit., createdAt=2021-08-04T10:34:13))
2021-08-10 07:04:27 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=555940804471468387, userId=5383634259858399321, text=ipsum ipsum adipiscing sit adipiscing tempus velit rutrum Kafka fringilla euismod fringilla nisl placerat. euismod sit, createdAt=2021-08-04T10:44:53))
2021-08-10 07:04:27 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6752597003510430420, userId=7299745370070230403, text=adipiscing consectetur sit suscipit consectetur euismod suscipit magna Kafka euismod Vivamus vitae nec sit adipiscing amet,, createdAt=2021-08-04T11:20:54))
2021-08-10 07:04:28 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2041765838756717776, userId=1815126659714305158, text=suscipit dolor fringilla magna tempus nisl fringilla suscipit Kafka Nam nec tempus euismod tempus sit nisl, createdAt=2021-08-04T12:09:18))
2021-08-10 07:04:28 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5494063464904064531, userId=8221074360286674475, text=ipsum dolor velit elit. placerat. rutrum euismod suscipit Kafka amet, fringilla fringilla Vivamus rutrum sit fringilla, createdAt=2021-08-04T12:39:09))
2021-08-10 07:04:29 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=228820479589480477, userId=6194285831474349175, text=ipsum consectetur vitae Vivamus vitae Nam nec elit. Kafka Nam consectetur magna suscipit nisl nisl tempus, createdAt=2021-08-04T12:57:09))
2021-08-10 07:04:29 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2847939386047662239, userId=2819809590011445014, text=fringilla Nam fringilla tempus sit Nam placerat. tempus Kafka elit. nec vitae velit Nam adipiscing adipiscing, createdAt=2021-08-04T13:30:40))
2021-08-10 07:04:30 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1524036861364140085, userId=5584213668430289799, text=nec velit placerat. nisl placerat. adipiscing sit tempus Kafka magna consectetur tempus rutrum consectetur magna euismod, createdAt=2021-08-04T14:15:40))
2021-08-10 07:04:30 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=379477412472384403, userId=3114068833895574829, text=placerat. rutrum nec tempus sit euismod velit Vivamus Kafka placerat. Nam elit. Vivamus adipiscing nisl nisl, createdAt=2021-08-04T14:21:10))
2021-08-10 07:04:31 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2702233178107761405, userId=8087073919776785570, text=euismod suscipit tempus nec magna euismod Lorem suscipit Kafka tempus sit Lorem fringilla Vivamus Nam fringilla, createdAt=2021-08-09T10:42:04))
2021-08-10 07:04:31 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3035111772211124254, userId=1069040618489230292, text=consectetur suscipit placerat. suscipit Vivamus sit fringilla nec Kafka vitae euismod suscipit vitae Lorem amet, suscipit, createdAt=2021-08-09T10:47:44))
2021-08-10 07:04:32 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=214992142755399582, userId=1086502083329638728, text=Vivamus adipiscing nisl ipsum amet, suscipit Nam placerat. Kafka Nam fringilla nec adipiscing consectetur velit ipsum, createdAt=2021-08-09T11:16:55))
2021-08-10 07:04:32 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8121494361303382225, userId=7613304876187561446, text=placerat. dolor fringilla ipsum vitae amet, velit euismod Kafka adipiscing consectetur adipiscing vitae suscipit Lorem nisl, createdAt=2021-08-09T11:21:15))
2021-08-10 07:04:33 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=467709863309305178, userId=6397312458989648763, text=nec suscipit suscipit Nam nec fringilla elit. fringilla Kafka magna rutrum vitae Vivamus elit. placerat. dolor, createdAt=2021-08-09T11:47:25))
2021-08-10 07:04:33 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2497101589367313495, userId=8694202541386462089, text=rutrum ipsum elit. Lorem amet, dolor ipsum Vivamus Kafka fringilla amet, fringilla vitae Lorem tempus amet,, createdAt=2021-08-09T12:21:16))
2021-08-10 07:04:34 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7673333109653798841, userId=1510454312193494646, text=ipsum tempus nisl Lorem fringilla nisl Lorem tempus Kafka fringilla ipsum Nam ipsum amet, Nam Lorem, createdAt=2021-08-09T12:25:06))
2021-08-10 07:04:34 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3236680520085899015, userId=465953933674994398, text=ipsum suscipit Nam amet, elit. vitae Lorem Nam Kafka magna elit. nisl elit. magna magna tempus, createdAt=2021-08-09T13:33:57))
2021-08-10 07:04:35 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6817805169562295573, userId=2804040029455973331, text=suscipit Vivamus placerat. ipsum nec fringilla velit elit. Kafka rutrum consectetur euismod fringilla suscipit sit suscipit, createdAt=2021-08-09T13:45:47))
2021-08-10 07:04:35 [parallel-4] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3ac2292b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:04:35 [reactor-http-nio-1] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3ac2292b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:04:35 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8429384942418540035, userId=5426486365393213740, text=Lorem Lorem consectetur amet, tempus nec sit euismod Kafka consectetur Lorem euismod nec elit. fringilla Vivamus, createdAt=2021-08-09T13:48:27))
2021-08-10 07:04:35 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:04:36 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3263450211620255842, userId=3272973041035489943, text=adipiscing Vivamus rutrum fringilla Lorem ipsum euismod elit. Kafka Nam Nam sit adipiscing nisl Vivamus tempus, createdAt=2021-08-03T14:36:04))
2021-08-10 07:04:36 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2946616946976658242, userId=2405698181944034772, text=nec fringilla ipsum rutrum suscipit amet, fringilla ipsum Kafka consectetur nec magna sit Nam tempus dolor, createdAt=2021-08-03T14:44:10))
2021-08-10 07:04:37 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2226699533232042569, userId=8069010459924077403, text=euismod fringilla euismod amet, amet, amet, nisl Lorem Kafka adipiscing fringilla amet, amet, consectetur amet, Lorem, createdAt=2021-08-03T14:58:51))
2021-08-10 07:04:37 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1840148867655597202, userId=7933100236108206104, text=suscipit Nam elit. magna dolor rutrum suscipit tempus Kafka tempus nisl elit. consectetur Vivamus dolor velit, createdAt=2021-08-03T16:14:12))
2021-08-10 07:04:38 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3368307286248778161, userId=5198365764426437582, text=velit adipiscing nisl dolor adipiscing ipsum sit tempus Kafka Lorem suscipit adipiscing Vivamus nisl ipsum nisl, createdAt=2021-08-03T16:28:12))
2021-08-10 07:04:38 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8717735623713860147, userId=2781214784682834777, text=consectetur consectetur rutrum suscipit adipiscing fringilla rutrum nec Kafka magna Nam velit fringilla velit ipsum ipsum, createdAt=2021-08-03T16:49:33))
2021-08-10 07:04:39 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2533829594262413940, userId=2991429982175294926, text=sit Lorem suscipit fringilla tempus consectetur fringilla Lorem Kafka consectetur dolor dolor consectetur ipsum nec velit, createdAt=2021-08-03T16:50:43))
2021-08-10 07:04:39 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6533390841955952338, userId=2103868520866939679, text=adipiscing suscipit consectetur ipsum Nam velit nec velit Kafka velit sit adipiscing sit ipsum amet, adipiscing, createdAt=2021-08-03T17:01:53))
2021-08-10 07:04:40 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4773567282400975573, userId=6721039962386546103, text=nisl nisl sit suscipit dolor magna placerat. rutrum Kafka dolor adipiscing placerat. velit euismod vitae placerat., createdAt=2021-08-03T17:18:23))
2021-08-10 07:04:40 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8126314493547442059, userId=6402981455459181553, text=sit dolor consectetur vitae tempus tempus fringilla tempus Kafka velit Nam nec magna amet, tempus amet,, createdAt=2021-08-03T17:21:43))
2021-08-10 07:04:41 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5524361916224166528, userId=5978848636656619385, text=fringilla rutrum Lorem Vivamus Nam magna magna Vivamus Kafka tempus Lorem velit amet, vitae consectetur placerat., createdAt=2021-08-03T17:27:03))
2021-08-10 07:04:41 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7491343026836697803, userId=3623780058327924281, text=nisl Nam velit Lorem amet, tempus magna fringilla Kafka elit. Lorem Nam nisl vitae amet, adipiscing, createdAt=2021-08-03T17:29:53))
2021-08-10 07:04:42 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2100968830936167040, userId=6253537959337073738, text=ipsum Lorem Lorem Nam tempus Vivamus rutrum ipsum Kafka euismod adipiscing euismod nisl suscipit adipiscing euismod, createdAt=2021-08-03T17:45:23))
2021-08-10 07:04:42 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5080634594624241425, userId=7264997113340922846, text=ipsum adipiscing nisl amet, euismod euismod euismod magna Kafka magna placerat. nec Vivamus placerat. adipiscing amet,, createdAt=2021-08-03T18:01:24))
2021-08-10 07:04:43 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=790578028168557614, userId=6229226463537370408, text=adipiscing magna tempus Nam placerat. nisl Nam Nam Kafka sit elit. suscipit suscipit dolor fringilla ipsum, createdAt=2021-08-03T18:00:24))
2021-08-10 07:04:43 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6218068113700645997, userId=7094082525514313245, text=tempus velit nec adipiscing velit euismod nisl Nam Kafka sit Lorem tempus magna rutrum nisl amet,, createdAt=2021-08-03T18:00:54))
2021-08-10 07:04:44 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=261971525858074069, userId=4890302921511420510, text=placerat. Nam Lorem suscipit tempus velit Lorem adipiscing Kafka elit. adipiscing dolor sit nisl placerat. euismod, createdAt=2021-08-03T18:22:44))
2021-08-10 07:04:44 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=127204756884273204, userId=8584848515984939180, text=placerat. nisl velit dolor placerat. amet, velit nisl Kafka placerat. fringilla tempus adipiscing placerat. euismod velit, createdAt=2021-08-03T18:25:44))
2021-08-10 07:04:45 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2815724917257065496, userId=5207925692451481724, text=Lorem magna consectetur placerat. nisl fringilla sit vitae Kafka dolor nec tempus ipsum Nam dolor suscipit, createdAt=2021-08-03T18:39:54))
2021-08-10 07:04:45 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6093286924003424137, userId=6099776298463971789, text=vitae suscipit Vivamus vitae sit elit. amet, magna Kafka tempus suscipit amet, dolor magna Lorem placerat., createdAt=2021-08-03T18:45:24))
2021-08-10 07:04:46 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6873336754061500025, userId=1945776796101490844, text=suscipit fringilla dolor rutrum nec amet, rutrum rutrum Kafka nec magna fringilla Nam Vivamus vitae consectetur, createdAt=2021-08-03T19:28:35))
2021-08-10 07:04:46 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2455978534683138315, userId=3076461116224750504, text=Vivamus magna consectetur placerat. Lorem ipsum adipiscing fringilla Kafka Vivamus magna Vivamus nec consectetur Nam nec, createdAt=2021-08-04T05:02:25))
2021-08-10 07:04:47 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4725211712153227064, userId=8724558960545977565, text=nisl euismod fringilla Vivamus ipsum tempus nec sit Kafka ipsum sit sit nec amet, ipsum Lorem, createdAt=2021-08-04T05:03:35))
2021-08-10 07:04:47 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8954864008449814549, userId=2392276272720167357, text=suscipit nisl Nam placerat. consectetur euismod Nam vitae Kafka placerat. nisl ipsum rutrum adipiscing Vivamus sit, createdAt=2021-08-04T05:18:25))
2021-08-10 07:04:47 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:04:48 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6433763638855390564, userId=4919590708378603939, text=suscipit nec adipiscing Vivamus rutrum vitae vitae placerat. Kafka tempus nec elit. sit fringilla rutrum Vivamus, createdAt=2021-08-04T05:54:16))
2021-08-10 07:04:48 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3296214066804184889, userId=2162562192787094052, text=amet, magna elit. magna consectetur Vivamus dolor amet, Kafka nec tempus amet, vitae vitae Vivamus Vivamus, createdAt=2021-08-04T05:56:26))
2021-08-10 07:04:49 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1113558565463616007, userId=2365479569055204465, text=rutrum nisl Nam rutrum adipiscing consectetur euismod magna Kafka rutrum elit. dolor suscipit Vivamus fringilla euismod, createdAt=2021-08-04T05:59:56))
2021-08-10 07:04:49 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=408298252222189638, userId=4377563423081199623, text=Vivamus nec velit sit Lorem Vivamus elit. euismod Kafka elit. nec suscipit rutrum dolor amet, tempus, createdAt=2021-08-04T06:34:39))
2021-08-10 07:04:50 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8698207970271063619, userId=7268577391216841317, text=amet, placerat. magna dolor ipsum consectetur dolor suscipit Kafka rutrum velit magna vitae vitae sit vitae, createdAt=2021-08-04T06:50:59))
2021-08-10 07:04:50 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5010205329527616927, userId=6369121883746294208, text=nec Lorem ipsum elit. adipiscing dolor euismod rutrum Kafka suscipit dolor Lorem Vivamus euismod amet, amet,, createdAt=2021-08-04T06:56:49))
2021-08-10 07:04:51 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5789914120991711457, userId=4511009178656246920, text=Nam tempus consectetur tempus amet, rutrum suscipit velit Kafka vitae rutrum Lorem magna vitae consectetur sit, createdAt=2021-08-04T07:05:30))
2021-08-10 07:04:51 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1503279601381331799, userId=6890044237524464742, text=fringilla Vivamus Nam elit. euismod Vivamus magna consectetur Kafka magna fringilla placerat. velit adipiscing magna nisl, createdAt=2021-08-04T07:35:40))
2021-08-10 07:04:52 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8588019621721172794, userId=5058710084427170040, text=amet, euismod adipiscing Vivamus adipiscing Vivamus velit fringilla Kafka nisl nec amet, rutrum nec tempus rutrum, createdAt=2021-08-04T09:18:48))
2021-08-10 07:04:52 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4057636975558647353, userId=7135136582746141217, text=adipiscing Nam velit fringilla adipiscing ipsum consectetur velit Kafka euismod sit sit rutrum amet, magna placerat., createdAt=2021-08-04T09:38:32))
2021-08-10 07:04:53 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5480013627008275040, userId=9213708519863530342, text=fringilla placerat. vitae fringilla nec consectetur ipsum sit Kafka euismod euismod rutrum fringilla adipiscing suscipit magna, createdAt=2021-08-04T10:29:13))
2021-08-10 07:04:53 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4463042282195720904, userId=5127888686107486476, text=adipiscing amet, elit. magna adipiscing nec rutrum placerat. Kafka Nam rutrum euismod sit consectetur Vivamus nisl, createdAt=2021-08-04T10:47:14))
2021-08-10 07:04:54 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3337827532615827075, userId=3310655806220965498, text=magna nisl Nam vitae magna fringilla sit Lorem Kafka velit Lorem euismod nec Lorem consectetur nisl, createdAt=2021-08-04T11:01:42))
2021-08-10 07:04:54 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=3214614981096370670, userId=7479717686146702982, text=ipsum vitae magna elit. amet, rutrum consectetur tempus Kafka sit tempus vitae magna velit placerat. Lorem, createdAt=2021-08-04T11:17:14))
2021-08-10 07:04:55 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8805938261373092211, userId=5415231685880952062, text=consectetur consectetur elit. sit Lorem consectetur fringilla tempus Kafka Vivamus elit. fringilla dolor ipsum velit adipiscing, createdAt=2021-08-04T11:22:24))
2021-08-10 07:04:55 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1540385367991723131, userId=3674150654713415852, text=elit. adipiscing adipiscing placerat. amet, suscipit consectetur adipiscing Kafka adipiscing dolor tempus ipsum tempus vitae suscipit, createdAt=2021-08-04T11:44:48))
2021-08-10 07:04:56 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1218870450993035844, userId=8886360907688889257, text=nec nec magna sit vitae ipsum Vivamus elit. Kafka ipsum Nam placerat. consectetur consectetur vitae consectetur, createdAt=2021-08-04T12:22:39))
2021-08-10 07:04:56 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1151764893570989669, userId=3526388059267136485, text=Lorem dolor amet, elit. amet, fringilla vitae Lorem Kafka euismod suscipit rutrum adipiscing velit adipiscing nisl, createdAt=2021-08-04T12:35:49))
2021-08-10 07:04:57 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=846530311146516383, userId=2411920010417686414, text=vitae adipiscing dolor fringilla dolor Lorem dolor magna Kafka rutrum consectetur nec vitae amet, dolor nisl, createdAt=2021-08-04T12:41:49))
2021-08-10 07:04:57 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4524601398871312047, userId=6767503800436987788, text=amet, suscipit dolor dolor consectetur placerat. dolor suscipit Kafka tempus euismod suscipit adipiscing magna adipiscing amet,, createdAt=2021-08-04T13:07:39))
2021-08-10 07:04:58 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5253114862936497263, userId=5600515439893525289, text=ipsum placerat. magna Lorem rutrum suscipit amet, ipsum Kafka dolor ipsum nec adipiscing fringilla magna Nam, createdAt=2021-08-04T13:10:59))
2021-08-10 07:04:58 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4191277674814111856, userId=1921342847007574562, text=vitae Nam consectetur fringilla Nam velit suscipit ipsum Kafka suscipit magna vitae euismod fringilla dolor adipiscing, createdAt=2021-08-04T13:56:30))
2021-08-10 07:04:59 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6133433454734757439, userId=8504728347255856740, text=elit. nec elit. adipiscing elit. vitae vitae Vivamus Kafka fringilla dolor magna sit fringilla Nam Vivamus, createdAt=2021-08-04T13:58:50))
2021-08-10 07:04:59 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=8481637974355146871, userId=4591449018290398860, text=tempus magna velit rutrum sit adipiscing amet, amet, Kafka euismod placerat. Nam nec rutrum Nam adipiscing, createdAt=2021-08-09T10:01:53))
2021-08-10 07:04:59 [parallel-1] INFO  reactor.Flux.Map.11 - request(24)
2021-08-10 07:05:00 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=2530832927489590503, userId=1173147168581514784, text=nec euismod magna consectetur velit sit vitae Vivamus Kafka nec velit Lorem euismod elit. euismod dolor, createdAt=2021-08-09T10:13:24))
2021-08-10 07:05:00 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=5651956714437729426, userId=8347937337124892264, text=magna ipsum Nam dolor amet, nec Vivamus Nam Kafka tempus magna consectetur Nam rutrum elit. rutrum, createdAt=2021-08-09T10:46:24))
2021-08-10 07:05:01 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4274675491240721927, userId=1178779285692089550, text=tempus vitae Nam rutrum suscipit elit. nec Nam Kafka amet, suscipit placerat. euismod Vivamus fringilla ipsum, createdAt=2021-08-09T11:15:55))
2021-08-10 07:05:01 [parallel-1] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1630859238081828914, userId=7516421635254696081, text=vitae nisl adipiscing magna Nam Lorem nec fringilla Kafka magna rutrum elit. euismod rutrum ipsum elit., createdAt=2021-08-09T11:16:45))
2021-08-10 07:05:02 [parallel-2] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=4035349907812627328, userId=6801028080006446782, text=tempus Vivamus euismod nisl amet, nec Nam velit Kafka sit nisl sit sit nisl suscipit adipiscing, createdAt=2021-08-09T11:34:15))
2021-08-10 07:05:02 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=7979313183962266900, userId=5962969246156859791, text=sit dolor adipiscing amet, Nam fringilla amet, sit Kafka magna Nam euismod nisl tempus placerat. adipiscing, createdAt=2021-08-09T11:50:15))
2021-08-10 07:05:03 [parallel-4] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=6689035530264560010, userId=1287184796345753057, text=consectetur fringilla nec euismod consectetur tempus tempus suscipit Kafka consectetur euismod consectetur sit rutrum adipiscing elit., createdAt=2021-08-09T13:14:07))
2021-08-10 07:05:03 [parallel-4] INFO  reactor.Flux.Map.11 - onComplete()
2021-08-10 07:42:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2021-08-10 07:42:21 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2021-08-10 07:42:23 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service, config-client, profiles=[reactive_elastic_query], label=null, version=2079f28b01be9455793e58ffd51d37bfc35710b9, state=null
2021-08-10 07:42:23 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/mcwiekala/config-server-repository/config-client-reactive_elastic_query.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/mcwiekala/config-server-repository/config-client.yml'}]
2021-08-10 07:42:23 [main] INFO  p.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2021-08-10 07:42:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-08-10 07:42:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45ms. Found 0 Elasticsearch repository interfaces.
2021-08-10 07:42:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-08-10 07:42:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16ms. Found 1 Reactive Elasticsearch repository interfaces.
2021-08-10 07:42:24 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=a626301a-430f-3515-bf4d-6f253a749d20
2021-08-10 07:42:24 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-08-10 07:42:24 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-08-10 07:42:24 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-08-10 07:42:24 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-08-10 07:42:25 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2021-08-10 07:42:25 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2021-08-10 07:42:25 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2021-08-10 07:42:25 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2021-08-10 07:42:25 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch cluster: 7.9.1
2021-08-10 07:42:25 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 011f8fcb-a928-49f3-a314-b0d4598e7d79

2021-08-10 07:42:27 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8183
2021-08-10 07:42:29 [main] INFO  p.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 9.807 seconds (JVM running for 11.974)
2021-08-10 07:43:38 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 07:43:38 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 07:43:38 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 07:43:38 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 07:43:38 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - request(1)
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@727ebcec, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 07:43:38 [reactor-http-nio-1] ERROR reactor.Flux.Map.1 - onError(org.springframework.data.elasticsearch.UncategorizedElasticsearchException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]], Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]; nested exception is ElasticsearchStatusException[Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]], Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]]; nested: ElasticsearchException[Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]];)
2021-08-10 07:43:38 [reactor-http-nio-1] ERROR reactor.Flux.Map.1 - 
org.springframework.data.elasticsearch.UncategorizedElasticsearchException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]], Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]; nested exception is ElasticsearchStatusException[Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]], Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]]; nested: ElasticsearchException[Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]];
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:67)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.translateException(ReactiveElasticsearchTemplate.java:796)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:6504)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:88)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:408)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:485)
	at reactor.core.publisher.Operators.complete(Operators.java:135)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:374)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:214)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:834)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:600)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:580)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:443)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:126)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:196)
	at reactor.core.publisher.EmitterProcessor.checkTerminated(EmitterProcessor.java:489)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:356)
	at reactor.core.publisher.EmitterProcessor.onError(EmitterProcessor.java:286)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:834)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:600)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:580)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:855)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:1006)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:247)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:227)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:135)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:385)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:96)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:330)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:152)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:374)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:373)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:429)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:655)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.elasticsearch.ElasticsearchStatusException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]], Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.contentOrError(DefaultReactiveElasticsearchClient.java:850)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.lambda$handleClientError$34(DefaultReactiveElasticsearchClient.java:828)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	... 43 common frames omitted
Caused by: org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]
	at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:496)
	at org.elasticsearch.ElasticsearchException.failureFromXContent(ElasticsearchException.java:603)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.getElasticsearchException(DefaultReactiveElasticsearchClient.java:875)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.contentOrError(DefaultReactiveElasticsearchClient.java:845)
	... 45 common frames omitted
	Suppressed: org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]
		at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:496)
		at org.elasticsearch.ElasticsearchException.fromXContent(ElasticsearchException.java:407)
		at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:469)
		... 48 common frames omitted
2021-08-10 07:43:38 [reactor-http-nio-1] ERROR p.m.d.e.q.s.c.a.e.h.ElasticQueryServiceErrorHandler - Service runtime exception!
org.springframework.data.elasticsearch.UncategorizedElasticsearchException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]], Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]; nested exception is ElasticsearchStatusException[Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]], Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]]; nested: ElasticsearchException[Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]];
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:67)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler pl.microservices.demo.reactive.elastic.query.service.api.ElasticDocumentController#getDocumentByText(ElasticQueryServiceRequestModel) [DispatcherHandler]
Stack trace:
		at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:67)
		at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.translateException(ReactiveElasticsearchTemplate.java:796)
		at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:6504)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:88)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:408)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:485)
		at reactor.core.publisher.Operators.complete(Operators.java:135)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:374)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:214)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:834)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:600)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:580)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:443)
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:126)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:196)
		at reactor.core.publisher.EmitterProcessor.checkTerminated(EmitterProcessor.java:489)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:356)
		at reactor.core.publisher.EmitterProcessor.onError(EmitterProcessor.java:286)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:834)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:600)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:580)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:855)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:1006)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:247)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:227)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:135)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:96)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:330)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:152)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:374)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:373)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:429)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:655)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.elasticsearch.ElasticsearchStatusException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]], Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.contentOrError(DefaultReactiveElasticsearchClient.java:850)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.lambda$handleClientError$34(DefaultReactiveElasticsearchClient.java:828)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:385)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:96)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:330)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:152)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:374)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:373)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:429)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:655)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]
	at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:496)
	at org.elasticsearch.ElasticsearchException.failureFromXContent(ElasticsearchException.java:603)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.getElasticsearchException(DefaultReactiveElasticsearchClient.java:875)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.contentOrError(DefaultReactiveElasticsearchClient.java:845)
	... 45 common frames omitted
	Suppressed: org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=index_not_found_exception, reason=no such index [twitter-index]]
		at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:496)
		at org.elasticsearch.ElasticsearchException.fromXContent(ElasticsearchException.java:407)
		at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:469)
		... 48 common frames omitted
2021-08-10 09:02:42 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2021-08-10 09:02:43 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2021-08-10 09:02:47 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service, config-client, profiles=[reactive_elastic_query], label=null, version=2079f28b01be9455793e58ffd51d37bfc35710b9, state=null
2021-08-10 09:02:47 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/mcwiekala/config-server-repository/config-client-reactive_elastic_query.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/mcwiekala/config-server-repository/config-client.yml'}]
2021-08-10 09:02:47 [main] INFO  p.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2021-08-10 09:02:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-08-10 09:02:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49ms. Found 0 Elasticsearch repository interfaces.
2021-08-10 09:02:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-08-10 09:02:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17ms. Found 1 Reactive Elasticsearch repository interfaces.
2021-08-10 09:02:48 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=a626301a-430f-3515-bf4d-6f253a749d20
2021-08-10 09:02:48 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-08-10 09:02:48 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-08-10 09:02:48 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-08-10 09:02:48 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-08-10 09:02:49 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: df2f1c12-ac6c-4bb2-9bd4-c2317eae480b

2021-08-10 09:02:51 [main] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2021-08-10 09:02:51 [main] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2021-08-10 09:02:51 [main] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2021-08-10 09:02:51 [main] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2021-08-10 09:02:52 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8183
2021-08-10 09:02:54 [main] INFO  p.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 12.673 seconds (JVM running for 15.377)
2021-08-10 09:20:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 09:20:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 09:20:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 09:20:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@2ca236a8, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:20:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@2ca236a8, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:20:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:20:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - request(1)
2021-08-10 09:20:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@2ca236a8, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:20:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@2ca236a8, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:20:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@2ca236a8, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:20:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@2ca236a8, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:20:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@2ca236a8, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:20:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@2ca236a8, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:20:11 [reactor-http-nio-3] ERROR reactor.Flux.Map.1 - onError(org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.)
2021-08-10 09:20:11 [reactor-http-nio-3] ERROR reactor.Flux.Map.1 - 
org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
	at reactor.core.publisher.MonoErrorSupplied.call(MonoErrorSupplied.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2021)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:390)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:251)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:252)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:87)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:197)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:213)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:255)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:406)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243)
	at reactor.core.publisher.DirectProcessor$DirectInner.onNext(DirectProcessor.java:339)
	at reactor.core.publisher.DirectProcessor.onNext(DirectProcessor.java:148)
	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:180)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$TcpClientSubscriber.onError(HttpClientConnect.java:353)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.resources.PooledConnectionProvider$DisposableAcquire.onError(PooledConnectionProvider.java:521)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:423)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$5(SimpleDequePool.java:253)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:172)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:302)
	at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:252)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:608)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-10 09:20:11 [reactor-http-nio-3] ERROR p.m.d.e.q.s.c.a.e.h.ElasticQueryServiceErrorHandler - Service runtime exception!
org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler pl.microservices.demo.reactive.elastic.query.service.api.ElasticDocumentController#getDocumentByText(ElasticQueryServiceRequestModel) [DispatcherHandler]
Stack trace:
		at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
		at reactor.core.publisher.MonoErrorSupplied.call(MonoErrorSupplied.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2021)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:251)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:252)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:87)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:197)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:213)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:255)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:406)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243)
		at reactor.core.publisher.DirectProcessor$DirectInner.onNext(DirectProcessor.java:339)
		at reactor.core.publisher.DirectProcessor.onNext(DirectProcessor.java:148)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$TcpClientSubscriber.onError(HttpClientConnect.java:353)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.resources.PooledConnectionProvider$DisposableAcquire.onError(PooledConnectionProvider.java:521)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:423)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$5(SimpleDequePool.java:253)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:172)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:302)
		at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:252)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:608)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2021-08-10 09:23:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 09:23:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 09:23:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 09:23:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@cca0258, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@cca0258, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:23:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - request(1)
2021-08-10 09:23:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@cca0258, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:10 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@cca0258, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:10 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@cca0258, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:10 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@cca0258, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:10 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@cca0258, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:10 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@cca0258, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:11 [parallel-1] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=1, userId=1, text=test multi word1, createdAt=2021-07-23T18:25:43))
2021-08-10 09:23:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.2 - request(31)
2021-08-10 09:23:11 [parallel-2] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 09:23:11 [parallel-2] INFO  reactor.Flux.Map.2 - onComplete()
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4d1c7277, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4d1c7277, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  reactor.Flux.Map.3 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  reactor.Flux.Map.3 - request(1)
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4d1c7277, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4d1c7277, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4d1c7277, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:23:15 [reactor-http-nio-3] INFO  reactor.Flux.Map.3 - onComplete()
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@40314c74, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@40314c74, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - request(1)
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@40314c74, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@40314c74, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@40314c74, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@40314c74, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@40314c74, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:23 [parallel-3] INFO  reactor.Flux.Map.4 - onNext(ElasticQueryServiceResponseModel(id=1, userId=1, text=test multi word1, createdAt=2021-07-23T18:25:43))
2021-08-10 09:35:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.4 - request(31)
2021-08-10 09:35:24 [parallel-4] INFO  reactor.Flux.Map.4 - onNext(ElasticQueryServiceResponseModel(id=3, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 09:35:24 [parallel-4] INFO  reactor.Flux.Map.4 - onComplete()
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  reactor.Flux.Map.5 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@756c0b16, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  reactor.Flux.Map.5 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@756c0b16, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  reactor.Flux.Map.5 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  reactor.Flux.Map.5 - request(1)
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  reactor.Flux.Map.5 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@756c0b16, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:26 [reactor-http-nio-3] INFO  reactor.Flux.Map.5 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@756c0b16, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:27 [reactor-http-nio-3] INFO  reactor.Flux.Map.5 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@756c0b16, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:35:27 [reactor-http-nio-3] INFO  reactor.Flux.Map.5 - onComplete()
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  reactor.Flux.Map.6 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4a2c42cf, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  reactor.Flux.Map.6 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4a2c42cf, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  reactor.Flux.Map.6 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  reactor.Flux.Map.6 - request(1)
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  reactor.Flux.Map.6 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4a2c42cf, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  reactor.Flux.Map.6 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4a2c42cf, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  reactor.Flux.Map.6 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4a2c42cf, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:36:17 [reactor-http-nio-3] INFO  reactor.Flux.Map.6 - onComplete()
2021-08-10 09:45:49 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 09:45:49 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 09:45:49 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 09:45:49 [reactor-http-nio-4] INFO  reactor.Flux.Map.7 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7845f22c, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:49 [reactor-http-nio-4] INFO  reactor.Flux.Map.7 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7845f22c, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:49 [reactor-http-nio-4] INFO  reactor.Flux.Map.7 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:45:49 [reactor-http-nio-4] INFO  reactor.Flux.Map.7 - request(1)
2021-08-10 09:45:49 [reactor-http-nio-3] INFO  reactor.Flux.Map.7 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7845f22c, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:49 [reactor-http-nio-3] INFO  reactor.Flux.Map.7 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7845f22c, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:49 [reactor-http-nio-3] INFO  reactor.Flux.Map.7 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7845f22c, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:49 [reactor-http-nio-3] INFO  reactor.Flux.Map.7 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7845f22c, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:49 [reactor-http-nio-3] INFO  reactor.Flux.Map.7 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7845f22c, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:49 [parallel-1] INFO  reactor.Flux.Map.7 - onNext(ElasticQueryServiceResponseModel(id=1, userId=1, text=test multi word1, createdAt=2021-07-23T18:25:43))
2021-08-10 09:45:49 [reactor-http-nio-4] INFO  reactor.Flux.Map.7 - request(31)
2021-08-10 09:45:50 [parallel-2] INFO  reactor.Flux.Map.7 - onNext(ElasticQueryServiceResponseModel(id=3, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 09:45:50 [parallel-2] INFO  reactor.Flux.Map.7 - onComplete()
2021-08-10 09:45:53 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 09:45:53 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 09:45:53 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 09:45:53 [reactor-http-nio-4] INFO  reactor.Flux.Map.8 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4f05bcf5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:53 [reactor-http-nio-4] INFO  reactor.Flux.Map.8 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4f05bcf5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:53 [reactor-http-nio-4] INFO  reactor.Flux.Map.8 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:45:53 [reactor-http-nio-4] INFO  reactor.Flux.Map.8 - request(1)
2021-08-10 09:45:53 [reactor-http-nio-3] INFO  reactor.Flux.Map.8 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4f05bcf5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:53 [reactor-http-nio-3] INFO  reactor.Flux.Map.8 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4f05bcf5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:53 [reactor-http-nio-3] INFO  reactor.Flux.Map.8 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4f05bcf5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:45:53 [reactor-http-nio-3] INFO  reactor.Flux.Map.8 - onComplete()
2021-08-10 09:46:11 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 09:46:11 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 09:46:11 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 09:46:11 [reactor-http-nio-4] INFO  reactor.Flux.Map.9 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@16ed7146, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:11 [reactor-http-nio-4] INFO  reactor.Flux.Map.9 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@16ed7146, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:11 [reactor-http-nio-4] INFO  reactor.Flux.Map.9 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:46:11 [reactor-http-nio-4] INFO  reactor.Flux.Map.9 - request(1)
2021-08-10 09:46:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.9 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@16ed7146, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.9 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@16ed7146, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.9 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@16ed7146, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:11 [reactor-http-nio-3] INFO  reactor.Flux.Map.9 - onComplete()
2021-08-10 09:46:19 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'kafka'
2021-08-10 09:46:19 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'kafka'
2021-08-10 09:46:19 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2021-08-10 09:46:19 [reactor-http-nio-4] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@22529eb3, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:19 [reactor-http-nio-4] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@22529eb3, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:19 [reactor-http-nio-4] INFO  reactor.Flux.Map.10 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:46:19 [reactor-http-nio-4] INFO  reactor.Flux.Map.10 - request(1)
2021-08-10 09:46:19 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@22529eb3, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:19 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@22529eb3, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:19 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@22529eb3, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:19 [reactor-http-nio-3] INFO  reactor.Flux.Map.10 - onComplete()
2021-08-10 09:46:22 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 09:46:22 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 09:46:22 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 09:46:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7343c637, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7343c637, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.11 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:46:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.11 - request(1)
2021-08-10 09:46:22 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7343c637, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:22 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7343c637, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:22 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7343c637, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:22 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7343c637, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:22 [reactor-http-nio-3] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7343c637, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:22 [parallel-3] INFO  reactor.Flux.Map.11 - onNext(ElasticQueryServiceResponseModel(id=1, userId=1, text=test multi word1, createdAt=2021-07-23T18:25:43))
2021-08-10 09:46:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.11 - request(31)
2021-08-10 09:46:23 [reactor-http-nio-4] INFO  reactor.Flux.Map.11 - cancel()
2021-08-10 09:46:23 [reactor-http-nio-4] INFO  reactor.Flux.Map.11 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7343c637, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  reactor.Flux.Map.12 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@68e37916, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  reactor.Flux.Map.12 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@68e37916, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  reactor.Flux.Map.12 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  reactor.Flux.Map.12 - request(1)
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.12 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@68e37916, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.12 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@68e37916, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.12 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@68e37916, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.12 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@68e37916, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.12 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@68e37916, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  reactor.Flux.Map.12 - cancel()
2021-08-10 09:46:23 [reactor-http-nio-1] INFO  reactor.Flux.Map.12 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@68e37916, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-2] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 09:46:23 [reactor-http-nio-2] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 09:46:23 [reactor-http-nio-2] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 09:46:23 [reactor-http-nio-2] INFO  reactor.Flux.Map.13 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@472e2e90, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-2] INFO  reactor.Flux.Map.13 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@472e2e90, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-2] INFO  reactor.Flux.Map.13 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 09:46:23 [reactor-http-nio-2] INFO  reactor.Flux.Map.13 - request(1)
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.13 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@472e2e90, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.13 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@472e2e90, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.13 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@472e2e90, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.13 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@472e2e90, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:23 [reactor-http-nio-3] INFO  reactor.Flux.Map.13 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@472e2e90, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 09:46:24 [parallel-2] INFO  reactor.Flux.Map.13 - onNext(ElasticQueryServiceResponseModel(id=1, userId=1, text=test multi word1, createdAt=2021-07-23T18:25:43))
2021-08-10 09:46:24 [reactor-http-nio-2] INFO  reactor.Flux.Map.13 - request(31)
2021-08-10 09:46:24 [parallel-3] INFO  reactor.Flux.Map.13 - onNext(ElasticQueryServiceResponseModel(id=3, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 09:46:24 [parallel-3] INFO  reactor.Flux.Map.13 - onComplete()
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7ca3bff2, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7ca3bff2, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - request(1)
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7ca3bff2, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7ca3bff2, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7ca3bff2, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7ca3bff2, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:06:09 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@7ca3bff2, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:06:10 [parallel-4] INFO  reactor.Flux.Map.14 - onNext(ElasticQueryServiceResponseModel(id=1, userId=1, text=test multi word1, createdAt=2021-07-23T18:25:43))
2021-08-10 10:06:10 [reactor-http-nio-3] INFO  reactor.Flux.Map.14 - request(31)
2021-08-10 10:06:10 [parallel-1] INFO  reactor.Flux.Map.14 - onNext(ElasticQueryServiceResponseModel(id=3, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 10:06:10 [parallel-1] INFO  reactor.Flux.Map.14 - onComplete()
2021-08-10 10:08:15 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterElasticQueryClient - Querying reactive elasticsearch for text: 'test'
2021-08-10 10:08:15 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text: 'test'
2021-08-10 10:08:15 [reactor-http-nio-4] INFO  p.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text test!
2021-08-10 10:08:15 [reactor-http-nio-4] INFO  reactor.Flux.Map.15 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@780c0ec5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:08:15 [reactor-http-nio-4] INFO  reactor.Flux.Map.15 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@780c0ec5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:08:15 [reactor-http-nio-4] INFO  reactor.Flux.Map.15 - onSubscribe(FluxMap.MapSubscriber)
2021-08-10 10:08:15 [reactor-http-nio-4] INFO  reactor.Flux.Map.15 - request(1)
2021-08-10 10:08:16 [reactor-http-nio-3] INFO  reactor.Flux.Map.15 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@780c0ec5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:08:16 [reactor-http-nio-3] INFO  reactor.Flux.Map.15 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@780c0ec5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:08:16 [reactor-http-nio-3] INFO  reactor.Flux.Map.15 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@780c0ec5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:08:16 [reactor-http-nio-3] INFO  reactor.Flux.Map.15 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@780c0ec5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:08:16 [reactor-http-nio-3] INFO  reactor.Flux.Map.15 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@780c0ec5, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2021-08-10 10:08:16 [parallel-2] INFO  reactor.Flux.Map.15 - onNext(ElasticQueryServiceResponseModel(id=1, userId=1, text=test multi word1, createdAt=2021-07-23T18:25:43))
2021-08-10 10:08:16 [reactor-http-nio-4] INFO  reactor.Flux.Map.15 - request(31)
2021-08-10 10:08:17 [parallel-3] INFO  reactor.Flux.Map.15 - onNext(ElasticQueryServiceResponseModel(id=3, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 10:08:17 [parallel-4] INFO  reactor.Flux.Map.15 - onNext(ElasticQueryServiceResponseModel(id=4, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 10:08:18 [parallel-1] INFO  reactor.Flux.Map.15 - onNext(ElasticQueryServiceResponseModel(id=5, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 10:08:18 [parallel-2] INFO  reactor.Flux.Map.15 - onNext(ElasticQueryServiceResponseModel(id=6, userId=3, text=test multi word3, createdAt=2021-07-23T18:25:43))
2021-08-10 10:08:18 [parallel-2] INFO  reactor.Flux.Map.15 - onComplete()
